<!doctype html>
<html><head>

<title>PE.js mscorlib.dll...</title>
<style>
body {
  overflow: none;
  margin: 0px;
  padding: 0px;
  height: 100%;
  font-family: 'Segoe UI', 'Ubuntu', 'Roboto', 'Droid Sans', 'Helvetica', 'sans-serif';
}

html {
  overflow: auto;
  margin: 0px;
  padding: 0px;
}
.pe-boot {
  position: absolute;
  overflow: auto;
  height: 100%;
  width: 100%;
  background: white;
}

.pe-boot-title-container {
  margin-top: 10em;
  width: 20em;
  margin-left: auto;
  margin-right: auto;
}

.pe-boot-title {
  font-size: 350%;
  font-weight: 200;
}



.pe-boot-progress {
  margin-top: 0.5em;
  height: 3px;
  background: silver;
}

.pe-boot-progress-caption-container {
  float: right;
}

.pe-boot-progress-caption {
  position: absolute;
  font-size: 90%;
  margin-left: -1em;
  margin-top: -1.5em;
  opacity: 0.5;
  font-weight: 100;
}


.pe-boot-version {
  text-align: right;
  font-size: 90%;
}

.pe-boot-details {
  margin-top: 4em;
  margin-left: 10em;
  margin-right: 10em;
}

.pe-boot-progress .pe-loading-getdata {
  height: 3px;
  background: gray;
}

.pe-boot-progress .pe-loading-unmanaged {
  height: 3px;
  background: gold;
}

.pe-boot-progress .pe-loading-managed {
  height: 3px;
  background: forestgreen;
}
.pe-page-header {
  position: fixed;
  top: 0px; left: 0px;
  height: 6em;
  width: 100%;
  z-index: 1000;
}


.pe-page-treedetails {
  margin-top: 6em;
  min-height: 60%;
}

.pe-page-tree {
  float: left;
  width: 25%;
  border-right: solid 1px silver;
  overflow: auto;
}

.pe-page-details {
  margin-left: 25%;
  overflow: auto;
}

.pe-tree-node {
  cursor: hand; cursor: pointer;
  padding: 3px;
  white-space: nowrap;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.pe-tree-icon {
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  border: solid 3px silver;
  margin: 1px;
  margin-right: 4px;
}
.pe-tree-node-children {
  margin-left:0.8em;
  margin-bottom: 1em;
}
.pe-page-managed {
}


.pe-assembly-details-table {
  background: white;
  width:100%;
}

.pe-assembly-details-title {
  font-size: 300%;
  font-weight: 100;
}

.pe-assembly-details-table .pe-label {
  opacity: 0.5;
  cursor: default;
}

.pe-assembly-details-table .pe-value {
  
}


.pe-type .pe-tree-icon {
  border-color: cornflowerblue;
}

.pe-method .pe-tree-icon {
  border-color: tomato;
}

.pe-field .pe-tree-icon {
  border-color: black;
}
</style>

</head>
<body>

<div id="dragSite"><div class="pe-page-managed">

  <div class="pe-page-header">
    <!-- assembly details -->

    <!-- ko template: { data: details, name: 'AssemblyDetails' } --><table class="pe-assembly-details-table" cellspacing="0" cellpadding="0">
<tbody><tr><td>

  <div class="pe-assembly-details-title">
    <span data-bind="text: name">mscorlib</span>
  </div>

</td><td width="20" style="with: 20px;">
  
  <input type="file" data-bind="attach: $parent.attachFileInput($element)">
  
</td><td>

  <div>
    <span class="pe-label">version</span>
    <span class="pe-value" data-bind="text: version">4.0.0.0</span>
  </div>

  <div data-bind="visible: publicKey" style="display: none;">
    <span class="pe-label">public key</span>
    <span class="pe-value" data-bind="text: publicKey"></span>
  </div>

  <div>
    <span class="pe-label">runtime</span>
    <span class="pe-value" data-bind="text: specificRuntimeVersion">v4.0.30319</span>
    <span class="pe-label" data-bind="text: '('+runtimeVersion+')'">(2.5)</span>
  </div>

  <div>
    <span class="pe-label">mvid</span>
    <span class="pe-value" data-bind="text: mvid"></span>
  </div>

</td></tr>
</tbody></table>

<!-- /ko -->
  </div>
  
  <!-- tree-details view -->
  <div class="pe-page-treedetails">
  <div class="pe-page-tree" data-bind="click: nodeClick">
    <!-- ko template: { data: peHeaders, name: 'PEHeadersNode' } --><div class="pe-tree-node" data-bind="click: click">
  <span class="pe-tree-icon"></span>
  <span>PE Headers</span>
</div><!-- /ko -->
    <!-- ko template: { data: references, name: 'ReferencesNode' } --><div class="pe-tree-node">
  <span class="pe-tree-icon"></span>
  <span>References</span>
</div><!-- /ko -->
    <!-- ko template: { foreach: namespaces, name: 'NamespaceNode' } --><div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Microsoft.Win32</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Microsoft.Win32.SafeHandles</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Globalization.Unicode</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Interop</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Math</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Math.Prime</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Math.Prime.Generator</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Security</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Security.Authenticode</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Security.Cryptography</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Security.X509</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Security.X509.Extensions</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">Mono.Xml</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Collections</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Collections.Concurrent</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Collections.Concurrent.Partitioners</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Collections.Generic</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Collections.ObjectModel</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Configuration.Assemblies</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Deployment.Internal</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Diagnostics</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Diagnostics.CodeAnalysis</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Diagnostics.Contracts</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Diagnostics.Contracts.Internal</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Diagnostics.SymbolStore</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Globalization</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.IO</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.IO.IsolatedStorage</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Reflection</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Reflection.Emit</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Resources</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.CompilerServices</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.ConstrainedExecution</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.ExceptionServices</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Hosting</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.InteropServices</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.InteropServices.ComTypes</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.InteropServices.Expando</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Activation</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Channels</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Contexts</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Lifetime</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Messaging</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Metadata</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Metadata.W3cXsd2001</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Proxies</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Remoting.Services</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Serialization</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Serialization.Formatters</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Serialization.Formatters.Binary</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Runtime.Versioning</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.AccessControl</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.Cryptography</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.Cryptography.X509Certificates</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.Permissions</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.Policy</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Security.Principal</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Text</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Threading</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">System.Threading.Tasks</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<div class="pe-tree-node pe-namespace">
  <span class="pe-tree-icon"></span><span data-bind="text: name?name:'{root}'">null</span>
</div>
<div class="pe-tree-node-children" data-bind="visible: isExpanded" style="display: none;">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
<!-- /ko -->
    <!-- ko template: { data: unmanagedImports, name: 'UnmanagedImportsNode', if: unmanagedImports } --><!-- /ko -->
    <!-- ko template: { data: unmanagedResources, name: 'UnmanagedResourcesNode', if: unmanagedResources } --><div class="pe-tree-node" data-bind="click: click">
  <span class="pe-tree-icon"></span>
  <span>PE Resources</span>
</div>
<!-- ko if: isExpanded --><!-- /ko --><!-- /ko -->
  </div>

  <div class="pe-page-details">

<!-- debug info
    <div style="background: silver">
      <div><b>selectedNode(): </b><span data-bind="text: selectedNode()"></span></div>
      <div><b>data: </b><span data-bind="text: selectedNode() ? selectedNode().details : '<selectedNode=null>'"></span></div>
      <div><b>name: </b><span data-bind="text: selectedNode()&&selectedNode().details&&selectedNode().details.constructor ? selectedNode().details.constructor.name : '<chain-none>'"></span></div>
    </div>
-->
    
    <!-- ko if: selectedNode()&&selectedNode().details&&selectedNode().details.constructor --><!-- /ko -->
    
  </div>
  </div>

</div></div>

<!-- Early init -->
<script>(function() {

  //  early init logic

  var bootShadowDiv = document.createElement('div');
  bootShadowDiv.className = 'pe-boot-shadow';
  if ('textContent' in bootShadowDiv)
    bootShadowDiv.textContent = 'Loading...';
  else
    bootShadowDiv.innerText = 'Loading...';

  var dragSite = document.getElementById('dragSite');

  dragSite.appendChild(bootShadowDiv);

})()
</script>


<!-- Knockout HTML templates -->
<script id="Boot" type="text/html"><div class=pe-boot>

  <div class=pe-boot-title-container>
    <div class=pe-boot-title>PE.js</div>
    <div class=pe-boot-progress
         ><div
               data-bind="style: { width: Math.floor(loading.progressRatio()*100)+'%' }, css: loading.className"
               ><div
                     class=pe-boot-progress-caption-container
                     ><div
                           class=pe-boot-progress-caption
                           data-bind="text: Math.floor(loading.progressRatio()*100)+'%'"
                         ></div></div></div></div>
    <div class=pe-boot-version>v<span data-bind="text: appVersion">0.1??</span></div>
  </div>

  <div class=pe-boot-details>
    HTML tool for parsing EXE, DLL and SYS files alike, especially compiled managed .NET code like C# binaries.
    Showing guts and headers and multitude of internal fields, timestamps and flags.
    <br>
    There is no upload to any server whatsoever, all the processing is done entirely within HTML and JavaScript page.
    No extra permissions are required.
  </div>
  
</div></script>
<script id="Managed" type="text/html"><div class=pe-page-managed>

  <div class=pe-page-header>
    <!-- assembly details -->

    <!-- ko template: { data: details, name: 'AssemblyDetails' } --><!-- /ko -->
  </div>
  
  <!-- tree-details view -->
  <div class=pe-page-treedetails>
  <div class=pe-page-tree
       data-bind="click: nodeClick">
    <!-- ko template: { data: peHeaders, name: 'PEHeadersNode' } --><!-- /ko -->
    <!-- ko template: { data: references, name: 'ReferencesNode' } --><!-- /ko -->
    <!-- ko template: { foreach: namespaces, name: 'NamespaceNode' } --><!-- /ko -->
    <!-- ko template: { data: unmanagedImports, name: 'UnmanagedImportsNode', if: unmanagedImports } --><!-- /ko -->
    <!-- ko template: { data: unmanagedResources, name: 'UnmanagedResourcesNode', if: unmanagedResources } --><!-- /ko -->
  </div>

  <div class=pe-page-details>

<!-- debug info
    <div style="background: silver">
      <div><b>selectedNode(): </b><span data-bind="text: selectedNode()"></span></div>
      <div><b>data: </b><span data-bind="text: selectedNode() ? selectedNode().details : '<selectedNode=null>'"></span></div>
      <div><b>name: </b><span data-bind="text: selectedNode()&&selectedNode().details&&selectedNode().details.constructor ? selectedNode().details.constructor.name : '<chain-none>'"></span></div>
    </div>
-->
    
    <!-- ko if: selectedNode()&&selectedNode().details&&selectedNode().details.constructor -->
    <!-- ko template: { 
        data: selectedNode().details,
        name: selectedNode().details.constructor.name 
       }--><!-- /ko -->
<!-- /ko -->
    
  </div>
  </div>

</div></script>
<script id="Unmanaged" type="text/html">--- this is app/layout/unmanaged / page.html ---</script>

<script id="AssemblyDetails" type="text/html"><table class=pe-assembly-details-table
   cellspacing=0 cellpadding=0>
<tr><td>

  <div class=pe-assembly-details-title>
    <span data-bind="text: name"></span>
  </div>

</td><td width=20 style="with: 20px;">
  
  <input type=file data-bind="attach: $parent.attachFileInput($element)">
  
</td><td>

  <div>
    <span class=pe-label>version</span>
    <span class=pe-value data-bind="text: version"></span>
  </div>

  <div data-bind="visible: publicKey">
    <span class=pe-label>public key</span>
    <span class=pe-value data-bind="text: publicKey"></span>
  </div>

  <div>
    <span class=pe-label>runtime</span>
    <span class=pe-value data-bind="text: specificRuntimeVersion"></span>
    <span class=pe-label data-bind="text: '('+runtimeVersion+')'"></span>
  </div>

  <div>
    <span class=pe-label>mvid</span>
    <span class=pe-value data-bind="text: mvid"></span>
  </div>

</td></tr>
</table>

</script>
<script id="FieldNode" type="text/html"><div class="pe-tree-node pe-field">
  <span class=pe-tree-icon></span>
  <span data-bind="text: name"></span>: object
</div></script>
<script id="MethodNode" type="text/html"><div class="pe-tree-node pe-method">
  <span class=pe-tree-icon></span>
  <span data-bind="text: name"></span>()
</div></script>
<script id="NamespaceNode" type="text/html"><div class='pe-tree-node pe-namespace'>
  <span class=pe-tree-icon></span><span data-bind="text: name?name:'{root}'"></span>
</div>
<div class=pe-tree-node-children
     data-bind="visible: isExpanded">
<!-- ko template: { foreach: types, name: 'TypeNode' } --><!-- /ko -->
</div>
</script>
<script id="PEHeadersNode" type="text/html"><div class=pe-tree-node data-bind="click: click">
  <span class=pe-tree-icon></span>
  <span>PE Headers</span>
</div></script>
<script id="PropertyNode" type="text/html"><div class="pe-tree-node pe-property">
  <span class=pe-tree-icon></span>
  <span data-bind="text: name"></span> { get; set; }
</div></script>
<script id="ReferencesNode" type="text/html"><div class=pe-tree-node>
  <span class=pe-tree-icon></span>
  <span>References</span>
</div></script>
<script id="TypeNode" type="text/html"><div class='pe-tree-node pe-type'>
  <span class=pe-tree-icon></span>
  <span data-bind="text: name"></span>
</div>
<!-- ko if: isExpanded -->
<div class=pe-tree-node-children>
<!-- ko template: { foreach: fields, name: 'FieldNode' } --><!-- /ko -->
<!-- ko template: { foreach: properties, name: 'PropertyNode' } --><!-- /ko -->
<!-- ko template: { foreach: methods, name: 'MethodNode' } --><!-- /ko -->
</div>
<!-- /ko --></script>
<script id="UnmanagedImportsNode" type="text/html"></script>
<script id="UnmanagedResourceNode" type="text/html"><div class=pe-tree-node>
  <span class=pe-tree-icon></span>
  <span data-bind="text: name"></span>
</div></script>
<script id="UnmanagedResourcesNode" type="text/html"><div class=pe-tree-node
     data-bind="click: click">
  <span class=pe-tree-icon></span>
  <span>PE Resources</span>
</div>
<!-- ko if: isExpanded -->
<div class=pe-tree-node-children
     data-bind="template: { foreach: resources, name: 'UnmanagedResourceNode'}">
</div>
<!-- /ko --></script>

<script id="PEFileHeaders" type="text/html"><div id ="peDiv" style="font-size: 78%;">
  <table>
    <tr>
      <td class="leftAddress" valign="bottom">
        0000h
      </td>
      <td class="headerTitle" colspan="4" width="100%">
        DOS header
      </td>
    </tr>
    <tr data-bind="attr: { height: 0x40 * 1.5 }">
      <td></td>
      <td width="25%">
        <div class="important-background">
          <div class="field-value">
            <div class="label">Signature</div>
            <div data-bind="text: pe.formatEnum(dosHeader.mz, pe.headers.MZSignature)" class="value-aligned"></div>
          </div>
        </div>
        <div class="field-value">
          <div class="label">cblp</div>
          <div data-bind="text: dosHeader.cblp" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">cp</div>
          <div data-bind="text: dosHeader.cp" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">crlc</div>
          <div data-bind="text: dosHeader.crlc" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">cparhdr</div>
          <div data-bind="text: dosHeader.cparhdr" class="value-aligned"></div>
        </div>
      </td>
      <td width="25%">
        <div class="field-value">
          <div class="label">minalloc</div>
          <div data-bind="text: dosHeader.minalloc" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">maxalloc</div>
          <div data-bind="text: dosHeader.maxalloc" class="value-aligned"></div>
        </div>
        <div class="important-border">
          <div class="field-value">
            <div class="label">ss</div>
            <div data-bind="text: dosHeader.ss" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">sp</div>
            <div data-bind="text: dosHeader.sp" class="value-aligned"></div>
          </div>
        </div>
        <div class="field-value">
          <div class="label">csum</div>
          <div data-bind="text: dosHeader.csum" class="value-aligned"></div>
        </div>
      </td>
      <td width="25%">
        <div class="important-border">
          <div class="field-value">
            <div class="label">cs</div>
            <div data-bind="text: dosHeader.cs" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">ip</div>
            <div data-bind="text: dosHeader.ip" class="value-aligned"></div>
          </div>
        </div>
        <div class="field-value">
          <div class="label">lfarlc</div>
          <div data-bind="text: dosHeader.lfarlc" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">ovno</div>
          <div data-bind="text: dosHeader.ovno" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">res1</div>
          <div data-bind="text: dosHeader.res1" class="value-aligned"></div>
        </div>
      </td>
      <td width="25%">
        <div class="field-value">
          <div class="label">oemid</div>
          <div data-bind="text: dosHeader.oemid" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">oeminfo</div>
          <div data-bind="text: dosHeader.oeminfo" class="value-aligned"></div>
        </div>
        <table width="80%">
          <tr>
            <td with="50%">
              <div class="field-value">
                <div class="label">R0</div>
                <div data-bind="text: dosHeader.reserved[0]" class="value-aligned"></div>
              </div>
            </td>
            <td with="50%">
              <div class="field-value">
                <div class="label">R1</div>
                <div data-bind="text: dosHeader.reserved[1]" class="value-aligned"></div>
              </div>
            </td>
          </tr>
          <tr>
            <td>
              <div class="field-value">
                <div class="label">R2</div>
                <div data-bind="text: dosHeader.reserved[2]" class="value-aligned"></div>
              </div>
            </td>
            <td>
              <div class="field-value">
                <div class="label">R3</div>
                <div data-bind="text: dosHeader.reserved[3]" class="value-aligned"></div>
              </div>
            </td>
          </tr>
          <tr>
            <td>
              <div class="field-value">
                <div class="label">R4</div>
                <div data-bind="text: dosHeader.reserved[4]" class="value-aligned"></div>
              </div>
            </td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
      <td></td>
      <td style="border-top: solid 1px silver;" colspan="4">
       </td>
    </tr>
    <tr>
      <td></td>
      <td>
        <div class="field-value">
          <div class="label">lfanew</div>
          <div data-bind="text: pe.app.formatHex(dosHeader.lfanew)" class="value-aligned"></div>
        </div>
      </td>
    </tr>
    <tr>
      <td class="leftAddress" valign="bottom">
        <div data-bind="text: pe.app.formatAddress(dosHeader.lfanew - dosStub.length)"></div>
      </td>
      <td class="headerTitle" colspan="4">
        DOS stub
      </td>
    </tr>
    <tr data-bind="attr: { height: dosStub.length * 1.5 }">
      <td></td>
      <td colspan="4">
        <div class="bytes" data-bind="text: pe.app.formatBytes(dosStub)"></div>
      </td>
    </tr>
    <tr>
      <td class="leftAddress">
        <div data-bind="text: pe.app.formatAddress(dosHeader.lfanew)"></div>
      </td>
      <td class="headerTitle" colspan="4">
        PE header
      </td>
    </tr>
    <tr data-bind="attr: { height: 24 * 1.5 }">
      <td></td>
      <td valign="top">
        <div class="important-background">
          <div class="field-value">
            <div class="label">PESignature</div>
            <div data-bind="text: pe.formatEnum(peHeader.pe, pe.headers.PESignature)" class="value-aligned"></div>
          </div>
        </div>
        <div class="field-value">
          <div class="label">Machine</div>
          <div data-bind="text: pe.formatEnum(peHeader.machine, pe.headers.Machine)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">NumberOfSections</div>
          <div data-bind="text: peHeader.numberOfSections" class="value-aligned"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">Timestamp</div>
          <div data-bind="text: peHeader.timestamp" class="value"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">SzOptionalHeader</div>
          <div data-bind="text: peHeader.sizeOfOptionalHeader" class="value-aligned"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">Characteristics</div>
          <div data-bind="text: pe.formatEnum(peHeader.characteristics, pe.headers.ImageCharacteristics)" class="value"></div>
        </div>
      </td>
    </tr>
    <tr>
      <td class="leftAddress">
        <div  data-bind="text: pe.app.formatAddress(dosHeader.lfanew + 24)"></div>
      </td>
      <td class="headerTitle" colspan="4">
        Optional header
      </td>
    </tr>
    <tr data-bind="attr: { height: 96 * 1.5 }">
      <td></td>
      <td>
        <div class="important-background">
          <div class="field-value">
            <div class="label">PEMagic</div>
            <div data-bind="text: pe.formatEnum(optionalHeader.peMagic, pe.headers.PEMagic)" class="value-aligned"></div>
          </div>
        </div>
        <div class="important-border">
          <div class="field-value">
            <div class="label">LinkerVersion</div>
            <div data-bind="text: optionalHeader.linkerVersion" class="value-aligned"></div>
          </div>
        </div>
        <div class="field-value">
          <div class="label">SzCode</div>
          <div data-bind="text: optionalHeader.sizeOfCode" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SzInitData</div>
          <div data-bind="text: optionalHeader.sizeOfInitializedData" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SzUninitData</div>
          <div data-bind="text: optionalHeader.sizeOfUninitializedData" class="value-aligned"></div>
        </div>
      </td>
      <td>
        <div class="field-value">
          <div class="label">AddrEntry</div>
          <div data-bind="text: pe.app.formatHex(optionalHeader.addressOfEntryPoint)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">BaseOfCode</div>
          <div data-bind="text: pe.app.formatHex(optionalHeader.baseOfCode)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">BaseOfData</div>
          <div data-bind="text: pe.app.formatHex(optionalHeader.baseOfData)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">ImageBase</div>
          <div data-bind="text: pe.app.formatHex(optionalHeader.imageBase)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SectionAlignment</div>
          <div data-bind="text: optionalHeader.sectionAlignment" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">FileAlignment</div>
          <div data-bind="text: optionalHeader.fileAlignment" class="value-aligned"></div>
        </div>
      </td>
      <td valign="top">
        <div class="important-border">
          <div class="field-value">
            <div class="label">OSVersion</div>
            <div data-bind="text: optionalHeader.operatingSystemVersion" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">ImgVersion</div>
            <div data-bind="text: optionalHeader.imageVersion" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">SubsystemVersion</div>
            <div data-bind="text: optionalHeader.subsystemVersion" class="value-aligned"></div>
          </div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">Win32Version</div>
          <div data-bind="text: optionalHeader.win32VersionValue" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SzImage</div>
          <div data-bind="text: optionalHeader.sizeOfImage" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SzHeaders</div>
          <div data-bind="text: optionalHeader.sizeOfHeaders" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">CheckSum</div>
          <div data-bind="text: optionalHeader.checkSum" class="value-aligned"></div>
        </div>
      </td>
    </tr>
    <tr>
      <td></td>
      <td style="border-top: 1px solid silver;" colspan="4"></td>
    </tr>
    <tr>
      <td></td>
      <td valign="top">
        <div class="field-value">
          <div class="label">Subsystem</div>
          <div data-bind="text: pe.formatEnum(optionalHeader.subsystem, pe.headers.Subsystem)" class="value-aligned"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">DllCharacteristics</div>
          <div data-bind="text: pe.formatEnum(optionalHeader.dllCharacteristics, pe.headers.DllCharacteristics)" class="value"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">SzStackReserve</div>
          <div data-bind="text: optionalHeader.sizeOfStackReserve" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">SzStackCommit</div>
          <div data-bind="text: optionalHeader.sizeOfStackCommit" class="value-aligned"></div>
        </div>
      </td>
      <td valign="top">
        <div class="field-value">
          <div class="label">LoaderFlags</div>
          <div data-bind="text: pe.app.formatHex(optionalHeader.loaderFlags)" class="value-aligned"></div>
        </div>
        <div class="field-value">
          <div class="label">NumRvaAndSizes</div>
          <div data-bind="text: optionalHeader.numberOfRvaAndSizes" class="value-aligned"></div>
        </div>
      </td>
    </tr>

    <tr>
      <td class="leftAddress">XXXX</td>
      <td class="headerTitle" colspan="4">
        Section headers
      </td>
    </tr>

<!-- ko foreach: sectionHeaders -->
    <tr data-bind="visible: $index() != 0">
        <td></td>
        <td style="border-top: solid 1px silver" colspan="4">
        </td>
      </tr>
      <tr data-bind="attr: { ssheight: 40 * 1.5 }">
        <td></td>
        <td valign="top">
          <div class="important-background">
            <div class="field-value">
              <div class="label">name</div>
              <div data-bind="text: name" class="value-aligned"></div>
            </div>
          </div>
        </td>
        <td valign="top">
          <div class="important-border">
            <div class="field-value">
              <div class="label">Virtual</div>
              <div data-bind="text: pe.app.formatAddress(virtualAddress)+':'+pe.app.formatHex(size)" class="value-aligned"></div>
            </div>
            <div class="field-value">
              <div class="label">Raw</div>
              <div data-bind="text: pe.app.formatAddress(address)+':'+pe.app.formatHex(size)" class="value-aligned"></div>
            </div>
          </div>
        </td>
        <td valign="top">
          <div class="field-value">
            <div class="label">Relocations</div>
            <div data-bind="text: pointerToRelocations" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">LineNums</div>
            <div data-bind="text: pointerToLinenumbers" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">#Relocations</div>
            <div data-bind="text: numberOfRelocations" class="value-aligned"></div>
          </div>
          <div class="field-value">
            <div class="label">#LineNums</div>
            <div data-bind="text: numberOfLinenumbers" class="value-aligned"></div>
          </div>
        </td>
        <td valign="top">
          <div class="field-value">
            <div class="label">Characteristics</div>
            <div data-bind="text: pe.formatEnum(characteristics, pe.headers.SectionCharacteristics)" class="value"></div>
          </div>
        </td>
      </tr>
<!-- /ko -->

    

  </table>
</div>

</script>
<script id="Type" type="text/html"><div class=pe-app-type-details>
  <span data-bind="text: $data"></span>
  <span>: </span>
  <span data-bind="text: baseType" style="color: blue"></span>

  <span data-bind="text: pe.formatEnum(attributes, pe.managed.metadata.TypeAttributes)"></span><br>
  <!-- ko if: layout -->
    <span>packingSize:</span> <span data-bind="text: layout.packingSize"></span><br>
    <span>classSize:</span> <span data-bind="text: layout.classSize"></span><br>
  <!-- /ko -->
  <!-- ko if: customAttributes -->
    <!-- ko foreach: customAttributes -->
      <div>[<span data-bind="text: $data"></span>]</div>
    <!-- /ko -->
  <!-- /ko -->
</div></script>
<script id="MethodInfo" type="text/html"><div class=pe-app-methodInfo-details>
  <span data-bind="text: $data"></span><br>
  <span data-bind="text: pe.formatEnum(attributes, pe.managed.metadata.MethodAttributes)"></span><br>
  <!-- ko if: customAttributes -->
    <!-- ko foreach: customAttributes -->
      <div>[<span data-bind="text: $data"></span>]</div>
    <!-- /ko -->
  <!-- /ko -->
{<br>
    <blockquote>
      ...
    </blockquote>
  }
</div></script>
<script id="FieldInfo" type="text/html"><div class=pe-app-fieldInfo-details>
  <span data-bind="text: $data"></span><br>
  <span data-bind="text: pe.formatEnum(attributes, pe.managed.metadata.FieldAttributes)"></span><br>
  <!-- ko if: customAttributes -->
    <!-- ko foreach: customAttributes -->
      <div>[<span data-bind="text: $data"></span>]</div>
    <!-- /ko -->
  <!-- /ko -->
</div></script>
<style>.body {
  overflow: auto;
  margin: 0px;
  padding: 0px;
  height: 100%;
  font-family: 'Segoe UI', 'Ubuntu', 'Roboto','Helvetica', 'sans-serif';
}

.pe-boot-shadow {
  font-size: 200%;
  background: white;
  opacity: 0.3;
  position: fixed;
  left: 0px; top: 0px; width:100%; height: 100%;
  padding: 5em;
  text-align: center;
}

.pe-progress {
  font-size: 200%;
  background: gold;
  opacity: 0.3;
  position: fixed;
  left: 0px; top: 0px; width:100%; height: 100%;
  padding: 2em;
}

.pe-assembly {
  font-size: 200%;
}
.pe-namespace-lead {
  opacity: 0.5;
}
.pe-namespace-root {
  opacity: 0.5;
}
.pe-namespace-child-namespaces {
  margin-left: 1.5em;
}
.pe-namespace-types {
  margin-left: 1.5em;
}
.pe-namespace-in {
  margin: 3px;
  background: #E0E0E0;
}
.pe-namespace-out {
  margin: 3px;
  background: #F0F0F0;
}

.pe-type {
}
.pe-type-name {
  color: navy;
}
.pe-type-members {
  margin-left: 0.5em;
  padding: 2px;
  padding-left: 0.5em;
  padding-bottom: 0.3em;
  margin-bottom: 0.3em;
}
.pe-namespace-in .pe-type-members {
  background: #F0F0F0;
}
.pe-namespace-in .pe-type-members {
  background: white;
}
.pe-method-accessor {
  opacity: 0.5;
}
.pe-field-accessor {
  opacity: 0.5;
}

.dragSite {
  height: 100%; margin: 10px 5px;
}

.dragover {
  border: solid 4px gold;
}
.leftAddress {
  font-size: 80%;
  opacity: 0.5;
}

.headerTitle {
  font-size: 200%;
  opacity: 0.5;
}
.important-background {
  background: rgb(255, 214, 130);
  border: solid 1px gold;
  margin: -2px;
  padding: 1px;
  border-radius: 3px;
}
.important-border{
  border: solid 1px gold;
  margin: -2px;
  padding: 1px;
  border-radius: 3px;
}

.field-value {
  position: relative;
}

.field-value .label {
  position: relative;
  opacity: 0.6;
}

.field-value .value-aligned {
  position: absolute;
  top: 0px;
  right: 0px;
}
.field-value .value {
}

.bytes {
  background: rgb(230, 228, 228);
}
</style>

<!--Knockout-->
<script>// Knockout JavaScript library v3.0.0
// (c) Steven Sanderson - http://knockoutjs.com/
// License: MIT (http://www.opensource.org/licenses/mit-license.php)

(function() {(function(q){var y=this||(0,eval)("this"),w=y.document,K=y.navigator,u=y.jQuery,B=y.JSON;(function(q){"function"===typeof require&&"object"===typeof exports&&"object"===typeof module?q(module.exports||exports):"function"===typeof define&&define.amd?define(["exports"],q):q(y.ko={})})(function(F){function G(a,c){return null===a||typeof a in N?a===c:!1}function H(b,c,d,e){a.d[b]={init:function(b){a.a.f.set(b,L,{});return{controlsDescendantBindings:!0}},update:function(b,h,k,m,f){k=a.a.f.get(b,L);h=a.a.c(h());
m=!d!==!h;var p=!k.ob;if(p||c||m!==k.Db)p&&(k.ob=a.a.Ya(a.e.childNodes(b),!0)),m?(p||a.e.S(b,a.a.Ya(k.ob)),a.Ta(e?e(f,h):f,b)):a.e.Z(b),k.Db=m}};a.g.Y[b]=!1;a.e.P[b]=!0}var a="undefined"!==typeof F?F:{};a.b=function(b,c){for(var d=b.split("."),e=a,g=0;g<d.length-1;g++)e=e[d[g]];e[d[d.length-1]]=c};a.s=function(a,c,d){a[c]=d};a.version="3.0.0";a.b("version",a.version);a.a=function(){function b(a,b){for(var f in a)a.hasOwnProperty(f)&&b(f,a[f])}function c(k,b){if("input"!==a.a.v(k)||!k.type||"click"!=
b.toLowerCase())return!1;var f=k.type;return"checkbox"==f||"radio"==f}var d={},e={};d[K&&/Firefox\/2/i.test(K.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];d.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(d,function(a,b){if(b.length)for(var f=0,c=b.length;f<c;f++)e[b[f]]=a});var g={propertychange:!0},h=w&&function(){for(var a=3,b=w.createElement("div"),f=b.getElementsByTagName("i");b.innerHTML="\x3c!--[if gt IE "+
++a+"]><i></i><![endif]--\x3e",f[0];);return 4<a?a:q}();return{$a:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],n:function(a,b){for(var f=0,c=a.length;f<c;f++)b(a[f])},l:function(a,b){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var f=0,c=a.length;f<c;f++)if(a[f]===b)return f;return-1},Ua:function(a,b,f){for(var c=0,d=a.length;c<d;c++)if(b.call(f,a[c]))return a[c];return null},ia:function(b,c){var f=a.a.l(b,c);0<=f&&b.splice(f,1)},Va:function(b){b=
b||[];for(var c=[],f=0,d=b.length;f<d;f++)0>a.a.l(c,b[f])&&c.push(b[f]);return c},ha:function(a,b){a=a||[];for(var f=[],c=0,d=a.length;c<d;c++)f.push(b(a[c]));return f},ga:function(a,b){a=a||[];for(var f=[],c=0,d=a.length;c<d;c++)b(a[c])&&f.push(a[c]);return f},X:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var f=0,c=b.length;f<c;f++)a.push(b[f]);return a},V:function(b,c,f){var d=a.a.l(a.a.Ha(b),c);0>d?f&&b.push(c):f||b.splice(d,1)},extend:function(a,b){if(b)for(var f in b)b.hasOwnProperty(f)&&
(a[f]=b[f]);return a},K:b,Da:function(a,b){if(!a)return a;var f={},c;for(c in a)a.hasOwnProperty(c)&&(f[c]=b(a[c],c,a));return f},wa:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},Vb:function(b){b=a.a.Q(b);for(var c=w.createElement("div"),f=0,d=b.length;f<d;f++)c.appendChild(a.L(b[f]));return c},Ya:function(b,c){for(var f=0,d=b.length,e=[];f<d;f++){var g=b[f].cloneNode(!0);e.push(c?a.L(g):g)}return e},S:function(b,c){a.a.wa(b);if(c)for(var f=0,d=c.length;f<d;f++)b.appendChild(c[f])},nb:function(b,
c){var f=b.nodeType?[b]:b;if(0<f.length){for(var d=f[0],e=d.parentNode,g=0,n=c.length;g<n;g++)e.insertBefore(c[g],d);g=0;for(n=f.length;g<n;g++)a.removeNode(f[g])}},$:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);if(1<a.length){var f=a[0],c=a[a.length-1];for(a.length=0;f!==c;)if(a.push(f),f=f.nextSibling,!f)return;a.push(c)}}return a},qb:function(a,b){7>h?a.setAttribute("selected",b):a.selected=b},la:function(a){return null===a||a===
q?"":a.trim?a.trim():a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},ec:function(b,c){for(var f=[],d=(b||"").split(c),e=0,g=d.length;e<g;e++){var n=a.a.la(d[e]);""!==n&&f.push(n)}return f},ac:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},Gb:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(3===a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;
return!!a},va:function(b){return a.a.Gb(b,b.ownerDocument.documentElement)},Ra:function(b){return!!a.a.Ua(b,a.a.va)},v:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},r:function(b,d,f){var e=h&&g[d];if(e||"undefined"==typeof u)if(e||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var s=function(a){f.call(b,a)},l="on"+d;b.attachEvent(l,s);a.a.C.ea(b,function(){b.detachEvent(l,s)})}else throw Error("Browser doesn't support addEventListener or attachEvent");else b.addEventListener(d,
f,!1);else{if(c(b,d)){var n=f;f=function(a,b){var f=this.checked;b&&(this.checked=!0!==b.Ab);n.call(this,a);this.checked=f}}u(b).bind(d,f)}},da:function(a,b){if(!a||!a.nodeType)throw Error("element must be a DOM node when calling triggerEvent");if("undefined"!=typeof u){var f=[];c(a,b)&&f.push({Ab:a.checked});u(a).trigger(b,f)}else if("function"==typeof w.createEvent)if("function"==typeof a.dispatchEvent)f=w.createEvent(e[b]||"HTMLEvents"),f.initEvent(b,!0,!0,y,0,0,0,0,0,!1,!1,!1,!1,0,a),a.dispatchEvent(f);
else throw Error("The supplied element doesn't support dispatchEvent");else if("undefined"!=typeof a.fireEvent)c(a,b)&&(a.checked=!0!==a.checked),a.fireEvent("on"+b);else throw Error("Browser doesn't support triggering events");},c:function(b){return a.M(b)?b():b},Ha:function(b){return a.M(b)?b.t():b},ma:function(b,c,f){if(c){var d=/\S+/g,e=b.className.match(d)||[];a.a.n(c.match(d),function(b){a.a.V(e,b,f)});b.className=e.join(" ")}},Ma:function(b,c){var f=a.a.c(c);if(null===f||f===q)f="";var d=a.e.firstChild(b);
!d||3!=d.nodeType||a.e.nextSibling(d)?a.e.S(b,[w.createTextNode(f)]):d.data=f;a.a.Jb(b)},pb:function(a,b){a.name=b;if(7>=h)try{a.mergeAttributes(w.createElement("<input name='"+a.name+"'/>"),!1)}catch(f){}},Jb:function(a){9<=h&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},Hb:function(a){if(h){var b=a.style.width;a.style.width=0;a.style.width=b}},Zb:function(b,c){b=a.a.c(b);c=a.a.c(c);for(var f=[],d=b;d<=c;d++)f.push(d);return f},Q:function(a){for(var b=[],c=0,d=a.length;c<
d;c++)b.push(a[c]);return b},cc:6===h,dc:7===h,ja:h,ab:function(b,c){for(var f=a.a.Q(b.getElementsByTagName("input")).concat(a.a.Q(b.getElementsByTagName("textarea"))),d="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},e=[],g=f.length-1;0<=g;g--)d(f[g])&&e.push(f[g]);return e},Wb:function(b){return"string"==typeof b&&(b=a.a.la(b))?B&&B.parse?B.parse(b):(new Function("return "+b))():null},Na:function(b,c,f){if(!B||!B.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
return B.stringify(a.a.c(b),c,f)},Xb:function(c,d,f){f=f||{};var e=f.params||{},g=f.includeFields||this.$a,h=c;if("object"==typeof c&&"form"===a.a.v(c))for(var h=c.action,n=g.length-1;0<=n;n--)for(var r=a.a.ab(c,g[n]),v=r.length-1;0<=v;v--)e[r[v].name]=r[v].value;d=a.a.c(d);var t=w.createElement("form");t.style.display="none";t.action=h;t.method="post";for(var E in d)c=w.createElement("input"),c.name=E,c.value=a.a.Na(a.a.c(d[E])),t.appendChild(c);b(e,function(a,b){var c=w.createElement("input");c.name=
a;c.value=b;t.appendChild(c)});w.body.appendChild(t);f.submitter?f.submitter(t):t.submit();setTimeout(function(){t.parentNode.removeChild(t)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.n);a.b("utils.arrayFirst",a.a.Ua);a.b("utils.arrayFilter",a.a.ga);a.b("utils.arrayGetDistinctValues",a.a.Va);a.b("utils.arrayIndexOf",a.a.l);a.b("utils.arrayMap",a.a.ha);a.b("utils.arrayPushAll",a.a.X);a.b("utils.arrayRemoveItem",a.a.ia);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",
a.a.$a);a.b("utils.getFormFields",a.a.ab);a.b("utils.peekObservable",a.a.Ha);a.b("utils.postJson",a.a.Xb);a.b("utils.parseJson",a.a.Wb);a.b("utils.registerEventHandler",a.a.r);a.b("utils.stringifyJson",a.a.Na);a.b("utils.range",a.a.Zb);a.b("utils.toggleDomNodeCssClass",a.a.ma);a.b("utils.triggerEvent",a.a.da);a.b("utils.unwrapObservable",a.a.c);a.b("utils.objectForEach",a.a.K);a.b("utils.addOrRemoveItem",a.a.V);a.b("unwrap",a.a.c);Function.prototype.bind||(Function.prototype.bind=function(a){var c=
this,d=Array.prototype.slice.call(arguments);a=d.shift();return function(){return c.apply(a,d.concat(Array.prototype.slice.call(arguments)))}});a.a.f=new function(){function a(b,h){var k=b[d];if(!k||"null"===k||!e[k]){if(!h)return q;k=b[d]="ko"+c++;e[k]={}}return e[k]}var c=0,d="__ko__"+(new Date).getTime(),e={};return{get:function(c,d){var e=a(c,!1);return e===q?q:e[d]},set:function(c,d,e){if(e!==q||a(c,!1)!==q)a(c,!0)[d]=e},clear:function(a){var b=a[d];return b?(delete e[b],a[d]=null,!0):!1},D:function(){return c++ +
d}}};a.b("utils.domData",a.a.f);a.b("utils.domData.clear",a.a.f.clear);a.a.C=new function(){function b(b,c){var e=a.a.f.get(b,d);e===q&&c&&(e=[],a.a.f.set(b,d,e));return e}function c(d){var e=b(d,!1);if(e)for(var e=e.slice(0),m=0;m<e.length;m++)e[m](d);a.a.f.clear(d);"function"==typeof u&&"function"==typeof u.cleanData&&u.cleanData([d]);if(g[d.nodeType])for(e=d.firstChild;d=e;)e=d.nextSibling,8===d.nodeType&&c(d)}var d=a.a.f.D(),e={1:!0,8:!0,9:!0},g={1:!0,9:!0};return{ea:function(a,c){if("function"!=
typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},mb:function(c,e){var g=b(c,!1);g&&(a.a.ia(g,e),0==g.length&&a.a.f.set(c,d,q))},L:function(b){if(e[b.nodeType]&&(c(b),g[b.nodeType])){var d=[];a.a.X(d,b.getElementsByTagName("*"));for(var m=0,f=d.length;m<f;m++)c(d[m])}return b},removeNode:function(b){a.L(b);b.parentNode&&b.parentNode.removeChild(b)}}};a.L=a.a.C.L;a.removeNode=a.a.C.removeNode;a.b("cleanNode",a.L);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.C);
a.b("utils.domNodeDisposal.addDisposeCallback",a.a.C.ea);a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.C.mb);(function(){a.a.Fa=function(b){var c;if("undefined"!=typeof u)if(u.parseHTML)c=u.parseHTML(b)||[];else{if((c=u.clean([b]))&&c[0]){for(b=c[0];b.parentNode&&11!==b.parentNode.nodeType;)b=b.parentNode;b.parentNode&&b.parentNode.removeChild(b)}}else{var d=a.a.la(b).toLowerCase();c=w.createElement("div");d=d.match(/^<(thead|tbody|tfoot)/)&&[1,"<table>","</table>"]||!d.indexOf("<tr")&&[2,
"<table><tbody>","</tbody></table>"]||(!d.indexOf("<td")||!d.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||[0,"",""];b="ignored<div>"+d[1]+b+d[2]+"</div>";for("function"==typeof y.innerShiv?c.appendChild(y.innerShiv(b)):c.innerHTML=b;d[0]--;)c=c.lastChild;c=a.a.Q(c.lastChild.childNodes)}return c};a.a.Ka=function(b,c){a.a.wa(b);c=a.a.c(c);if(null!==c&&c!==q)if("string"!=typeof c&&(c=c.toString()),"undefined"!=typeof u)u(b).html(c);else for(var d=a.a.Fa(c),e=0;e<d.length;e++)b.appendChild(d[e])}})();
a.b("utils.parseHtmlFragment",a.a.Fa);a.b("utils.setHtml",a.a.Ka);a.u=function(){function b(c,e){if(c)if(8==c.nodeType){var g=a.u.jb(c.nodeValue);null!=g&&e.push({Fb:c,Tb:g})}else if(1==c.nodeType)for(var g=0,h=c.childNodes,k=h.length;g<k;g++)b(h[g],e)}var c={};return{Ca:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);
c[b]=a;return"\x3c!--[ko_memo:"+b+"]--\x3e"},ub:function(a,b){var g=c[a];if(g===q)throw Error("Couldn't find any memo with ID "+a+". Perhaps it's already been unmemoized.");try{return g.apply(null,b||[]),!0}finally{delete c[a]}},vb:function(c,e){var g=[];b(c,g);for(var h=0,k=g.length;h<k;h++){var m=g[h].Fb,f=[m];e&&a.a.X(f,e);a.u.ub(g[h].Tb,f);m.nodeValue="";m.parentNode&&m.parentNode.removeChild(m)}},jb:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?a[1]:null}}}();a.b("memoization",a.u);a.b("memoization.memoize",
a.u.Ca);a.b("memoization.unmemoize",a.u.ub);a.b("memoization.parseMemoText",a.u.jb);a.b("memoization.unmemoizeDomNodeAndDescendants",a.u.vb);a.xa={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.h({read:b,write:function(a){clearTimeout(d);d=setTimeout(function(){b(a)},c)}})},notify:function(a,c){a.equalityComparer="always"==c?null:G}};var N={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.xa);a.sb=function(b,c,d){this.target=b;this.qa=c;this.Eb=d;a.s(this,"dispose",
this.B)};a.sb.prototype.B=function(){this.Qb=!0;this.Eb()};a.ca=function(){this.F={};a.a.extend(this,a.ca.fn);a.s(this,"subscribe",this.T);a.s(this,"extend",this.extend);a.s(this,"getSubscriptionsCount",this.Lb)};var I="change";a.ca.fn={T:function(b,c,d){d=d||I;var e=new a.sb(this,c?b.bind(c):b,function(){a.a.ia(this.F[d],e)}.bind(this));this.F[d]||(this.F[d]=[]);this.F[d].push(e);return e},notifySubscribers:function(b,c){c=c||I;if(this.cb(c))try{a.i.Wa();for(var d=this.F[c].slice(0),e=0,g;g=d[e];++e)g&&
!0!==g.Qb&&g.qa(b)}finally{a.i.end()}},cb:function(a){return this.F[a]&&this.F[a].length},Lb:function(){var b=0;a.a.K(this.F,function(a,d){b+=d.length});return b},extend:function(b){var c=this;b&&a.a.K(b,function(b,e){var g=a.xa[b];"function"==typeof g&&(c=g(c,e)||c)});return c}};a.fb=function(a){return null!=a&&"function"==typeof a.T&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.ca);a.b("isSubscribable",a.fb);a.i=function(){var b=[];return{Wa:function(a){b.push(a&&{qa:a,Za:[]})},
end:function(){b.pop()},lb:function(c){if(!a.fb(c))throw Error("Only subscribable things can act as dependencies");if(0<b.length){var d=b[b.length-1];!d||0<=a.a.l(d.Za,c)||(d.Za.push(c),d.qa(c))}},p:function(a,d,e){try{return b.push(null),a.apply(d,e||[])}finally{b.pop()}}}}();a.q=function(b){function c(){if(0<arguments.length)return c.equalityComparer&&c.equalityComparer(d,arguments[0])||(c.O(),d=arguments[0],c.N()),this;a.i.lb(c);return d}var d=b;a.ca.call(c);c.t=function(){return d};c.N=function(){c.notifySubscribers(d)};
c.O=function(){c.notifySubscribers(d,"beforeChange")};a.a.extend(c,a.q.fn);a.s(c,"peek",c.t);a.s(c,"valueHasMutated",c.N);a.s(c,"valueWillMutate",c.O);return c};a.q.fn={equalityComparer:G};var C=a.q.Yb="__ko_proto__";a.q.fn[C]=a.q;a.ya=function(b,c){return null===b||b===q||b[C]===q?!1:b[C]===c?!0:a.ya(b[C],c)};a.M=function(b){return a.ya(b,a.q)};a.gb=function(b){return"function"==typeof b&&b[C]===a.q||"function"==typeof b&&b[C]===a.h&&b.Nb?!0:!1};a.b("observable",a.q);a.b("isObservable",a.M);a.b("isWriteableObservable",
a.gb);a.ba=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");b=a.q(b);a.a.extend(b,a.ba.fn);return b.extend({trackArrayChanges:!0})};a.ba.fn={remove:function(b){for(var c=this.t(),d=[],e="function"!=typeof b||a.M(b)?function(a){return a===b}:b,g=0;g<c.length;g++){var h=c[g];e(h)&&(0===d.length&&this.O(),d.push(h),c.splice(g,1),g--)}d.length&&this.N();return d},removeAll:function(b){if(b===
q){var c=this.t(),d=c.slice(0);this.O();c.splice(0,c.length);this.N();return d}return b?this.remove(function(c){return 0<=a.a.l(b,c)}):[]},destroy:function(b){var c=this.t(),d="function"!=typeof b||a.M(b)?function(a){return a===b}:b;this.O();for(var e=c.length-1;0<=e;e--)d(c[e])&&(c[e]._destroy=!0);this.N()},destroyAll:function(b){return b===q?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.l(b,c)}):[]},indexOf:function(b){var c=this();return a.a.l(c,b)},replace:function(a,
c){var d=this.indexOf(a);0<=d&&(this.O(),this.t()[d]=c,this.N())}};a.a.n("pop push reverse shift sort splice unshift".split(" "),function(b){a.ba.fn[b]=function(){var a=this.t();this.O();this.Xa(a,b,arguments);a=a[b].apply(a,arguments);this.N();return a}});a.a.n(["slice"],function(b){a.ba.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.b("observableArray",a.ba);var J="arrayChange";a.xa.trackArrayChanges=function(b){function c(){if(!d){d=!0;var c=b.notifySubscribers;b.notifySubscribers=
function(a,b){b&&b!==I||++g;return c.apply(this,arguments)};var m=[].concat(b.t()||[]);e=null;b.T(function(c){c=[].concat(c||[]);if(b.cb(J)){var d;if(!e||1<g)e=a.a.ra(m,c,{sparse:!0});d=e;d.length&&b.notifySubscribers(d,J)}m=c;e=null;g=0})}}if(!b.Xa){var d=!1,e=null,g=0,h=b.T;b.T=b.subscribe=function(a,b,f){f===J&&c();return h.apply(this,arguments)};b.Xa=function(a,b,c){function p(a,b,c){h.push({status:a,value:b,index:c})}if(d&&!g){var h=[],l=a.length,n=c.length,r=0;switch(b){case "push":r=l;case "unshift":for(b=
0;b<n;b++)p("added",c[b],r+b);break;case "pop":r=l-1;case "shift":l&&p("deleted",a[r],r);break;case "splice":b=Math.min(Math.max(0,0>c[0]?l+c[0]:c[0]),l);for(var l=1===n?l:Math.min(b+(c[1]||0),l),n=b+n-2,r=Math.max(l,n),v=2;b<r;++b,++v)b<l&&p("deleted",a[b],b),b<n&&p("added",c[v],b);break;default:return}e=h}}}};a.h=function(b,c,d){function e(){a.a.n(z,function(a){a.B()});z=[]}function g(){var a=k.throttleEvaluation;a&&0<=a?(clearTimeout(x),x=setTimeout(h,a)):h()}function h(){if(!s){if(E&&E()){if(!l){D();
p=!0;return}}else l=!1;s=!0;try{var b=a.a.ha(z,function(a){return a.target});a.i.Wa(function(c){var d;0<=(d=a.a.l(b,c))?b[d]=q:z.push(c.T(g))});for(var d=c?n.call(c):n(),e=b.length-1;0<=e;e--)b[e]&&z.splice(e,1)[0].B();p=!0;k.equalityComparer&&k.equalityComparer(f,d)||(k.notifySubscribers(f,"beforeChange"),f=d,k.notifySubscribers(f))}finally{a.i.end(),s=!1}z.length||D()}}function k(){if(0<arguments.length){if("function"===typeof r)r.apply(c,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");
return this}p||h();a.i.lb(k);return f}function m(){return!p||0<z.length}var f,p=!1,s=!1,l=!1,n=b;n&&"object"==typeof n?(d=n,n=d.read):(d=d||{},n||(n=d.read));if("function"!=typeof n)throw Error("Pass a function that returns the value of the ko.computed");var r=d.write,v=d.disposeWhenNodeIsRemoved||d.I||null,t=d.disposeWhen||d.ua,E=t,D=e,z=[],x=null;c||(c=d.owner);k.t=function(){p||h();return f};k.Kb=function(){return z.length};k.Nb="function"===typeof d.write;k.B=function(){D()};k.aa=m;a.ca.call(k);
a.a.extend(k,a.h.fn);a.s(k,"peek",k.t);a.s(k,"dispose",k.B);a.s(k,"isActive",k.aa);a.s(k,"getDependenciesCount",k.Kb);v&&(l=!0,v.nodeType&&(E=function(){return!a.a.va(v)||t&&t()}));!0!==d.deferEvaluation&&h();v&&m()&&(D=function(){a.a.C.mb(v,D);e()},a.a.C.ea(v,D));return k};a.Pb=function(b){return a.ya(b,a.h)};F=a.q.Yb;a.h[F]=a.q;a.h.fn={equalityComparer:G};a.h.fn[F]=a.h;a.b("dependentObservable",a.h);a.b("computed",a.h);a.b("isComputed",a.Pb);(function(){function b(a,g,h){h=h||new d;a=g(a);if("object"!=
typeof a||null===a||a===q||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var k=a instanceof Array?[]:{};h.save(a,k);c(a,function(c){var d=g(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":k[c]=d;break;case "object":case "undefined":var p=h.get(d);k[c]=p!==q?p:b(d,g,h)}});return k}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=
[];this.Qa=[]}a.tb=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return b(c,function(b){for(var c=0;a.M(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.tb(b);return a.a.Na(b,c,d)};d.prototype={save:function(b,c){var d=a.a.l(this.keys,b);0<=d?this.Qa[d]=c:(this.keys.push(b),this.Qa.push(c))},get:function(b){b=a.a.l(this.keys,b);return 0<=b?this.Qa[b]:q}}})();a.b("toJS",a.tb);a.b("toJSON",a.toJSON);(function(){a.k={o:function(b){switch(a.a.v(b)){case "option":return!0===
b.__ko__hasDomDataOptionValue__?a.a.f.get(b,a.d.options.Ea):7>=a.a.ja?b.getAttributeNode("value")&&b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.k.o(b.options[b.selectedIndex]):q;default:return b.value}},na:function(b,c){switch(a.a.v(b)){case "option":switch(typeof c){case "string":a.a.f.set(b,a.d.options.Ea,q);"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__;b.value=c;break;default:a.a.f.set(b,a.d.options.Ea,c),b.__ko__hasDomDataOptionValue__=
!0,b.value="number"===typeof c?c:""}break;case "select":""===c&&(c=q);if(null===c||c===q)b.selectedIndex=-1;for(var d=b.options.length-1;0<=d;d--)if(a.k.o(b.options[d])==c){b.selectedIndex=d;break}1<b.size||-1!==b.selectedIndex||(b.selectedIndex=0);break;default:if(null===c||c===q)c="";b.value=c}}}})();a.b("selectExtensions",a.k);a.b("selectExtensions.readValue",a.k.o);a.b("selectExtensions.writeValue",a.k.na);a.g=function(){function b(b){b=a.a.la(b);123===b.charCodeAt(0)&&(b=b.slice(1,-1));var c=
[],d=b.match(e),k,l,n=0;if(d){d.push(",");for(var r=0,v;v=d[r];++r){var t=v.charCodeAt(0);if(44===t){if(0>=n){k&&c.push(l?{key:k,value:l.join("")}:{unknown:k});k=l=n=0;continue}}else if(58===t){if(!l)continue}else if(47===t&&r&&1<v.length)(t=d[r-1].match(g))&&!h[t[0]]&&(b=b.substr(b.indexOf(v)+1),d=b.match(e),d.push(","),r=-1,v="/");else if(40===t||123===t||91===t)++n;else if(41===t||125===t||93===t)--n;else if(!k&&!l){k=34===t||39===t?v.slice(1,-1):v;continue}l?l.push(v):l=[v]}}return c}var c=["true",
"false","null","undefined"],d=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,e=RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]","g"),g=/[\])"'A-Za-z0-9_$]+$/,h={"in":1,"return":1,"typeof":1},k={};return{Y:[],U:k,Ga:b,ka:function(e,f){function g(b,f){var e,r=a.getBindingHandler(b);if(r&&r.preprocess?f=r.preprocess(f,b,g):1){if(r=k[b])e=f,0<=a.a.l(c,e)?e=!1:(r=e.match(d),e=null===r?!1:r[1]?"Object("+r[1]+")"+
r[2]:e),r=e;r&&l.push("'"+b+"':function(_z){"+e+"=_z}");n&&(f="function(){return "+f+" }");h.push("'"+b+"':"+f)}}f=f||{};var h=[],l=[],n=f.valueAccessors,r="string"===typeof e?b(e):e;a.a.n(r,function(a){g(a.key||a.unknown,a.value)});l.length&&g("_ko_property_writers","{"+l.join(",")+"}");return h.join(",")},Sb:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},oa:function(b,c,d,e,k){if(b&&a.M(b))!a.gb(b)||k&&b.t()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();
a.b("expressionRewriting",a.g);a.b("expressionRewriting.bindingRewriteValidators",a.g.Y);a.b("expressionRewriting.parseObjectLiteral",a.g.Ga);a.b("expressionRewriting.preProcessBindings",a.g.ka);a.b("expressionRewriting._twoWayBindings",a.g.U);a.b("jsonExpressionRewriting",a.g);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.g.ka);(function(){function b(a){return 8==a.nodeType&&h.test(g?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&k.test(g?a.text:a.nodeValue)}function d(a,
d){for(var e=a,k=1,n=[];e=e.nextSibling;){if(c(e)&&(k--,0===k))return n;n.push(e);b(e)&&k++}if(!d)throw Error("Cannot find closing comment tag to match: "+a.nodeValue);return null}function e(a,b){var c=d(a,b);return c?0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var g=w&&"\x3c!--test--\x3e"===w.createComment("test").text,h=g?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,k=g?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,m={ul:!0,ol:!0};a.e={P:{},childNodes:function(a){return b(a)?
d(a):a.childNodes},Z:function(c){if(b(c)){c=a.e.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.wa(c)},S:function(c,d){if(b(c)){a.e.Z(c);for(var e=c.nextSibling,k=0,n=d.length;k<n;k++)e.parentNode.insertBefore(d[k],e)}else a.a.S(c,d)},kb:function(a,c){b(a)?a.parentNode.insertBefore(c,a.nextSibling):a.firstChild?a.insertBefore(c,a.firstChild):a.appendChild(c)},eb:function(c,d,e){e?b(c)?c.parentNode.insertBefore(d,e.nextSibling):e.nextSibling?c.insertBefore(d,e.nextSibling):
c.appendChild(d):a.e.kb(c,d)},firstChild:function(a){return b(a)?!a.nextSibling||c(a.nextSibling)?null:a.nextSibling:a.firstChild},nextSibling:function(a){b(a)&&(a=e(a));return a.nextSibling&&c(a.nextSibling)?null:a.nextSibling},Mb:b,bc:function(a){return(a=(g?a.text:a.nodeValue).match(h))?a[1]:null},ib:function(d){if(m[a.a.v(d)]){var k=d.firstChild;if(k){do if(1===k.nodeType){var g;g=k.firstChild;var h=null;if(g){do if(h)h.push(g);else if(b(g)){var n=e(g,!0);n?g=n:h=[g]}else c(g)&&(h=[g]);while(g=
g.nextSibling)}if(g=h)for(h=k.nextSibling,n=0;n<g.length;n++)h?d.insertBefore(g[n],h):d.appendChild(g[n])}while(k=k.nextSibling)}}}}})();a.b("virtualElements",a.e);a.b("virtualElements.allowedBindings",a.e.P);a.b("virtualElements.emptyNode",a.e.Z);a.b("virtualElements.insertAfter",a.e.eb);a.b("virtualElements.prepend",a.e.kb);a.b("virtualElements.setDomNodeChildren",a.e.S);(function(){a.H=function(){this.zb={}};a.a.extend(a.H.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=
b.getAttribute("data-bind");case 8:return a.e.Mb(b);default:return!1}},getBindings:function(a,c){var d=this.getBindingsString(a,c);return d?this.parseBindingsString(d,c,a):null},getBindingAccessors:function(a,c){var d=this.getBindingsString(a,c);return d?this.parseBindingsString(d,c,a,{valueAccessors:!0}):null},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");case 8:return a.e.bc(b);default:return null}},parseBindingsString:function(b,c,d,e){try{var g=this.zb,
h=b+(e&&e.valueAccessors||""),k;if(!(k=g[h])){var m,f="with($context){with($data||{}){return{"+a.g.ka(b,e)+"}}}";m=new Function("$context","$element",f);k=g[h]=m}return k(c,d)}catch(p){throw p.message="Unable to parse bindings.\nBindings value: "+b+"\nMessage: "+p.message,p;}}});a.H.instance=new a.H})();a.b("bindingProvider",a.H);(function(){function b(a){return function(){return a}}function c(a){return a()}function d(b){return a.a.Da(a.i.p(b),function(a,c){return function(){return b()[c]}})}function e(a,
b){return d(this.getBindings.bind(this,a,b))}function g(b,c,d){var f,e=a.e.firstChild(c),k=a.H.instance,g=k.preprocessNode;if(g){for(;f=e;)e=a.e.nextSibling(f),g.call(k,f);e=a.e.firstChild(c)}for(;f=e;)e=a.e.nextSibling(f),h(b,f,d)}function h(b,c,d){var f=!0,e=1===c.nodeType;e&&a.e.ib(c);if(e&&d||a.H.instance.nodeHasBindings(c))f=m(c,null,b,d).shouldBindDescendants;f&&!p[a.a.v(c)]&&g(b,c,!e)}function k(b){var c=[],d={},f=[];a.a.K(b,function D(e){if(!d[e]){var k=a.getBindingHandler(e);k&&(k.after&&
(f.push(e),a.a.n(k.after,function(c){if(b[c]){if(-1!==a.a.l(f,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+f.join(", "));D(c)}}),f.pop()),c.push({key:e,bb:k}));d[e]=!0}});return c}function m(b,d,f,g){var h=a.a.f.get(b,s);if(!d){if(h)throw Error("You cannot apply bindings multiple times to the same element.");a.a.f.set(b,s,!0)}!h&&g&&a.rb(b,f);var m;if(d&&"function"!==typeof d)m=d;else{var p=a.H.instance,l=p.getBindingAccessors||e;if(d||f.A){var A=
a.h(function(){(m=d?d(f,b):l.call(p,b,f))&&f.A&&f.A();return m},null,{I:b});m&&A.aa()||(A=null)}else m=a.i.p(l,p,[b,f])}var u;if(m){var w=A?function(a){return function(){return c(A()[a])}}:function(a){return m[a]},y=function(){return a.a.Da(A?A():m,c)};y.get=function(a){return m[a]&&c(w(a))};y.has=function(a){return a in m};g=k(m);a.a.n(g,function(c){var d=c.bb.init,e=c.bb.update,k=c.key;if(8===b.nodeType&&!a.e.P[k])throw Error("The binding '"+k+"' cannot be used with virtual elements");try{"function"==
typeof d&&a.i.p(function(){var a=d(b,w(k),y,f.$data,f);if(a&&a.controlsDescendantBindings){if(u!==q)throw Error("Multiple bindings ("+u+" and "+k+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");u=k}}),"function"==typeof e&&a.h(function(){e(b,w(k),y,f.$data,f)},null,{I:b})}catch(g){throw g.message='Unable to process binding "'+k+": "+m[k]+'"\nMessage: '+g.message,g;}})}return{shouldBindDescendants:u===q}}function f(b){return b&&
b instanceof a.G?b:new a.G(b)}a.d={};var p={script:!0};a.getBindingHandler=function(b){return a.d[b]};a.G=function(b,c,d,f){var e=this,k="function"==typeof b,g,h=a.h(function(){var g=k?b():b;c?(c.A&&c.A(),a.a.extend(e,c),h&&(e.A=h)):(e.$parents=[],e.$root=g,e.ko=a);e.$rawData=b;e.$data=g;d&&(e[d]=g);f&&f(e,c,g);return e.$data},null,{ua:function(){return g&&!a.a.Ra(g)},I:!0});h.aa()&&(e.A=h,h.equalityComparer=null,g=[],h.wb=function(b){g.push(b);a.a.C.ea(b,function(b){a.a.ia(g,b);g.length||(h.B(),
e.A=h=q)})})};a.G.prototype.createChildContext=function(b,c,d){return new a.G(b,this,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)})};a.G.prototype.extend=function(b){return new a.G(this.$rawData,this,null,function(c){a.a.extend(c,"function"==typeof b?b():b)})};var s=a.a.f.D(),l=a.a.f.D();a.rb=function(b,c){if(2==arguments.length)a.a.f.set(b,l,c),c.A&&c.A.wb(b);else return a.a.f.get(b,l)};a.pa=function(b,c,d){1===b.nodeType&&
a.e.ib(b);return m(b,c,f(d),!0)};a.xb=function(c,e,k){k=f(k);return a.pa(c,"function"===typeof e?d(e.bind(null,k,c)):a.a.Da(e,b),k)};a.Ta=function(a,b){1!==b.nodeType&&8!==b.nodeType||g(f(a),b,!0)};a.Sa=function(a,b){if(b&&1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");b=b||y.document.body;h(f(a),b,!0)};a.ta=function(b){switch(b.nodeType){case 1:case 8:var c=a.rb(b);if(c)return c;if(b.parentNode)return a.ta(b.parentNode)}return q};
a.Cb=function(b){return(b=a.ta(b))?b.$data:q};a.b("bindingHandlers",a.d);a.b("applyBindings",a.Sa);a.b("applyBindingsToDescendants",a.Ta);a.b("applyBindingAccessorsToNode",a.pa);a.b("applyBindingsToNode",a.xb);a.b("contextFor",a.ta);a.b("dataFor",a.Cb)})();var M={"class":"className","for":"htmlFor"};a.d.attr={update:function(b,c){var d=a.a.c(c())||{};a.a.K(d,function(c,d){d=a.a.c(d);var h=!1===d||null===d||d===q;h&&b.removeAttribute(c);8>=a.a.ja&&c in M?(c=M[c],h?b.removeAttribute(c):b[c]=d):h||b.setAttribute(c,
d.toString());"name"===c&&a.a.pb(b,h?"":d.toString())})}};(function(){a.d.checked={after:["value","attr"],init:function(b,c,d){function e(){return d.has("checkedValue")?a.a.c(d.get("checkedValue")):b.value}function g(){var k=b.checked,g=s?e():k;if(l&&(!m||k)){var h=a.i.p(c);f?p!==g?(k&&(a.a.V(h,g,!0),a.a.V(h,p,!1)),p=g):a.a.V(h,g,k):a.g.oa(h,d,"checked",g,!0)}}function h(){var d=a.a.c(c());b.checked=f?0<=a.a.l(d,e()):k?d:e()===d}var k="checkbox"==b.type,m="radio"==b.type;if(k||m){var f=k&&a.a.c(c())instanceof
Array,p=f?e():q,s=m||f,l=!1;m&&!b.name&&a.d.uniqueName.init(b,function(){return!0});a.h(g,null,{I:b});a.a.r(b,"click",g);a.h(h,null,{I:b});l=!0}}};a.g.U.checked=!0;a.d.checkedValue={update:function(b,c){b.value=a.a.c(c())}}})();a.d.css={update:function(b,c){var d=a.a.c(c());"object"==typeof d?a.a.K(d,function(c,d){d=a.a.c(d);a.a.ma(b,c,d)}):(d=String(d||""),a.a.ma(b,b.__ko__cssValue,!1),b.__ko__cssValue=d,a.a.ma(b,d,!0))}};a.d.enable={update:function(b,c){var d=a.a.c(c());d&&b.disabled?b.removeAttribute("disabled"):
d||b.disabled||(b.disabled=!0)}};a.d.disable={update:function(b,c){a.d.enable.update(b,function(){return!a.a.c(c())})}};a.d.event={init:function(b,c,d,e,g){var h=c()||{};a.a.K(h,function(k){"string"==typeof k&&a.a.r(b,k,function(b){var f,h=c()[k];if(h){try{var s=a.a.Q(arguments);e=g.$data;s.unshift(e);f=h.apply(e,s)}finally{!0!==f&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(k+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.d.foreach={hb:function(b){return function(){var c=
b(),d=a.a.Ha(c);if(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.J.Aa};a.a.c(c);return{foreach:d.data,as:d.as,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.J.Aa}}},init:function(b,c){return a.d.template.init(b,a.d.foreach.hb(c))},update:function(b,c,d,e,g){return a.d.template.update(b,a.d.foreach.hb(c),d,e,g)}};a.g.Y.foreach=!1;a.e.P.foreach=!0;a.d.hasfocus=
{init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var g=b.ownerDocument;if("activeElement"in g){var f;try{f=g.activeElement}catch(h){f=g.body}e=f===b}g=c();a.g.oa(g,d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var g=e.bind(null,!0),h=e.bind(null,!1);a.a.r(b,"focus",g);a.a.r(b,"focusin",g);a.a.r(b,"blur",h);a.a.r(b,"focusout",h)},update:function(b,c){var d=!!a.a.c(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===d||(d?b.focus():b.blur(),a.i.p(a.a.da,
null,[b,d?"focusin":"focusout"]))}};a.g.U.hasfocus=!0;a.d.hasFocus=a.d.hasfocus;a.g.U.hasFocus=!0;a.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Ka(b,c())}};var L=a.a.f.D();H("if");H("ifnot",!1,!0);H("with",!0,!1,function(a,c){return a.createChildContext(c)});a.d.options={init:function(b){if("select"!==a.a.v(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,
c,d){function e(){return a.a.ga(b.options,function(a){return a.selected})}function g(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function h(c,d){if(p.length){var f=0<=a.a.l(p,a.k.o(d[0]));a.a.qb(d[0],f);l&&!f&&a.i.p(a.a.da,null,[b,"change"])}}var k=0!=b.length&&b.multiple?b.scrollTop:null;c=a.a.c(c());var m=d.get("optionsIncludeDestroyed"),f={},p;p=b.multiple?a.a.ha(e(),a.k.o):0<=b.selectedIndex?[a.k.o(b.options[b.selectedIndex])]:[];if(c){"undefined"==typeof c.length&&(c=[c]);
var s=a.a.ga(c,function(b){return m||b===q||null===b||!a.a.c(b._destroy)});d.has("optionsCaption")&&(c=a.a.c(d.get("optionsCaption")),null!==c&&c!==q&&s.unshift(f))}else c=[];var l=!1;c=h;d.has("optionsAfterRender")&&(c=function(b,c){h(0,c);a.i.p(d.get("optionsAfterRender"),null,[c[0],b!==f?b:q])});a.a.Ja(b,s,function(b,c,e){e.length&&(p=e[0].selected?[a.k.o(e[0])]:[],l=!0);c=w.createElement("option");b===f?(a.a.Ma(c,d.get("optionsCaption")),a.k.na(c,q)):(e=g(b,d.get("optionsValue"),b),a.k.na(c,a.a.c(e)),
b=g(b,d.get("optionsText"),e),a.a.Ma(c,b));return[c]},null,c);(b.multiple?p.length&&e().length<p.length:p.length&&0<=b.selectedIndex?a.k.o(b.options[b.selectedIndex])!==p[0]:p.length||0<=b.selectedIndex)&&a.i.p(a.a.da,null,[b,"change"]);a.a.Hb(b);k&&20<Math.abs(k-b.scrollTop)&&(b.scrollTop=k)}};a.d.options.Ea=a.a.f.D();a.d.selectedOptions={after:["options","foreach"],init:function(b,c,d){a.a.r(b,"change",function(){var e=c(),g=[];a.a.n(b.getElementsByTagName("option"),function(b){b.selected&&g.push(a.k.o(b))});
a.g.oa(e,d,"selectedOptions",g)})},update:function(b,c){if("select"!=a.a.v(b))throw Error("values binding applies only to SELECT elements");var d=a.a.c(c());d&&"number"==typeof d.length&&a.a.n(b.getElementsByTagName("option"),function(b){var c=0<=a.a.l(d,a.k.o(b));a.a.qb(b,c)})}};a.g.U.selectedOptions=!0;a.d.style={update:function(b,c){var d=a.a.c(c()||{});a.a.K(d,function(c,d){d=a.a.c(d);b.style[c]=d||""})}};a.d.submit={init:function(b,c,d,e,g){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");
a.a.r(b,"submit",function(a){var d,e=c();try{d=e.call(g.$data,b)}finally{!0!==d&&(a.preventDefault?a.preventDefault():a.returnValue=!1)}})}};a.d.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Ma(b,c())}};a.e.P.text=!0;a.d.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.d.uniqueName.Bb;a.a.pb(b,d)}}};a.d.uniqueName.Bb=0;a.d.value={after:["options","foreach"],init:function(b,c,d){function e(){k=!1;var e=c(),f=a.k.o(b);a.g.oa(e,d,"value",f)}var g=
["change"],h=d.get("valueUpdate"),k=!1;h&&("string"==typeof h&&(h=[h]),a.a.X(g,h),g=a.a.Va(g));!a.a.ja||"input"!=b.tagName.toLowerCase()||"text"!=b.type||"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.l(g,"propertychange")||(a.a.r(b,"propertychange",function(){k=!0}),a.a.r(b,"blur",function(){k&&e()}));a.a.n(g,function(c){var d=e;a.a.ac(c,"after")&&(d=function(){setTimeout(e,0)},c=c.substring(5));a.a.r(b,c,d)})},update:function(b,c){var d="select"===a.a.v(b),e=a.a.c(c()),g=a.k.o(b);
e!==g&&(g=function(){a.k.na(b,e)},g(),d&&(e!==a.k.o(b)?a.i.p(a.a.da,null,[b,"change"]):setTimeout(g,0)))}};a.g.U.value=!0;a.d.visible={update:function(b,c){var d=a.a.c(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};(function(b){a.d[b]={init:function(c,d,e,g,h){return a.d.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,g,h)}}})("click");a.w=function(){};a.w.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource");
};a.w.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.w.prototype.makeTemplateSource=function(b,c){if("string"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.m.j(d)}if(1==b.nodeType||8==b.nodeType)return new a.m.W(b);throw Error("Unknown template type: "+b);};a.w.prototype.renderTemplate=function(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,
d)};a.w.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.w.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.w);a.Oa=function(){function b(b,c,d,k){b=a.g.Ga(b);for(var m=a.g.Y,f=0;f<b.length;f++){var p=b[f].key;if(m.hasOwnProperty(p)){var s=m[p];if("function"===typeof s){if(p=s(b[f].value))throw Error(p);}else if(!s)throw Error("This template engine does not support the '"+
p+"' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.g.ka(b,{valueAccessors:!0})+" } })()},'"+d.toLowerCase()+"')";return k.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,d=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{Ib:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.Oa.Ub(b,c)},
d)},Ub:function(a,g){return a.replace(c,function(a,c,d,f,e){return b(e,c,d,g)}).replace(d,function(a,c){return b(c,"\x3c!-- ko --\x3e","#comment",g)})},yb:function(b,c){return a.u.Ca(function(d,k){var m=d.nextSibling;m&&m.nodeName.toLowerCase()===c&&a.pa(m,b,k)})}}}();a.b("__tr_ambtns",a.Oa.yb);(function(){a.m={};a.m.j=function(a){this.j=a};a.m.j.prototype.text=function(){var b=a.a.v(this.j),b="script"===b?"text":"textarea"===b?"value":"innerHTML";if(0==arguments.length)return this.j[b];var c=arguments[0];
"innerHTML"===b?a.a.Ka(this.j,c):this.j[b]=c};var b=a.a.f.D()+"_";a.m.j.prototype.data=function(c){if(1===arguments.length)return a.a.f.get(this.j,b+c);a.a.f.set(this.j,b+c,arguments[1])};var c=a.a.f.D();a.m.W=function(a){this.j=a};a.m.W.prototype=new a.m.j;a.m.W.prototype.text=function(){if(0==arguments.length){var b=a.a.f.get(this.j,c)||{};b.Pa===q&&b.sa&&(b.Pa=b.sa.innerHTML);return b.Pa}a.a.f.set(this.j,c,{Pa:arguments[0]})};a.m.j.prototype.nodes=function(){if(0==arguments.length)return(a.a.f.get(this.j,
c)||{}).sa;a.a.f.set(this.j,c,{sa:arguments[0]})};a.b("templateSources",a.m);a.b("templateSources.domElement",a.m.j);a.b("templateSources.anonymousTemplate",a.m.W)})();(function(){function b(b,c,d){var e;for(c=a.e.nextSibling(c);b&&(e=b)!==c;)b=a.e.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var f=c[0],e=c[c.length-1],g=f.parentNode,h=a.H.instance,n=h.preprocessNode;if(n){b(f,e,function(a,b){var c=a.previousSibling,d=n.call(h,a);d&&(a===f&&(f=d[0]||b),a===e&&(e=d[d.length-1]||c))});c.length=
0;if(!f)return;f===e?c.push(f):(c.push(f,e),a.a.$(c,g))}b(f,e,function(b){1!==b.nodeType&&8!==b.nodeType||a.Sa(d,b)});b(f,e,function(b){1!==b.nodeType&&8!==b.nodeType||a.u.vb(b,[d])});a.a.$(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,s){s=s||{};var l=b&&d(b),l=l&&l.ownerDocument,n=s.templateEngine||g;a.Oa.Ib(f,n,l);f=n.renderTemplate(f,h,s,l);if("number"!=typeof f.length||0<f.length&&"number"!=typeof f[0].nodeType)throw Error("Template engine must return an array of DOM nodes");
l=!1;switch(e){case "replaceChildren":a.e.S(b,f);l=!0;break;case "replaceNode":a.a.nb(b,f);l=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+e);}l&&(c(f,h),s.afterRender&&a.i.p(s.afterRender,null,[f,h.$data]));return f}var g;a.La=function(b){if(b!=q&&!(b instanceof a.w))throw Error("templateEngine must inherit from ko.templateEngine");g=b};a.Ia=function(b,c,f,h,s){f=f||{};if((f.templateEngine||g)==q)throw Error("Set a template engine before calling renderTemplate");
s=s||"replaceChildren";if(h){var l=d(h);return a.h(function(){var g=c&&c instanceof a.G?c:new a.G(a.a.c(c)),r="function"==typeof b?b(g.$data,g):b,g=e(h,s,r,g,f);"replaceNode"==s&&(h=g,l=d(h))},null,{ua:function(){return!l||!a.a.va(l)},I:l&&"replaceNode"==s?l.parentNode:l})}return a.u.Ca(function(d){a.Ia(b,c,f,d,"replaceNode")})};a.$b=function(b,d,f,g,h){function l(a,b){c(b,r);f.afterRender&&f.afterRender(b,a)}function n(a,c){r=h.createChildContext(a,f.as,function(a){a.$index=c});var d="function"==
typeof b?b(a,r):b;return e(null,"ignoreTargetNode",d,r,f)}var r;return a.h(function(){var b=a.a.c(d)||[];"undefined"==typeof b.length&&(b=[b]);b=a.a.ga(b,function(b){return f.includeDestroyed||b===q||null===b||!a.a.c(b._destroy)});a.i.p(a.a.Ja,null,[g,b,n,f,l])},null,{I:g})};var h=a.a.f.D();a.d.template={init:function(b,c){var d=a.a.c(c());"string"==typeof d||d.name?a.e.Z(b):(d=a.e.childNodes(b),d=a.a.Vb(d),(new a.m.W(b)).nodes(d));return{controlsDescendantBindings:!0}},update:function(b,c,d,e,g){c=
a.a.c(c());d={};e=!0;var l,n=null;"string"!=typeof c&&(d=c,c=a.a.c(d.name),"if"in d&&(e=a.a.c(d["if"])),e&&"ifnot"in d&&(e=!a.a.c(d.ifnot)),l=a.a.c(d.data));"foreach"in d?n=a.$b(c||b,e&&d.foreach||[],d,b,g):e?(g="data"in d?g.createChildContext(l,d.as):g,n=a.Ia(c||b,g,d,b)):a.e.Z(b);g=n;(l=a.a.f.get(b,h))&&"function"==typeof l.B&&l.B();a.a.f.set(b,h,g&&g.aa()?g:q)}};a.g.Y.template=function(b){b=a.g.Ga(b);return 1==b.length&&b[0].unknown||a.g.Sb(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};
a.e.P.template=!0})();a.b("setTemplateEngine",a.La);a.b("renderTemplate",a.Ia);a.a.ra=function(){function a(b,d,e,g,h){var k=Math.min,m=Math.max,f=[],p,q=b.length,l,n=d.length,r=n-q||1,v=q+n+1,t,u,w;for(p=0;p<=q;p++)for(u=t,f.push(t=[]),w=k(n,p+r),l=m(0,p-1);l<=w;l++)t[l]=l?p?b[p-1]===d[l-1]?u[l-1]:k(u[l]||v,t[l-1]||v)+1:l+1:p+1;k=[];m=[];r=[];p=q;for(l=n;p||l;)n=f[p][l]-1,l&&n===f[p][l-1]?m.push(k[k.length]={status:e,value:d[--l],index:l}):p&&n===f[p-1][l]?r.push(k[k.length]={status:g,value:b[--p],
index:p}):(--l,--p,h.sparse||k.push({status:"retained",value:d[l]}));if(m.length&&r.length){b=10*q;var z;for(d=e=0;(h.dontLimitMoves||d<b)&&(z=m[e]);e++){for(g=0;f=r[g];g++)if(z.value===f.value){z.moved=f.index;f.moved=z.index;r.splice(g,1);d=g=0;break}d+=g}}return k.reverse()}return function(c,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};c=c||[];d=d||[];return c.length<=d.length?a(c,d,"added","deleted",e):a(d,c,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.ra);(function(){function b(b,
c,g,h,k){var m=[],f=a.h(function(){var f=c(g,k,a.a.$(m,b))||[];0<m.length&&(a.a.nb(m,f),h&&a.i.p(h,null,[g,f,k]));m.splice(0,m.length);a.a.X(m,f)},null,{I:b,ua:function(){return!a.a.Ra(m)}});return{R:m,h:f.aa()?f:q}}var c=a.a.f.D();a.a.Ja=function(d,e,g,h,k){function m(b,c){x=s[c];t!==c&&(z[b]=x);x.za(t++);a.a.$(x.R,d);r.push(x);w.push(x)}function f(b,c){if(b)for(var d=0,e=c.length;d<e;d++)c[d]&&a.a.n(c[d].R,function(a){b(a,d,c[d].fa)})}e=e||[];h=h||{};var p=a.a.f.get(d,c)===q,s=a.a.f.get(d,c)||[],
l=a.a.ha(s,function(a){return a.fa}),n=a.a.ra(l,e,h.dontLimitMoves),r=[],v=0,t=0,u=[],w=[];e=[];for(var z=[],l=[],x,A=0,y,B;y=n[A];A++)switch(B=y.moved,y.status){case "deleted":B===q&&(x=s[v],x.h&&x.h.B(),u.push.apply(u,a.a.$(x.R,d)),h.beforeRemove&&(e[A]=x,w.push(x)));v++;break;case "retained":m(A,v++);break;case "added":B!==q?m(A,B):(x={fa:y.value,za:a.q(t++)},r.push(x),w.push(x),p||(l[A]=x))}f(h.beforeMove,z);a.a.n(u,h.beforeRemove?a.L:a.removeNode);for(var A=0,p=a.e.firstChild(d),C;x=w[A];A++){x.R||
a.a.extend(x,b(d,g,x.fa,k,x.za));for(v=0;n=x.R[v];p=n.nextSibling,C=n,v++)n!==p&&a.e.eb(d,n,C);!x.Ob&&k&&(k(x.fa,x.R,x.za),x.Ob=!0)}f(h.beforeRemove,e);f(h.afterMove,z);f(h.afterAdd,l);a.a.f.set(d,c,r)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.Ja);a.J=function(){this.allowTemplateRewriting=!1};a.J.prototype=new a.w;a.J.prototype.renderTemplateSource=function(b){var c=(9>a.a.ja?0:b.nodes)?b.nodes():null;if(c)return a.a.Q(c.cloneNode(!0).childNodes);b=b.text();return a.a.Fa(b)};a.J.Aa=
new a.J;a.La(a.J.Aa);a.b("nativeTemplateEngine",a.J);(function(){a.Ba=function(){var a=this.Rb=function(){if("undefined"==typeof u||!u.tmpl)return 0;try{if(0<=u.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,e,g){g=g||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var h=b.data("precompiled");h||(h=b.text()||"",h=u.template(null,"{{ko_with $item.koBindingContext}}"+h+
"{{/ko_with}}"),b.data("precompiled",h));b=[e.$data];e=u.extend({koBindingContext:e},g.templateOptions);e=u.tmpl(h,b,e);e.appendTo(w.createElement("div"));u.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+a+" })()) }}"};this.addTemplate=function(a,b){w.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<a&&(u.tmpl.tag.ko_code={open:"__.push($1 || '');"},u.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.Ba.prototype=
new a.w;var b=new a.Ba;0<b.Rb&&a.La(b);a.b("jqueryTmplTemplateEngine",a.Ba)})()})})();})();
</script>

<!-- PE.js code -->
<script id="pejs">
  var pe;
(function (pe) {
    (function (app) {
        /**
        * Entry point and root ViewModel for the PE.js application.
        */
        var Application = (function () {
            function Application(_host, _window) {
                if (typeof _window === "undefined") { _window = window; }
                this._host = _host;
                this._window = _window;
                pe.app.registerKnockoutBindings(ko);

                this._loadFromDom();
            }
            Application.prototype._loadFromHref = function (data) {
                var _this = this;
                if (typeof data !== 'object') {
                    alert('load from href! ' + data);
                    this._loadFromDom();
                } else {
                    var bootVM = new pe.app.boot.Boot();
                    bootVM.loading = new pe.app.loading.LoadFile(function (callback) {
                        return pe.app.loading.FileReaderSource.load(callback, data);
                    }, function () {
                        return function (work) {
                            return setTimeout(work, 10);
                        };
                    });

                    var popupView = document.createElement('div');
                    popupView.style.position = 'absolute';
                    popupView.style.left = '2em';
                    popupView.style.top = '2em';
                    popupView.style.bottom = '2em';
                    popupView.style.right = '2em';
                    popupView.style.border = '1px solid black';

                    this._host.appendChild(popupView);

                    ko.renderTemplate('Boot', bootVM, null, popupView);

                    if (!this._checkBootComplete(bootVM.loading.loadedPage())) {
                        bootVM.loading.loadedPage.subscribe(function (page) {
                            return _this._checkBootComplete(bootVM.loading.loadedPage());
                        });
                    }
                }
            };

            Application.prototype._loadFromDom = function () {
                var _this = this;
                var ids = [];
                for (var i = 0; i < 16; i++) {
                    var nextId = i.toString();
                    if (nextId.length < 2)
                        nextId = '0' + nextId;
                    nextId = 'data' + nextId;
                    ids.push(nextId);
                }

                var bootVM = new pe.app.boot.Boot();
                bootVM.loading = new pe.app.loading.LoadFile(function (callback) {
                    return new pe.app.loading.DomBase64Source(callback, ids);
                }, function () {
                    return function (work) {
                        return setTimeout(work, 10);
                    };
                });

                ko.renderTemplate('Boot', bootVM, null, this._host);

                if (!this._checkBootComplete(bootVM.loading.loadedPage())) {
                    bootVM.loading.loadedPage.subscribe(function (page) {
                        return _this._checkBootComplete(bootVM.loading.loadedPage());
                    });
                }
            };

            Application.prototype._checkBootComplete = function (loadedPage) {
                var _this = this;
                if (!loadedPage)
                    return false;

                if (loadedPage.open) {
                    loadedPage.open = function (data) {
                        _this._onopenAnother(data);
                    };
                }

                var template = loadedPage.details ? 'Managed' : 'Unmanaged';
                ko.renderTemplate('Managed', loadedPage, null, this._host);

                pe.app.on(this._window, 'keydown', function (e) {
                    return _this._onkeydown(e);
                });
            };

            Application.prototype._onkeydown = function (e) {
                if (e.keyCode === ('O').charCodeAt(0) && (e.altKey || e.ctrlKey)) {
                    this._onopenAnother(null);
                    e.cancelBubble = true;
                    if (e.preventDefault)
                        e.preventDefault();
                    return false;
                }
            };

            Application.prototype._onopenAnother = function (data) {
                this._loadFromHref(data);
            };
            return Application;
        })();
        app.Application = Application;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (boot) {
            var Boot = (function () {
                function Boot() {
                    /** A for April. */
                    this.appVersion = '0.4.2a';
                    this.loading = null;
                }
                return Boot;
            })();
            boot.Boot = Boot;
        })(app.boot || (app.boot = {}));
        var boot = app.boot;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        function formatHex(data) {
            if (!data && data !== 0)
                return '';

            var result = data.toString(16) + 'h';
            return result;
        }
        app.formatHex = formatHex;

        function formatAddress(data) {
            return formatHex(data);
        }
        app.formatAddress = formatAddress;

        function formatBytes(bytes) {
            if (!bytes)
                return '';

            var result = [];
            for (var i = 0; i < bytes.length; i++) {
                var hh = bytes[i].toString(16);
                if (hh.length == 1)
                    hh = '0' + hh;
                result.push(hh);
            }
            return result.join(' ');
        }
        app.formatBytes = formatBytes;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        function on(host, eventName, handler) {
            if (host.addEventListener) {
                host.addEventListener(eventName, handler, false);
            } else if (host.attachEvent) {
                host.attachEvent('on' + eventName, handler);
            } else if ('on' + eventName in host) {
                host['on' + eventName] = handler;
            }
        }
        app.on = on;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        function registerKnockoutBindings(ko) {
            if (ko.bindingHandlers.attach)
                return;

            ko.bindingHandlers.attach = {
                init: function (element, valueAccessor) {
                    valueAccessor();
                }
            };
        }
        app.registerKnockoutBindings = registerKnockoutBindings;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var AssemblyDetails = (function () {
                function AssemblyDetails(assembly) {
                    this.name = '';
                    this.version = null;
                    this.publicKey = null;
                    this.runtimeVersion = '';
                    this.specificRuntimeVersion = '';
                    this.moduleName = '';
                    this.mvid = '';
                    this.name = assembly.name;
                    this.version = assembly.version;
                    this.publicKey = assembly.publicKey;
                    this.runtimeVersion = assembly.runtimeVersion;
                    this.specificRuntimeVersion = assembly.specificRuntimeVersion;
                    this.moduleName = assembly.moduleName;
                    this.mvid = assembly.mvid;
                }
                return AssemblyDetails;
            })();
            loaded.AssemblyDetails = AssemblyDetails;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var Page = (function () {
                function Page(_assembly) {
                    this._assembly = _assembly;
                    this.selectedNode = ko.observable(null);
                    this.details = new pe.app.loaded.AssemblyDetails(this._assembly);
                    this.peHeaders = new pe.app.loaded.PEHeadersNode(null, this._assembly.fileHeaders);
                    this.references = new pe.app.loaded.ReferencesNode(null, this._assembly);

                    this.namespaces = Page.createNamespaceNodes(this._assembly);

                    this.unmanagedImports = new pe.app.loaded.UnmanagedImportsNode(null);
                    this.unmanagedResources = new pe.app.loaded.UnmanagedResourcesNode(null);
                }
                Page.prototype.open = function (data) {
                    alert('Page.open()');
                };

                Page.prototype.attachFileInput = function (input) {
                    var _this = this;
                    input.onchange = function () {
                        if (input.files && input.files.length) {
                            _this.open(input.files[0]);
                        }
                    };
                };

                Page.createNamespaceNodes = function (assembly) {
                    var byNamespace = {};

                    assembly.types.forEach(function (t) {
                        var nsTypes = byNamespace[t.namespace] || (byNamespace[t.namespace] = {});
                        nsTypes[t.name] = t;
                    });

                    var orderedNsNames = Object.keys(byNamespace).sort();
                    var namespaces = orderedNsNames.filter(function (nsName) {
                        return byNamespace.hasOwnProperty(nsName);
                    }).map(function (nsName) {
                        return new pe.app.loaded.NamespaceNode(null, nsName, byNamespace[nsName]);
                    });

                    return namespaces;
                };

                Page.prototype.nodeClick = function (node, event) {
                    var srcElement = event.srcElement;
                    while (srcElement) {
                        var isHandled = false;
                        var data = ko.dataFor(srcElement);

                        if (typeof data.isExpanded === 'function') {
                            data.isExpanded(!data.isExpanded());
                            isHandled = true;
                        }

                        if (typeof data.click === 'function') {
                            data.click();
                            isHandled = true;
                        }

                        if (data && data.details) {
                            this.selectedNode(data);
                            isHandled = true;
                        }

                        if (isHandled) {
                            if (event.preventDefault)
                                event.preventDefault();
                            if ('cancelBubble' in event)
                                event.cancelBubble = true;
                            return;
                        }

                        srcElement = srcElement.parentElement;
                    }
                };
                return Page;
            })();
            loaded.Page = Page;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var PageUnmanaged = (function () {
                function PageUnmanaged(_headers) {
                    this._headers = _headers;
                    this.peHeaders = new pe.app.loaded.PEHeadersNode(this._headers);

                    this.unmanagedImports = new pe.app.loaded.UnmanagedImportsNode();
                    this.unmanagedResources = new pe.app.loaded.UnmanagedResourcesNode();
                }
                return PageUnmanaged;
            })();
            loaded.PageUnmanaged = PageUnmanaged;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var BaseNode = (function () {
                function BaseNode(parent) {
                    this.parent = parent;
                    this.isSelected = ko.observable(false);
                    this.details = null;
                }
                BaseNode.prototype.click = function () {
                };
                return BaseNode;
            })();
            loaded.BaseNode = BaseNode;

            var BaseNodeWithChildren = (function (_super) {
                __extends(BaseNodeWithChildren, _super);
                function BaseNodeWithChildren(parent) {
                    var _this = this;
                    _super.call(this, parent);
                    this.isExpanded = ko.observable(false);
                    this._isPopulated = false;
                    this.isExpanded.subscribe(function (value) {
                        return _this.populateOnExpand();
                    });
                }
                BaseNodeWithChildren.prototype.populateOnExpand = function () {
                };

                BaseNodeWithChildren.prototype._isExpandedChanged = function () {
                    if (!this._isPopulated) {
                        this._isPopulated = true;
                        this.populateOnExpand();
                    }
                };
                return BaseNodeWithChildren;
            })(BaseNode);
            loaded.BaseNodeWithChildren = BaseNodeWithChildren;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var FieldNode = (function (_super) {
                __extends(FieldNode, _super);
                function FieldNode(parent, fieldInfo) {
                    _super.call(this, parent);
                    this.fieldInfo = fieldInfo;
                    this.accessor = '';

                    if (fieldInfo.attributes & 6 /* Public */)
                        this.accessor = 'public';
                    else if (fieldInfo.attributes & 1 /* Private */)
                        this.accessor = 'private';

                    if (fieldInfo.attributes & 64 /* Literal */)
                        this.accessor += ' const';
                    else if (fieldInfo.attributes & 32 /* InitOnly */)
                        this.accessor += ' readonly';

                    this.name = this.fieldInfo.name;

                    this.details = fieldInfo;
                }
                return FieldNode;
            })(pe.app.loaded.BaseNode);
            loaded.FieldNode = FieldNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var MethodNode = (function (_super) {
                __extends(MethodNode, _super);
                function MethodNode(parent, methodInfo) {
                    _super.call(this, parent);
                    this.methodInfo = methodInfo;
                    this.accessor = '';

                    this.details = methodInfo;

                    if (methodInfo.attributes & 1 /* Private */)
                        this.accessor = 'private';
                    else if (methodInfo.attributes & 6 /* Public */)
                        this.accessor = 'public';

                    this.name = this.methodInfo.name;
                }
                return MethodNode;
            })(pe.app.loaded.BaseNode);
            loaded.MethodNode = MethodNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var NamespaceNode = (function (_super) {
                __extends(NamespaceNode, _super);
                function NamespaceNode(parent, name, _types) {
                    _super.call(this, parent);
                    this.name = name;
                    this._types = _types;
                    this.types = ko.observableArray([]);
                    if (this.name === null)
                        this.name = '{}';
                }
                NamespaceNode.prototype.populateOnExpand = function () {
                    var _this = this;
                    var orderedNames = Object.keys(this._types).sort();
                    var types = orderedNames.filter(function (name) {
                        return _this._types.hasOwnProperty(name);
                    }).map(function (name) {
                        return new pe.app.loaded.TypeNode(_this, name, _this._types[name]);
                    });
                    this.types(types);
                };
                return NamespaceNode;
            })(pe.app.loaded.BaseNodeWithChildren);
            loaded.NamespaceNode = NamespaceNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var PEHeadersNode = (function (_super) {
                __extends(PEHeadersNode, _super);
                function PEHeadersNode(parent, headers) {
                    _super.call(this, parent);
                    this.headers = headers;
                    this.details = headers;
                }
                return PEHeadersNode;
            })(pe.app.loaded.BaseNode);
            loaded.PEHeadersNode = PEHeadersNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var PropertyNode = (function (_super) {
                __extends(PropertyNode, _super);
                function PropertyNode(parent, propertyInfo) {
                    _super.call(this, parent);
                    this.propertyInfo = propertyInfo;
                    this.name = this.propertyInfo.name;
                }
                return PropertyNode;
            })(pe.app.loaded.BaseNode);
            loaded.PropertyNode = PropertyNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var ReferencesNode = (function (_super) {
                __extends(ReferencesNode, _super);
                function ReferencesNode(parent, assembly) {
                    _super.call(this, parent);
                }
                return ReferencesNode;
            })(pe.app.loaded.BaseNode);
            loaded.ReferencesNode = ReferencesNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var Tree = (function () {
                function Tree() {
                }
                return Tree;
            })();
            loaded.Tree = Tree;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var TypeNode = (function (_super) {
                __extends(TypeNode, _super);
                function TypeNode(parent, name, type) {
                    _super.call(this, parent);
                    this.name = name;
                    this.type = type;
                    this.methods = ko.observableArray([]);
                    this.properties = ko.observableArray([]);
                    this.fields = ko.observableArray([]);
                    this.details = type;
                }
                TypeNode.prototype.populateOnExpand = function () {
                    var _this = this;
                    this.methods(this.type.methods.sort(compareNamed).map(function (m) {
                        return new pe.app.loaded.MethodNode(_this, m);
                    }));
                    this.properties(this.type.properties.sort(compareNamed).map(function (p) {
                        return new pe.app.loaded.PropertyNode(_this, p);
                    }));
                    this.fields(this.type.fields.sort(compareNamed).map(function (f) {
                        return new pe.app.loaded.FieldNode(_this, f);
                    }));
                };
                return TypeNode;
            })(pe.app.loaded.BaseNodeWithChildren);
            loaded.TypeNode = TypeNode;

            function compareNamed(n1, n2) {
                return compareStrings(n1.name, n2.name);
            }

            function compareStrings(s1, s2) {
                return s1 > s2 ? +1 : s1 < s2 ? -1 : 0;
            }
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var UnmanagedImportsNode = (function (_super) {
                __extends(UnmanagedImportsNode, _super);
                function UnmanagedImportsNode(parent) {
                    _super.call(this, parent);
                }
                return UnmanagedImportsNode;
            })(pe.app.loaded.BaseNode);
            loaded.UnmanagedImportsNode = UnmanagedImportsNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var UnmanagedResourceNode = (function (_super) {
                __extends(UnmanagedResourceNode, _super);
                function UnmanagedResourceNode(parent) {
                    _super.call(this, parent);
                }
                return UnmanagedResourceNode;
            })(pe.app.loaded.BaseNode);
            loaded.UnmanagedResourceNode = UnmanagedResourceNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loaded) {
            var UnmanagedResourcesNode = (function (_super) {
                __extends(UnmanagedResourcesNode, _super);
                function UnmanagedResourcesNode(parent) {
                    _super.call(this, parent);
                    this.resources = [];
                }
                UnmanagedResourcesNode.prototype.populateOnExpand = function () {
                    //
                };
                return UnmanagedResourcesNode;
            })(pe.app.loaded.BaseNodeWithChildren);
            loaded.UnmanagedResourcesNode = UnmanagedResourcesNode;
        })(app.loaded || (app.loaded = {}));
        var loaded = app.loaded;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loading) {
            var DomBase64Source = (function () {
                function DomBase64Source(_callback, _ids, _doc) {
                    if (typeof _doc === "undefined") { _doc = document; }
                    this._callback = _callback;
                    this._ids = _ids;
                    this._doc = _doc;
                    this._loaded = [];
                    this._loadedSize = 0;
                    this._continueReading();
                }
                DomBase64Source.prototype._continueReading = function () {
                    var _this = this;
                    while (this._loaded.length < this._ids.length) {
                        var nextId = this._ids[this._loaded.length];
                        var nextElement = this._doc.getElementById(nextId);

                        var nextBase64 = nextElement.innerHTML || nextElement.textContent || nextElement.innerText;
                        var nextBinary = atob(nextBase64);

                        this._loaded.push(nextBinary);
                        this._loadedSize += nextBinary.length;

                        if (this._callback.progress) {
                            var estimatedTotalSize = this._loadedSize * this._ids.length / this._loaded.length;
                            var shouldYield = this._callback.progress(this._loadedSize, estimatedTotalSize, 'extracting from HTML');
                            if (shouldYield) {
                                shouldYield(function () {
                                    return _this._continueReading();
                                });
                                return;
                            }
                        }
                    }

                    this._complete();
                };

                DomBase64Source.prototype._complete = function () {
                    var buffer = new ArrayBuffer(this._loadedSize);
                    var binary = new Uint8Array(buffer);
                    var pos = 0;
                    for (var i = 0; i < this._loaded.length; i++) {
                        for (var j = 0; j < this._loaded[i].length; j++) {
                            binary[pos] = this._loaded[i].charCodeAt(j);
                            pos++;
                        }
                    }

                    this._callback(null, buffer);
                };
                return DomBase64Source;
            })();
            loading.DomBase64Source = DomBase64Source;
        })(app.loading || (app.loading = {}));
        var loading = app.loading;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loading) {
            (function (FileReaderSource) {
                function load(callback, file) {
                    var fileReader = new FileReader();
                    fileReader.onerror = function (er) {
                        callback(er, null);
                    };
                    fileReader.onloadend = function (ev) {
                        if (fileReader.readyState !== 2) {
                            callback(new Error('Read ' + fileReader.readyState + fileReader.error + '.'), null);
                            return;
                        }

                        callback(null, fileReader.result);
                    };
                    if (callback.progress) {
                        fileReader.onprogress = function (ev) {
                            callback.progress(ev.loaded, ev.total, 'Loading...');
                        };
                    }

                    fileReader.readAsArrayBuffer(file);
                }
                FileReaderSource.load = load;
            })(loading.FileReaderSource || (loading.FileReaderSource = {}));
            var FileReaderSource = loading.FileReaderSource;
        })(app.loading || (app.loading = {}));
        var loading = app.loading;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (app) {
        (function (loading) {
            /**
            * Backing file loading screen.
            * This class is ViewModel bound to DOM with Knockout.js.
            * Parametrized with an ArrayBuffer loading function (async)
            * and a scheduler that can yield.
            */
            var LoadFile = (function () {
                function LoadFile(arrayBufferSource, _yieldScheduler) {
                    var _this = this;
                    this._yieldScheduler = _yieldScheduler;
                    this.className = ko.observable('');
                    this.shortText = ko.observable('');
                    this.progressRatio = ko.observable(0);
                    this.loadedPage = ko.observable(null);
                    this.error = null;
                    this._reader = null;
                    this._headers = null;
                    this._assembly = null;
                    this._oncomplete = [];
                    var callback = function (error, arrayBuffer) {
                        return _this._arrayBufferComplete(error, arrayBuffer);
                    };

                    callback.progress = function (current, total, text) {
                        if (typeof text === "undefined") { text = _this.shortText(); }
                        _this.progressRatio(LoadFile._loadWorkPart * current / total);
                        _this.shortText(text);
                        return _this._yieldScheduler();
                    };

                    this.className('pe-loading-getdata');
                    this.shortText('wait');
                    this.progressRatio(0);
                    arrayBufferSource(callback);
                }
                LoadFile.prototype.oncomplete = function (handler) {
                    if (this.loadedPage()) {
                        handler(null, this.loadedPage());
                        return;
                    } else if (this.error) {
                        handler(this.error, null);
                        return;
                    } else {
                        this._oncomplete.push(handler);
                    }
                };

                LoadFile.prototype._arrayBufferComplete = function (error, arrayBuffer) {
                    var _this = this;
                    if (this._handleError(error))
                        return;

                    this.className('pe-loading-unmanaged');
                    this.shortText('PE headers');
                    this.progressRatio(LoadFile._loadWorkPart);

                    this._reader = new pe.io.BufferReader(arrayBuffer);
                    this._headers = new pe.headers.PEFileHeaders();

                    var callback = function (error, none) {
                        return _this._headersComplete(error);
                    };

                    callback.progress = function (current, total, text) {
                        if (typeof text === "undefined") { text = _this.shortText(); }
                        _this.progressRatio(LoadFile._loadWorkPart + LoadFile._loadHeadersPart * current / total);
                        _this.shortText(text);
                        return _this._yieldScheduler();
                    };

                    this._headers.read(this._reader, callback);
                };

                LoadFile.prototype._headersComplete = function (error) {
                    var _this = this;
                    if (this._handleError(error))
                        return;

                    if (!this._headers.optionalHeader.dataDirectories[14 /* Clr */]) {
                        this._buildUnmanagedResult();
                        return;
                    }

                    this.className('pe-loading-managed');
                    this.shortText('Assembly');
                    this.progressRatio(LoadFile._loadWorkPart + LoadFile._loadHeadersPart);

                    var callback = function (error, assembly) {
                        return _this._assemblyComplete(error, assembly);
                    };

                    callback.progress = function (current, total, text) {
                        if (typeof text === "undefined") { text = _this.shortText(); }
                        _this.progressRatio(LoadFile._loadWorkPart + LoadFile._loadHeadersPart + LoadFile._loadAssembly * current / total);
                        _this.shortText(text);
                        return _this._yieldScheduler();
                    };

                    var dom = new pe.managed.AppDomain();
                    dom.read(this._reader, callback);
                };

                LoadFile.prototype._assemblyComplete = function (error, assembly) {
                    if (this._handleError(error))
                        return;

                    this._assembly = assembly;

                    this._buildManagedResult();
                };

                LoadFile.prototype._buildUnmanagedResult = function () {
                    // TODO: keep yielding here too
                    var unmanagedPage = new pe.app.loaded.PageUnmanaged(this._headers);
                    this.loadedPage(unmanagedPage);

                    for (var i = 0; i < this._oncomplete.length; i++) {
                        var h = this._oncomplete[i];
                        h(null, unmanagedPage);
                    }
                    this._oncomplete = [];
                };

                LoadFile.prototype._buildManagedResult = function () {
                    // TODO: keep yielding here too
                    var page = new pe.app.loaded.Page(this._assembly);
                    this.loadedPage(page);

                    for (var i = 0; i < this._oncomplete.length; i++) {
                        var h = this._oncomplete[i];
                        h(null, page);
                    }
                    this._oncomplete = [];
                };

                LoadFile.prototype._handleError = function (error) {
                    if (error) {
                        this.className('pe-loading-error');
                        this.progressRatio(1);
                        this.shortText(error.message);
                        for (var i = 0; i < this._oncomplete.length; i++) {
                            var h = this._oncomplete[i];
                            h(error, null);
                        }
                        this._oncomplete = [];
                    }

                    return error;
                };
                LoadFile._loadWorkPart = 0.3;
                LoadFile._loadHeadersPart = 0.2;
                LoadFile._loadAssembly = 0.48;
                return LoadFile;
            })();
            loading.LoadFile = LoadFile;
        })(app.loading || (app.loading = {}));
        var loading = app.loading;
    })(pe.app || (pe.app = {}));
    var app = pe.app;
})(pe || (pe = {}));
var pe;
(function (pe) {
    /**
    * 64-bit integer
    */
    var Long = (function () {
        function Long(lo, hi) {
            this.lo = lo;
            this.hi = hi;
        }
        Long.prototype.toString = function () {
            var result;
            result = this.lo.toString(16);
            if (this.hi != 0) {
                result = ("0000").substring(result.length) + result;
                result = this.hi.toString(16) + result;
            }
            result = result.toUpperCase() + "h";
            return result;
        };
        return Long;
    })();
    pe.Long = Long;
})(pe || (pe = {}));
var pe;
(function (pe) {
    /**
    * Convert enum value to string, considering the bit flags.
    */
    function formatEnum(value, type) {
        if (!value) {
            if (typeof value == "null")
                return "null";
            else if (typeof value == "undefined")
                return "undefined";
        }

        var textValue = type[value];
        if (textValue)
            return textValue;

        // find bit flags matching the provided value,
        // collect what bits are covered that way
        var enumValues = [];
        var accountedEnumValueMask = 0;

        for (var kvKey in type) {
            var kvValue = type[kvKey];
            if (typeof kvValue !== 'number')
                continue;

            if (kvValue && (value & kvValue) === kvValue) {
                enumValues.push(kvKey);
                accountedEnumValueMask = accountedEnumValueMask | kvValue;
            }
        }

        // uncovered bits are taken as a hex literal
        var spill = value & ~accountedEnumValueMask;
        if (spill)
            enumValues.push("0x" + spill.toString(16).toUpperCase());

        textValue = enumValues.join(' | ');

        return textValue;
    }
    pe.formatEnum = formatEnum;

    function bytesToHex(bytes) {
        if (!bytes)
            return null;

        var result = "";
        for (var i = 0; i < bytes.length; i++) {
            var hex = bytes[i].toString(16).toUpperCase();
            if (hex.length == 1)
                hex = "0" + hex;
            result += hex;
        }

        return result;
    }
    pe.bytesToHex = bytesToHex;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        var DosHeader = (function () {
            function DosHeader() {
                this.mz = pe.headers.MZSignature.MZ;
                /**
                * Bytes on last page of file.
                */
                this.cblp = 144;
                /**
                * Pages in file.
                */
                this.cp = 3;
                /**
                * Relocations.
                */
                this.crlc = 0;
                /**
                * Size of header in paragraphs.
                */
                this.cparhdr = 4;
                /**
                * Minimum extra paragraphs needed.
                */
                this.minalloc = 0;
                /**
                * Maximum extra paragraphs needed.
                */
                this.maxalloc = 65535;
                /**
                * Initial (relative) SS value.
                */
                this.ss = 0;
                /**
                * Initial SP value.
                */
                this.sp = 184;
                /**
                * Checksum.
                */
                this.csum = 0;
                /**
                * Initial IP value.
                */
                this.ip = 0;
                /**
                * Initial (relative) CS value.
                */
                this.cs = 0;
                /**
                * File address of relocation table.
                */
                this.lfarlc = 64;
                /**
                * Overlay number.
                */
                this.ovno = 0;
                this.res1 = new pe.Long(0, 0);
                /**
                * OEM identifier (for e_oeminfo).
                */
                this.oemid = 0;
                /**
                * OEM information: number; e_oemid specific.
                */
                this.oeminfo = 0;
                this.reserved = [0, 0, 0, 0, 0];
                /**
                * uint: File address of PE header.
                */
                this.lfanew = 0;
            }
            DosHeader.prototype.toString = function () {
                var result = "[" + (this.mz === pe.headers.MZSignature.MZ ? "MZ" : typeof this.mz === "number" ? this.mz.toString(16).toUpperCase() + "h" : typeof this.mz) + "]" + ".lfanew=" + (typeof this.lfanew === "number" ? this.lfanew.toString(16).toUpperCase() + "h" : typeof this.lfanew);

                return result;
            };

            DosHeader.prototype.read = function (reader) {
                this.mz = reader.readShort();
                if (this.mz != pe.headers.MZSignature.MZ)
                    throw new Error("MZ signature is invalid: " + (this.mz).toString(16).toUpperCase() + "h.");

                this.cblp = reader.readShort();
                this.cp = reader.readShort();
                this.crlc = reader.readShort();
                this.cparhdr = reader.readShort();
                this.minalloc = reader.readShort();
                this.maxalloc = reader.readShort();
                this.ss = reader.readShort();
                this.sp = reader.readShort();
                this.csum = reader.readShort();
                this.ip = reader.readShort();
                this.cs = reader.readShort();
                this.lfarlc = reader.readShort();
                this.ovno = reader.readShort();

                this.res1 = reader.readLong();

                this.oemid = reader.readShort();
                this.oeminfo = reader.readShort();

                if (!this.reserved)
                    this.reserved = [];

                for (var i = 0; i < 5; i++) {
                    this.reserved[i] = reader.readInt();
                }

                this.reserved.length = 5;

                this.lfanew = reader.readInt();
            };
            DosHeader.intSize = 16;
            return DosHeader;
        })();
        headers.DosHeader = DosHeader;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        var OptionalHeader = (function () {
            function OptionalHeader() {
                /** Differentiates 32-bit images from 64-bit. */
                this.peMagic = 267 /* NT32 */;
                this.linkerVersion = "";
                /**
                * The size of the code section, in bytes, or the sum of all such sections if there are multiple code sections.
                */
                this.sizeOfCode = 0;
                /**
                * The size of the initialized data section, in bytes, or the sum of all such sections if there are multiple initialized data sections.
                */
                this.sizeOfInitializedData = 0;
                /**
                * The size of the uninitialized data section, in bytes, or the sum of all such sections if there are multiple uninitialized data sections.
                */
                this.sizeOfUninitializedData = 0;
                /**
                * A pointer to the entry point function, relative to the image base address.
                * For executable files, this is the starting address.
                * For device drivers, this is the address of the initialization function.
                * The entry point function is optional for DLLs.
                * When no entry point is present, this member is zero.
                */
                this.addressOfEntryPoint = 0;
                /**
                * A pointer to the beginning of the code section, relative to the image base.
                */
                this.baseOfCode = 0x2000;
                /**
                * A pointer to the beginning of the data section, relative to the image base.
                */
                this.baseOfData = 0x4000;
                /**
                * Uint or 64-bit long.
                * The preferred address of the first byte of the image when it is loaded in memory.
                * This value is a multiple of 64K bytes.
                * The default value for DLLs is 0x10000000.
                * The default value for applications is 0x00400000,
                * except on Windows CE where it is 0x00010000.
                */
                this.imageBase = 0x4000;
                /**
                * The alignment of sections loaded in memory, in bytes.
                * This value must be greater than or equal to the FileAlignment member.
                * The default value is the page size for the system.
                */
                this.sectionAlignment = 0x2000;
                /**
                * The alignment of the raw data of sections in the image file, in bytes.
                * The value should be a power of 2 between 512 and 64K (inclusive).
                * The default is 512.
                * If the <see cref="SectionAlignment"/> member is less than the system page size,
                * this member must be the same as <see cref="SectionAlignment"/>.
                */
                this.fileAlignment = 0x200;
                /**
                * The version of the required operating system.
                */
                this.operatingSystemVersion = "";
                /**
                * The version of the image.
                */
                this.imageVersion = "";
                /**
                * The version of the subsystem.
                */
                this.subsystemVersion = "";
                /**
                * This member is reserved and must be 0.
                */
                this.win32VersionValue = 0;
                /**
                * The size of the image, in bytes, including all headers. Must be a multiple of <see cref="SectionAlignment"/>.
                */
                this.sizeOfImage = 0;
                /**
                * The combined size of the MS-DOS stub, the PE header, and the section headers,
                * rounded to a multiple of the value specified in the FileAlignment member.
                */
                this.sizeOfHeaders = 0;
                /**
                * The image file checksum.
                * The following files are validated at load time:
                * all drivers,
                * any DLL loaded at boot time,
                * and any DLL loaded into a critical system process.
                */
                this.checkSum = 0;
                /**
                * The subsystem required to run this image.
                */
                this.subsystem = 3 /* WindowsCUI */;
                /**
                * The DLL characteristics of the image.
                */
                this.dllCharacteristics = 256 /* NxCompatible */;
                /**
                * Uint or 64 bit long.
                * The number of bytes to reserve for the stack.
                * Only the memory specified by the <see cref="SizeOfStackCommit"/> member is committed at load time;
                * the rest is made available one page at a time until this reserve size is reached.
                */
                this.sizeOfStackReserve = 0x100000;
                /**
                * Uint or 64 bit long.
                * The number of bytes to commit for the stack.
                */
                this.sizeOfStackCommit = 0x1000;
                /**
                * Uint or 64 bit long.
                * The number of bytes to reserve for the local heap.
                * Only the memory specified by the <see cref="SizeOfHeapCommit"/> member is committed at load time;
                * the rest is made available one page at a time until this reserve size is reached.
                */
                this.sizeOfHeapReserve = 0x100000;
                /**
                * Uint or 64 bit long.
                * The number of bytes to commit for the local heap.
                */
                this.sizeOfHeapCommit = 0x1000;
                /**
                * This member is obsolete.
                */
                this.loaderFlags = 0;
                /**
                * The number of directory entries in the remainder of the optional header.
                * Each entry describes a location and size.
                */
                this.numberOfRvaAndSizes = 16;
                this.dataDirectories = [];
            }
            OptionalHeader.prototype.toString = function () {
                var result = [];

                var peMagicText = pe.formatEnum(this.peMagic, pe.headers.PEMagic);
                if (peMagicText)
                    result.push(peMagicText);

                var subsystemText = pe.formatEnum(this.subsystem, pe.headers.Subsystem);
                if (subsystemText)
                    result.push(subsystemText);

                var dllCharacteristicsText = pe.formatEnum(this.dllCharacteristics, pe.headers.DllCharacteristics);
                if (dllCharacteristicsText)
                    result.push(dllCharacteristicsText);

                var nonzeroDataDirectoriesText = [];
                if (this.dataDirectories) {
                    for (var i = 0; i < this.dataDirectories.length; i++) {
                        if (!this.dataDirectories[i] || this.dataDirectories[i].size <= 0)
                            continue;

                        var kind = pe.formatEnum(i, pe.headers.DataDirectoryKind);
                        nonzeroDataDirectoriesText.push(kind);
                    }
                }

                result.push("dataDirectories[" + nonzeroDataDirectoriesText.join(",") + "]");

                var resultText = result.join(" ");

                return resultText;
            };

            OptionalHeader.prototype.read = function (reader) {
                this.peMagic = reader.readShort();

                if (this.peMagic != 267 /* NT32 */ && this.peMagic != 523 /* NT64 */)
                    throw Error("Unsupported PE magic value " + this.peMagic.toString(16).toUpperCase() + "h.");

                this.linkerVersion = reader.readByte() + "." + reader.readByte();

                this.sizeOfCode = reader.readInt();
                this.sizeOfInitializedData = reader.readInt();
                this.sizeOfUninitializedData = reader.readInt();
                this.addressOfEntryPoint = reader.readInt();
                this.baseOfCode = reader.readInt();

                if (this.peMagic == 267 /* NT32 */) {
                    this.baseOfData = reader.readInt();
                    this.imageBase = reader.readInt();
                } else {
                    this.imageBase = reader.readLong();
                }

                this.sectionAlignment = reader.readInt();
                this.fileAlignment = reader.readInt();
                this.operatingSystemVersion = reader.readShort() + "." + reader.readShort();
                this.imageVersion = reader.readShort() + "." + reader.readShort();
                this.subsystemVersion = reader.readShort() + "." + reader.readShort();
                this.win32VersionValue = reader.readInt();
                this.sizeOfImage = reader.readInt();
                this.sizeOfHeaders = reader.readInt();
                this.checkSum = reader.readInt();
                this.subsystem = reader.readShort();
                this.dllCharacteristics = reader.readShort();

                if (this.peMagic == 267 /* NT32 */) {
                    this.sizeOfStackReserve = reader.readInt();
                    this.sizeOfStackCommit = reader.readInt();
                    this.sizeOfHeapReserve = reader.readInt();
                    this.sizeOfHeapCommit = reader.readInt();
                } else {
                    this.sizeOfStackReserve = reader.readLong();
                    this.sizeOfStackCommit = reader.readLong();
                    this.sizeOfHeapReserve = reader.readLong();
                    this.sizeOfHeapCommit = reader.readLong();
                }

                this.loaderFlags = reader.readInt();
                this.numberOfRvaAndSizes = reader.readInt();

                if (this.dataDirectories == null || this.dataDirectories.length != this.numberOfRvaAndSizes)
                    this.dataDirectories = (Array(this.numberOfRvaAndSizes));

                for (var i = 0; i < this.numberOfRvaAndSizes; i++) {
                    if (this.dataDirectories[i]) {
                        this.dataDirectories[i].address = reader.readInt();
                        this.dataDirectories[i].size = reader.readInt();
                    } else {
                        this.dataDirectories[i] = new pe.headers.AddressRange(reader.readInt(), reader.readInt());
                    }
                }
            };
            OptionalHeader.intSize32 = 6;
            OptionalHeader.intSize64 = 10;
            return OptionalHeader;
        })();
        headers.OptionalHeader = OptionalHeader;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        var PEFileHeaders = (function () {
            function PEFileHeaders() {
                this.dosHeader = new pe.headers.DosHeader();
                this.dosStub = [];
                this.peHeader = new pe.headers.PEHeader();
                this.optionalHeader = new pe.headers.OptionalHeader();
                this.sectionHeaders = [];
            }
            PEFileHeaders.prototype.toString = function () {
                var result = "dosHeader: " + (this.dosHeader ? this.dosHeader + "" : "null") + " " + "dosStub: " + (this.dosStub ? "[" + this.dosStub.length + "]" : "null") + " " + "peHeader: " + (this.peHeader ? "[" + this.peHeader.machine + "]" : "null") + " " + "optionalHeader: " + (this.optionalHeader ? "[" + pe.formatEnum(this.optionalHeader.subsystem, pe.headers.Subsystem) + "," + this.optionalHeader.imageVersion + "]" : "null") + " " + "sectionHeaders: " + (this.sectionHeaders ? "[" + this.sectionHeaders.length + "]" : "null");
                return result;
            };

            PEFileHeaders.prototype.read = function (reader, async) {
                this._continueRead(reader, async, 0);
            };

            PEFileHeaders.prototype._continueRead = function (reader, async, stage) {
                var _this = this;
                var dosHeaderSize = 64;
                var stageCount = 6;

                switch (stage) {
                    case 0:
                        if (!this.dosHeader)
                            this.dosHeader = new pe.headers.DosHeader();
                        this.dosHeader.read(reader);

                        stage++;
                        if (async && async.progress) {
                            var continueLater = async.progress(stage, stageCount);
                            if (continueLater) {
                                continueLater(function () {
                                    return _this._continueRead(reader, async, stage);
                                });
                                return;
                            }
                        }

                    case 1:
                        var dosHeaderLength = this.dosHeader.lfanew - dosHeaderSize;
                        if (dosHeaderLength > 0)
                            this.dosStub = reader.readBytes(dosHeaderLength);
                        else
                            this.dosStub = null;

                        stage++;
                        if (async && async.progress) {
                            var continueLater = async.progress(stage, stageCount);
                            if (continueLater) {
                                continueLater(function () {
                                    return _this._continueRead(reader, async, stage);
                                });
                                return;
                            }
                        }

                    case 2:
                        if (!this.peHeader)
                            this.peHeader = new pe.headers.PEHeader();
                        this.peHeader.read(reader);

                        stage++;
                        if (async && async.progress) {
                            var continueLater = async.progress(stage, stageCount);
                            if (continueLater) {
                                continueLater(function () {
                                    return _this._continueRead(reader, async, stage);
                                });
                                return;
                            }
                        }

                    case 3:
                        if (!this.optionalHeader)
                            this.optionalHeader = new pe.headers.OptionalHeader();
                        this.optionalHeader.read(reader);

                        stage++;
                        if (async && async.progress) {
                            var continueLater = async.progress(stage, stageCount);
                            if (continueLater) {
                                continueLater(function () {
                                    return _this._continueRead(reader, async, stage);
                                });
                                return;
                            }
                        }

                    case 4:
                        if (this.peHeader.numberOfSections > 0) {
                            if (!this.sectionHeaders || this.sectionHeaders.length != this.peHeader.numberOfSections)
                                this.sectionHeaders = Array(this.peHeader.numberOfSections);

                            for (var i = 0; i < this.sectionHeaders.length; i++) {
                                if (!this.sectionHeaders[i])
                                    this.sectionHeaders[i] = new pe.headers.SectionHeader();
                                this.sectionHeaders[i].read(reader);
                            }
                        }

                        if (async) {
                            async(null, this);
                        }
                }
            };
            return PEFileHeaders;
        })();
        headers.PEFileHeaders = PEFileHeaders;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        var PEHeader = (function () {
            function PEHeader() {
                this.pe = pe.headers.PESignature.PE;
                /**
                * The architecture type of the computer.
                * An image file can only be run on the specified computer or a system that emulates the specified computer.
                */
                this.machine = 332 /* I386 */;
                /**
                * UShort. Indicates the size of the section table, which immediately follows the headers.
                * Note that the Windows loader limits the number of sections to 96.
                */
                this.numberOfSections = 0;
                /**
                * The low 32 bits of the time stamp of the image.
                * This represents the date and time the image was created by the linker.
                * The value is represented in the number of seconds elapsed since
                * midnight (00:00:00), January 1, 1970, Universal Coordinated Time,
                * according to the system clock.
                */
                this.timestamp = new Date(0);
                /**
                * UInt. The offset of the symbol table, in bytes, or zero if no COFF symbol table exists.
                */
                this.pointerToSymbolTable = 0;
                /**
                * UInt. The number of symbols in the symbol table.
                */
                this.numberOfSymbols = 0;
                /**
                * UShort. The size of the optional header, in bytes. This value should be 0 for object files.
                */
                this.sizeOfOptionalHeader = 0;
                /**
                * The characteristics of the image.
                */
                this.characteristics = 8192 /* Dll */ | 256 /* Bit32Machine */;
            }
            PEHeader.prototype.toString = function () {
                var result = pe.formatEnum(this.machine, pe.headers.Machine) + " " + pe.formatEnum(this.characteristics, pe.headers.ImageCharacteristics) + " " + "Sections[" + this.numberOfSections + "]";
                return result;
            };

            PEHeader.prototype.read = function (reader) {
                this.pe = reader.readInt();
                if (this.pe != pe.headers.PESignature.PE)
                    throw new Error("PE signature is invalid: " + (this.pe).toString(16).toUpperCase() + "h.");

                this.machine = reader.readShort();
                this.numberOfSections = reader.readShort();

                if (!this.timestamp)
                    this.timestamp = new Date(0);
                this.timestamp.setTime(reader.readInt() * 1000);

                this.pointerToSymbolTable = reader.readInt();
                this.numberOfSymbols = reader.readInt();
                this.sizeOfOptionalHeader = reader.readShort();
                this.characteristics = reader.readShort();
            };
            PEHeader.intSize = 6;
            return PEHeader;
        })();
        headers.PEHeader = PEHeader;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        // TODO: move it in its own file (why TF it doesn't compile now??)
        var AddressRange = (function () {
            function AddressRange(address, size) {
                this.address = address;
                this.size = size;
                if (!this.address)
                    this.address = 0;
                if (!this.size)
                    this.size = 0;
            }
            AddressRange.prototype.mapRelative = function (offset) {
                var result = offset - this.address;
                if (result >= 0 && result < this.size)
                    return result;
                else
                    return -1;
            };

            AddressRange.prototype.toString = function () {
                return this.address.toString(16).toUpperCase() + ":" + this.size.toString(16).toUpperCase() + "h";
            };
            return AddressRange;
        })();
        headers.AddressRange = AddressRange;

        var AddressRangeMap = (function (_super) {
            __extends(AddressRangeMap, _super);
            function AddressRangeMap(address, size, virtualAddress) {
                _super.call(this, address, size);
                this.virtualAddress = virtualAddress;

                if (!this.virtualAddress)
                    this.virtualAddress = 0;
            }
            AddressRangeMap.prototype.toString = function () {
                return this.address.toString(16).toUpperCase() + ":" + this.size.toString(16).toUpperCase() + "@" + this.virtualAddress + "h";
            };
            return AddressRangeMap;
        })(AddressRange);
        headers.AddressRangeMap = AddressRangeMap;

        var SectionHeader = (function (_super) {
            __extends(SectionHeader, _super);
            function SectionHeader() {
                _super.call(this);
                /**
                * An 8-byte, null-padded UTF-8 string.
                * There is no terminating null character if the string is exactly eight characters long.
                * For longer names, this member contains a forward slash (/)
                * followed by an ASCII representation of a decimal number that is an offset into the string table.
                * Executable images do not use a string table
                * and do not support section names longer than eight characters.
                */
                this.name = "";
                /**
                * A file pointer to the beginning of the relocation entries for the section.
                * If there are no relocations, this value is zero.
                */
                this.pointerToRelocations = 0;
                /**
                * A file pointer to the beginning of the line-number entries for the section.
                * If there are no COFF line numbers, this value is zero.
                */
                this.pointerToLinenumbers = 0;
                /**
                * Ushort.
                * The number of relocation entries for the section.
                * This value is zero for executable images.
                */
                this.numberOfRelocations = 0;
                /**
                * Ushort.
                * The number of line-number entries for the section.
                */
                this.numberOfLinenumbers = 0;
                /**
                * The characteristics of the image.
                */
                this.characteristics = 32 /* ContainsCode */;
            }
            SectionHeader.prototype.toString = function () {
                var result = this.name + " " + _super.prototype.toString.call(this);
                return result;
            };

            SectionHeader.prototype.read = function (reader) {
                this.name = reader.readZeroFilledAscii(8);

                this.virtualSize = reader.readInt();
                this.virtualAddress = reader.readInt();

                var sizeOfRawData = reader.readInt();
                var pointerToRawData = reader.readInt();

                this.size = sizeOfRawData;
                this.address = pointerToRawData;

                this.pointerToRelocations = reader.readInt();
                this.pointerToLinenumbers = reader.readInt();
                this.numberOfRelocations = reader.readShort();
                this.numberOfLinenumbers = reader.readShort();
                this.characteristics = reader.readInt();
            };
            SectionHeader.intSize = 16;
            return SectionHeader;
        })(AddressRangeMap);
        headers.SectionHeader = SectionHeader;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (DataDirectoryKind) {
            DataDirectoryKind[DataDirectoryKind["ExportSymbols"] = 0] = "ExportSymbols";
            DataDirectoryKind[DataDirectoryKind["ImportSymbols"] = 1] = "ImportSymbols";
            DataDirectoryKind[DataDirectoryKind["Resources"] = 2] = "Resources";
            DataDirectoryKind[DataDirectoryKind["Exception"] = 3] = "Exception";
            DataDirectoryKind[DataDirectoryKind["Security"] = 4] = "Security";
            DataDirectoryKind[DataDirectoryKind["BaseRelocation"] = 5] = "BaseRelocation";
            DataDirectoryKind[DataDirectoryKind["Debug"] = 6] = "Debug";
            DataDirectoryKind[DataDirectoryKind["CopyrightString"] = 7] = "CopyrightString";
            DataDirectoryKind[DataDirectoryKind["Unknown"] = 8] = "Unknown";
            DataDirectoryKind[DataDirectoryKind["ThreadLocalStorage"] = 9] = "ThreadLocalStorage";
            DataDirectoryKind[DataDirectoryKind["LoadConfiguration"] = 10] = "LoadConfiguration";
            DataDirectoryKind[DataDirectoryKind["BoundImport"] = 11] = "BoundImport";
            DataDirectoryKind[DataDirectoryKind["ImportAddressTable"] = 12] = "ImportAddressTable";
            DataDirectoryKind[DataDirectoryKind["DelayImport"] = 13] = "DelayImport";

            /**
            * Common Language Runtime, look for ClrDirectory at that offset.
            */
            DataDirectoryKind[DataDirectoryKind["Clr"] = 14] = "Clr";
        })(headers.DataDirectoryKind || (headers.DataDirectoryKind = {}));
        var DataDirectoryKind = headers.DataDirectoryKind;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (DllCharacteristics) {
            /**
            * Reserved.
            */
            DllCharacteristics[DllCharacteristics["ProcessInit"] = 0x0001] = "ProcessInit";

            /**
            * Reserved.
            */
            DllCharacteristics[DllCharacteristics["ProcessTerm"] = 0x0002] = "ProcessTerm";

            /**
            * Reserved.
            */
            DllCharacteristics[DllCharacteristics["ThreadInit"] = 0x0004] = "ThreadInit";

            /**
            * Reserved.
            */
            DllCharacteristics[DllCharacteristics["ThreadTerm"] = 0x0008] = "ThreadTerm";

            /**
            * The DLL can be relocated at load time.
            */
            DllCharacteristics[DllCharacteristics["DynamicBase"] = 0x0040] = "DynamicBase";

            /**
            * Code integrity checks are forced.
            * If you set this flag and a section contains only uninitialized data,
            * set the PointerToRawData member of IMAGE_SECTION_HEADER
            * for that section to zero;
            * otherwise, the image will fail to load because the digital signature cannot be verified.
            */
            DllCharacteristics[DllCharacteristics["ForceIntegrity"] = 0x0080] = "ForceIntegrity";

            /**
            * The image is compatible with data execution prevention (DEP).
            */
            DllCharacteristics[DllCharacteristics["NxCompatible"] = 0x0100] = "NxCompatible";

            /**
            * The image is isolation aware, but should not be isolated.
            */
            DllCharacteristics[DllCharacteristics["NoIsolation"] = 0x0200] = "NoIsolation";

            /**
            * The image does not use structured exception handling (SEH). No SE handler may reside in this image.
            */
            DllCharacteristics[DllCharacteristics["NoSEH"] = 0x0400] = "NoSEH";

            /**
            * Do not bind this image.
            */
            DllCharacteristics[DllCharacteristics["NoBind"] = 0x0800] = "NoBind";

            /**
            * The image must run inside an AppContainer.
            */
            DllCharacteristics[DllCharacteristics["AppContainer"] = 0x1000] = "AppContainer";

            /**
            * WDM (Windows Driver Model) driver.
            */
            DllCharacteristics[DllCharacteristics["WdmDriver"] = 0x2000] = "WdmDriver";

            /**
            * Reserved (no specific name).
            */
            DllCharacteristics[DllCharacteristics["Reserved"] = 0x4000] = "Reserved";

            /**
            * The image is terminal server aware.
            */
            DllCharacteristics[DllCharacteristics["TerminalServerAware"] = 0x8000] = "TerminalServerAware";
        })(headers.DllCharacteristics || (headers.DllCharacteristics = {}));
        var DllCharacteristics = headers.DllCharacteristics;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (ImageCharacteristics) {
            /**
            * Relocation information was stripped from the file.
            * The file must be loaded at its preferred base address.
            * If the base address is not available, the loader reports an error.
            */
            ImageCharacteristics[ImageCharacteristics["RelocsStripped"] = 0x0001] = "RelocsStripped";

            /**
            * The file is executable (there are no unresolved external references).
            */
            ImageCharacteristics[ImageCharacteristics["ExecutableImage"] = 0x0002] = "ExecutableImage";

            /**
            * COFF line numbers were stripped from the file.
            */
            ImageCharacteristics[ImageCharacteristics["LineNumsStripped"] = 0x0004] = "LineNumsStripped";

            /**
            * COFF symbol table entries were stripped from file.
            */
            ImageCharacteristics[ImageCharacteristics["LocalSymsStripped"] = 0x0008] = "LocalSymsStripped";

            /**
            * Aggressively trim the working set.
            * This value is obsolete as of Windows 2000.
            */
            ImageCharacteristics[ImageCharacteristics["AggressiveWsTrim"] = 0x0010] = "AggressiveWsTrim";

            /**
            * The application can handle addresses larger than 2 GB.
            */
            ImageCharacteristics[ImageCharacteristics["LargeAddressAware"] = 0x0020] = "LargeAddressAware";

            /**
            * The bytes of the word are reversed. This flag is obsolete.
            */
            ImageCharacteristics[ImageCharacteristics["BytesReversedLo"] = 0x0080] = "BytesReversedLo";

            /**
            * The computer supports 32-bit words.
            */
            ImageCharacteristics[ImageCharacteristics["Bit32Machine"] = 0x0100] = "Bit32Machine";

            /**
            * Debugging information was removed and stored separately in another file.
            */
            ImageCharacteristics[ImageCharacteristics["DebugStripped"] = 0x0200] = "DebugStripped";

            /**
            * If the image is on removable media, copy it to and run it from the swap file.
            */
            ImageCharacteristics[ImageCharacteristics["RemovableRunFromSwap"] = 0x0400] = "RemovableRunFromSwap";

            /**
            * If the image is on the network, copy it to and run it from the swap file.
            */
            ImageCharacteristics[ImageCharacteristics["NetRunFromSwap"] = 0x0800] = "NetRunFromSwap";

            /**
            * The image is a system file.
            */
            ImageCharacteristics[ImageCharacteristics["System"] = 0x1000] = "System";

            /**
            * The image is a DLL file.
            * While it is an executable file, it cannot be run directly.
            */
            ImageCharacteristics[ImageCharacteristics["Dll"] = 0x2000] = "Dll";

            /**
            * The file should be run only on a uniprocessor computer.
            */
            ImageCharacteristics[ImageCharacteristics["UpSystemOnly"] = 0x4000] = "UpSystemOnly";

            /**
            * The bytes of the word are reversed. This flag is obsolete.
            */
            ImageCharacteristics[ImageCharacteristics["BytesReversedHi"] = 0x8000] = "BytesReversedHi";
        })(headers.ImageCharacteristics || (headers.ImageCharacteristics = {}));
        var ImageCharacteristics = headers.ImageCharacteristics;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (MZSignature) {
            MZSignature[MZSignature["MZ"] = "M".charCodeAt(0) + ("Z".charCodeAt(0) << 8)] = "MZ";
        })(headers.MZSignature || (headers.MZSignature = {}));
        var MZSignature = headers.MZSignature;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (Machine) {
            /**
            * The target CPU is unknown or not specified.
            */
            Machine[Machine["Unknown"] = 0x0000] = "Unknown";

            /**
            * Intel 386.
            */
            Machine[Machine["I386"] = 0x014C] = "I386";

            /**
            * MIPS little-endian
            */
            Machine[Machine["R3000"] = 0x0162] = "R3000";

            /**
            * MIPS little-endian
            */
            Machine[Machine["R4000"] = 0x0166] = "R4000";

            /**
            * MIPS little-endian
            */
            Machine[Machine["R10000"] = 0x0168] = "R10000";

            /**
            * MIPS little-endian WCE v2
            */
            Machine[Machine["WCEMIPSV2"] = 0x0169] = "WCEMIPSV2";

            /**
            * Alpha_AXP
            */
            Machine[Machine["Alpha"] = 0x0184] = "Alpha";

            /**
            * SH3 little-endian
            */
            Machine[Machine["SH3"] = 0x01a2] = "SH3";

            /**
            * SH3 little-endian. DSP.
            */
            Machine[Machine["SH3DSP"] = 0x01a3] = "SH3DSP";

            /**
            * SH3E little-endian.
            */
            Machine[Machine["SH3E"] = 0x01a4] = "SH3E";

            /**
            * SH4 little-endian.
            */
            Machine[Machine["SH4"] = 0x01a6] = "SH4";

            /**
            * SH5.
            */
            Machine[Machine["SH5"] = 0x01a8] = "SH5";

            /**
            * ARM Little-Endian
            */
            Machine[Machine["ARM"] = 0x01c0] = "ARM";

            /**
            * Thumb.
            */
            Machine[Machine["Thumb"] = 0x01c2] = "Thumb";

            /**
            * AM33
            */
            Machine[Machine["AM33"] = 0x01d3] = "AM33";

            /**
            * IBM PowerPC Little-Endian
            */
            Machine[Machine["PowerPC"] = 0x01F0] = "PowerPC";

            /**
            * PowerPCFP
            */
            Machine[Machine["PowerPCFP"] = 0x01f1] = "PowerPCFP";

            /**
            * Intel 64
            */
            Machine[Machine["IA64"] = 0x0200] = "IA64";

            /**
            * MIPS
            */
            Machine[Machine["MIPS16"] = 0x0266] = "MIPS16";

            /**
            * ALPHA64
            */
            Machine[Machine["Alpha64"] = 0x0284] = "Alpha64";

            /**
            * MIPS
            */
            Machine[Machine["MIPSFPU"] = 0x0366] = "MIPSFPU";

            /**
            * MIPS
            */
            Machine[Machine["MIPSFPU16"] = 0x0466] = "MIPSFPU16";

            /**
            * AXP64
            */
            Machine[Machine["AXP64"] = Machine.Alpha64] = "AXP64";

            /**
            * Infineon
            */
            Machine[Machine["Tricore"] = 0x0520] = "Tricore";

            /**
            * CEF
            */
            Machine[Machine["CEF"] = 0x0CEF] = "CEF";

            /**
            * EFI Byte Code
            */
            Machine[Machine["EBC"] = 0x0EBC] = "EBC";

            /**
            * AMD64 (K8)
            */
            Machine[Machine["AMD64"] = 0x8664] = "AMD64";

            /**
            * M32R little-endian
            */
            Machine[Machine["M32R"] = 0x9041] = "M32R";

            /**
            * CEE
            */
            Machine[Machine["CEE"] = 0xC0EE] = "CEE";
        })(headers.Machine || (headers.Machine = {}));
        var Machine = headers.Machine;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (PEMagic) {
            PEMagic[PEMagic["NT32"] = 0x010B] = "NT32";
            PEMagic[PEMagic["NT64"] = 0x020B] = "NT64";
            PEMagic[PEMagic["ROM"] = 0x107] = "ROM";
        })(headers.PEMagic || (headers.PEMagic = {}));
        var PEMagic = headers.PEMagic;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (PESignature) {
            PESignature[PESignature["PE"] = "P".charCodeAt(0) + ("E".charCodeAt(0) << 8)] = "PE";
        })(headers.PESignature || (headers.PESignature = {}));
        var PESignature = headers.PESignature;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (SectionCharacteristics) {
            SectionCharacteristics[SectionCharacteristics["Reserved_0h"] = 0x00000000] = "Reserved_0h";
            SectionCharacteristics[SectionCharacteristics["Reserved_1h"] = 0x00000001] = "Reserved_1h";
            SectionCharacteristics[SectionCharacteristics["Reserved_2h"] = 0x00000002] = "Reserved_2h";
            SectionCharacteristics[SectionCharacteristics["Reserved_4h"] = 0x00000004] = "Reserved_4h";

            /**
            * The section should not be padded to the next boundary.
            * This flag is obsolete and is replaced by Align1Bytes.
            */
            SectionCharacteristics[SectionCharacteristics["NoPadding"] = 0x00000008] = "NoPadding";

            SectionCharacteristics[SectionCharacteristics["Reserved_10h"] = 0x00000010] = "Reserved_10h";

            /**
            * The section contains executable code.
            */
            SectionCharacteristics[SectionCharacteristics["ContainsCode"] = 0x00000020] = "ContainsCode";

            /**
            * The section contains initialized data.
            */
            SectionCharacteristics[SectionCharacteristics["ContainsInitializedData"] = 0x00000040] = "ContainsInitializedData";

            /**
            * The section contains uninitialized data.
            */
            SectionCharacteristics[SectionCharacteristics["ContainsUninitializedData"] = 0x00000080] = "ContainsUninitializedData";

            /**
            * Reserved.
            */
            SectionCharacteristics[SectionCharacteristics["LinkerOther"] = 0x00000100] = "LinkerOther";

            /**
            * The section contains comments or other information.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["LinkerInfo"] = 0x00000200] = "LinkerInfo";

            SectionCharacteristics[SectionCharacteristics["Reserved_400h"] = 0x00000400] = "Reserved_400h";

            /**
            * The section will not become part of the image.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["LinkerRemove"] = 0x00000800] = "LinkerRemove";

            /**
            * The section contains COMDAT data.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["LinkerCOMDAT"] = 0x00001000] = "LinkerCOMDAT";

            SectionCharacteristics[SectionCharacteristics["Reserved_2000h"] = 0x00002000] = "Reserved_2000h";

            /**
            * Reset speculative exceptions handling bits in the TLB entries for this section.
            */
            SectionCharacteristics[SectionCharacteristics["NoDeferredSpeculativeExecution"] = 0x00004000] = "NoDeferredSpeculativeExecution";

            /**
            * The section contains data referenced through the global pointer.
            */
            SectionCharacteristics[SectionCharacteristics["GlobalPointerRelative"] = 0x00008000] = "GlobalPointerRelative";

            SectionCharacteristics[SectionCharacteristics["Reserved_10000h"] = 0x00010000] = "Reserved_10000h";

            /**
            * Reserved.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryPurgeable"] = 0x00020000] = "MemoryPurgeable";

            /**
            * Reserved.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryLocked"] = 0x00040000] = "MemoryLocked";

            /**
            * Reserved.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryPreload"] = 0x00080000] = "MemoryPreload";

            /**
            * Align data on a 1-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align1Bytes"] = 0x00100000] = "Align1Bytes";

            /**
            * Align data on a 2-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align2Bytes"] = 0x00200000] = "Align2Bytes";

            /**
            * Align data on a 4-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align4Bytes"] = 0x00300000] = "Align4Bytes";

            /**
            * Align data on a 8-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align8Bytes"] = 0x00400000] = "Align8Bytes";

            /**
            * Align data on a 16-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align16Bytes"] = 0x00500000] = "Align16Bytes";

            /**
            * Align data on a 32-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align32Bytes"] = 0x00600000] = "Align32Bytes";

            /**
            * Align data on a 64-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align64Bytes"] = 0x00700000] = "Align64Bytes";

            /**
            * Align data on a 128-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align128Bytes"] = 0x00800000] = "Align128Bytes";

            /**
            * Align data on a 256-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align256Bytes"] = 0x00900000] = "Align256Bytes";

            /**
            * Align data on a 512-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align512Bytes"] = 0x00A00000] = "Align512Bytes";

            /**
            * Align data on a 1024-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align1024Bytes"] = 0x00B00000] = "Align1024Bytes";

            /**
            * Align data on a 2048-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align2048Bytes"] = 0x00C00000] = "Align2048Bytes";

            /**
            * Align data on a 4096-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align4096Bytes"] = 0x00D00000] = "Align4096Bytes";

            /**
            * Align data on a 8192-byte boundary.
            * This is valid only for object files.
            */
            SectionCharacteristics[SectionCharacteristics["Align8192Bytes"] = 0x00E00000] = "Align8192Bytes";

            /**
            * The section contains extended relocations.
            * The count of relocations for the section exceeds the 16 bits that is reserved for it in the section header.
            * If the NumberOfRelocations field in the section header is 0xffff,
            * the actual relocation count is stored in the VirtualAddress field of the first relocation.
            * It is an error if LinkerRelocationOverflow is set and there are fewer than 0xffff relocations in the section.
            */
            SectionCharacteristics[SectionCharacteristics["LinkerRelocationOverflow"] = 0x01000000] = "LinkerRelocationOverflow";

            /**
            * The section can be discarded as needed.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryDiscardable"] = 0x02000000] = "MemoryDiscardable";

            /**
            * The section cannot be cached.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryNotCached"] = 0x04000000] = "MemoryNotCached";

            /**
            * The section cannot be paged.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryNotPaged"] = 0x08000000] = "MemoryNotPaged";

            /**
            * The section can be shared in memory.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryShared"] = 0x10000000] = "MemoryShared";

            /**
            * The section can be executed as code.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryExecute"] = 0x20000000] = "MemoryExecute";

            /**
            * The section can be read.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryRead"] = 0x40000000] = "MemoryRead";

            /**
            * The section can be written to.
            */
            SectionCharacteristics[SectionCharacteristics["MemoryWrite"] = 0x80000000] = "MemoryWrite";
        })(headers.SectionCharacteristics || (headers.SectionCharacteristics = {}));
        var SectionCharacteristics = headers.SectionCharacteristics;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (headers) {
        (function (Subsystem) {
            /**
            * Unknown subsystem.
            */
            Subsystem[Subsystem["Unknown"] = 0] = "Unknown";

            /**
            * No subsystem required (device drivers and native system processes).
            */
            Subsystem[Subsystem["Native"] = 1] = "Native";

            /**
            * Windows graphical user interface (GUI) subsystem.
            */
            Subsystem[Subsystem["WindowsGUI"] = 2] = "WindowsGUI";

            /**
            * Windows character-mode user interface (CUI) subsystem.
            */
            Subsystem[Subsystem["WindowsCUI"] = 3] = "WindowsCUI";

            /**
            * OS/2 console subsystem.
            */
            Subsystem[Subsystem["OS2CUI"] = 5] = "OS2CUI";

            /**
            * POSIX console subsystem.
            */
            Subsystem[Subsystem["POSIXCUI"] = 7] = "POSIXCUI";

            /**
            * Image is a native Win9x driver.
            */
            Subsystem[Subsystem["NativeWindows"] = 8] = "NativeWindows";

            /**
            * Windows CE system.
            */
            Subsystem[Subsystem["WindowsCEGUI"] = 9] = "WindowsCEGUI";

            /**
            * Extensible Firmware Interface (EFI) application.
            */
            Subsystem[Subsystem["EFIApplication"] = 10] = "EFIApplication";

            /**
            * EFI driver with boot services.
            */
            Subsystem[Subsystem["EFIBootServiceDriver"] = 11] = "EFIBootServiceDriver";

            /**
            * EFI driver with run-time services.
            */
            Subsystem[Subsystem["EFIRuntimeDriver"] = 12] = "EFIRuntimeDriver";

            /**
            * EFI ROM image.
            */
            Subsystem[Subsystem["EFIROM"] = 13] = "EFIROM";

            /**
            * Xbox system.
            */
            Subsystem[Subsystem["XBOX"] = 14] = "XBOX";

            /**
            * Boot application.
            */
            Subsystem[Subsystem["BootApplication"] = 16] = "BootApplication";
        })(headers.Subsystem || (headers.Subsystem = {}));
        var Subsystem = headers.Subsystem;
    })(pe.headers || (pe.headers = {}));
    var headers = pe.headers;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (io) {
        var checkBufferReaderOverrideOnFirstCreation = false;

        var BufferReader = (function () {
            function BufferReader(view) {
                this.offset = 0;
                this.sections = [];
                this._currentSectionIndex = 0;
                if (checkBufferReaderOverrideOnFirstCreation) {
                    // whatever we discover, stick to it, don't repeat it again
                    checkBufferReaderOverrideOnFirstCreation = false;

                    var global = (function () {
                        return this;
                    })();
                    if (!("DataView" in global)) {
                        // the environment doesn't support DataView,
                        // fall back on ArrayBuffer
                        io.BufferReader = ArrayReader;
                        return new ArrayReader(view);
                    }
                }

                if (!view)
                    return;

                if ("getUint8" in view) {
                    this._view = view;
                } else if ("byteLength" in view) {
                    this._view = new DataView(view);
                } else {
                    var arrb = new ArrayBuffer(view.length);
                    this._view = new DataView(arrb);
                    for (var i = 0; i < view.length; i++) {
                        this._view.setUint8(i, view[i]);
                    }
                }
            }
            BufferReader.prototype.readByte = function () {
                var result = this._view.getUint8(this.offset);
                this.offset++;
                return result;
            };

            BufferReader.prototype.peekByte = function () {
                var result = this._view.getUint8(this.offset);
                return result;
            };

            BufferReader.prototype.readShort = function () {
                var result = this._view.getUint16(this.offset, true);
                this.offset += 2;
                return result;
            };

            BufferReader.prototype.readInt = function () {
                var result = this._view.getUint32(this.offset, true);
                this.offset += 4;
                return result;
            };

            BufferReader.prototype.readLong = function () {
                var lo = this._view.getUint32(this.offset, true);
                var hi = this._view.getUint32(this.offset + 4, true);
                this.offset += 8;
                return new pe.Long(lo, hi);
            };

            BufferReader.prototype.readBytes = function (length) {
                var result = new Uint8Array(this._view.buffer, this._view.byteOffset + this.offset, length);

                this.offset += length;
                return result;
            };

            BufferReader.prototype.readZeroFilledAscii = function (length) {
                var chars = [];

                for (var i = 0; i < length; i++) {
                    var charCode = this._view.getUint8(this.offset + i);

                    if (charCode == 0)
                        continue;

                    chars.push(String.fromCharCode(charCode));
                }

                this.offset += length;

                return chars.join("");
            };

            BufferReader.prototype.readAsciiZ = function (maxLength) {
                if (typeof maxLength === "undefined") { maxLength = 1024; }
                var chars = [];

                var byteLength = 0;
                while (true) {
                    var nextChar = this._view.getUint8(this.offset + chars.length);
                    if (nextChar == 0) {
                        byteLength = chars.length + 1;
                        break;
                    }

                    chars.push(String.fromCharCode(nextChar));
                    if (chars.length == maxLength) {
                        byteLength = chars.length;
                        break;
                    }
                }

                this.offset += byteLength;

                return chars.join("");
            };

            BufferReader.prototype.readUtf8Z = function (maxLength) {
                var buffer = [];
                var isConversionRequired = false;

                for (var i = 0; !maxLength || i < maxLength; i++) {
                    var b = this._view.getUint8(this.offset + i);

                    if (b == 0) {
                        i++;
                        break;
                    }

                    buffer.push(hexUtf[b]);
                    if (b >= 127)
                        isConversionRequired = true;
                }

                this.offset += i;

                if (isConversionRequired)
                    return decodeURIComponent(buffer.join(""));
                else
                    return buffer.join("");
            };

            BufferReader.prototype.getVirtualOffset = function () {
                var result = this._tryMapToVirtual(this.offset);
                if (result < 0)
                    throw new Error("Cannot map current position into virtual address space.");
                return result;
            };

            BufferReader.prototype.setVirtualOffset = function (rva) {
                if (this._currentSectionIndex >= 0 && this._currentSectionIndex < this.sections.length) {
                    var s = this.sections[this._currentSectionIndex];
                    var relative = rva - s.virtualAddress;
                    if (relative >= 0 && relative < s.size) {
                        this.offset = relative + s.address;
                        return;
                    }
                }

                for (var i = 0; i < this.sections.length; i++) {
                    var s = this.sections[i];
                    var relative = rva - s.virtualAddress;
                    if (relative >= 0 && relative < s.size) {
                        this._currentSectionIndex = i;
                        this.offset = relative + s.address;
                        return;
                    }
                }

                throw new Error("Address 0x" + rva.toString(16).toUpperCase() + " is outside of virtual address space.");
            };

            BufferReader.prototype._tryMapToVirtual = function (offset) {
                if (this._currentSectionIndex >= 0 && this._currentSectionIndex < this.sections.length) {
                    var s = this.sections[this._currentSectionIndex];
                    var relative = offset - s.address;
                    if (relative >= 0 && relative < s.size)
                        return relative + s.virtualAddress;
                }

                for (var i = 0; i < this.sections.length; i++) {
                    var s = this.sections[i];
                    var relative = offset - s.address;
                    if (relative >= 0 && relative < s.size) {
                        this._currentSectionIndex = i;
                        return relative + s.virtualAddress;
                    }
                }

                return -1;
            };
            return BufferReader;
        })();
        io.BufferReader = BufferReader;

        var ArrayReader = (function (_super) {
            __extends(ArrayReader, _super);
            function ArrayReader(_array) {
                _super.call(this, null);
                this._array = _array;
                this.offset = 0;
                this.sections = [];
            }
            ArrayReader.prototype.readByte = function () {
                var result = this._array[this.offset];
                this.offset++;
                return result;
            };

            ArrayReader.prototype.peekByte = function () {
                var result = this._array[this.offset];
                return result;
            };

            ArrayReader.prototype.readShort = function () {
                var result = this._array[this.offset] + (this._array[this.offset + 1] << 8);
                this.offset += 2;
                return result;
            };

            ArrayReader.prototype.readInt = function () {
                var result = this._array[this.offset] + (this._array[this.offset + 1] << 8) + (this._array[this.offset + 2] << 16) + (this._array[this.offset + 3] * 0x1000000);
                this.offset += 4;
                return result;
            };

            ArrayReader.prototype.readLong = function () {
                var lo = this.readInt();
                var hi = this.readInt();
                return new pe.Long(lo, hi);
            };

            ArrayReader.prototype.readBytes = function (length) {
                var result = this._array.slice(this.offset, this.offset + length);
                this.offset += length;
                return result;
            };

            ArrayReader.prototype.readZeroFilledAscii = function (length) {
                var chars = [];

                for (var i = 0; i < length; i++) {
                    var charCode = this._array[this.offset + i];

                    if (charCode == 0)
                        continue;

                    chars.push(String.fromCharCode(charCode));
                }

                this.offset += length;

                return chars.join("");
            };

            ArrayReader.prototype.readAsciiZ = function (maxLength) {
                if (typeof maxLength === "undefined") { maxLength = 1024; }
                var chars = [];

                var byteLength = 0;
                while (true) {
                    var nextChar = this._array[this.offset + chars.length];
                    if (nextChar == 0) {
                        byteLength = chars.length + 1;
                        break;
                    }

                    chars.push(String.fromCharCode(nextChar));
                    if (chars.length == maxLength) {
                        byteLength = chars.length;
                        break;
                    }
                }

                this.offset += byteLength;

                return chars.join("");
            };

            ArrayReader.prototype.readUtf8Z = function (maxLength) {
                var buffer = "";
                var isConversionRequired = false;

                for (var i = 0; !maxLength || i < maxLength; i++) {
                    var b = this._array[this.offset + i];

                    if (b == 0) {
                        i++;
                        break;
                    }

                    if (b < 127) {
                        buffer += String.fromCharCode(b);
                    } else {
                        isConversionRequired = true;
                        buffer += "%";
                        buffer += b.toString(16);
                    }
                }

                this.offset += i;

                if (isConversionRequired)
                    return decodeURIComponent(buffer);
                else
                    return buffer;
            };

            ArrayReader.prototype.getVirtualOffset = function () {
                var result = this._tryMapToVirtual2(this.offset);
                if (result < 0)
                    throw new Error("Cannot map current position into virtual address space.");
                return result;
            };

            ArrayReader.prototype.setVirtualOffset = function (rva) {
                if (this._currentSectionIndex >= 0 && this._currentSectionIndex < this.sections.length) {
                    var s = this.sections[this._currentSectionIndex];
                    var relative = rva - s.virtualAddress;
                    if (relative >= 0 && relative < s.size) {
                        this.offset = relative + s.address;
                        return;
                    }
                }

                for (var i = 0; i < this.sections.length; i++) {
                    var s = this.sections[i];
                    var relative = rva - s.virtualAddress;
                    if (relative >= 0 && relative < s.size) {
                        this._currentSectionIndex = i;
                        this.offset = relative + s.address;
                        return;
                    }
                }

                throw new Error("Address is outside of virtual address space.");
            };

            ArrayReader.prototype._tryMapToVirtual2 = function (offset) {
                if (this._currentSectionIndex >= 0 && this._currentSectionIndex < this.sections.length) {
                    var s = this.sections[this._currentSectionIndex];
                    var relative = offset - s.address;
                    if (relative >= 0 && relative < s.size)
                        return relative + s.virtualAddress;
                }

                for (var i = 0; i < this.sections.length; i++) {
                    var s = this.sections[i];
                    var relative = offset - s.address;
                    if (relative >= 0 && relative < s.size) {
                        this._currentSectionIndex = i;
                        return relative + s.virtualAddress;
                    }
                }

                return -1;
            };
            return ArrayReader;
        })(BufferReader);
        io.ArrayReader = ArrayReader;

        var hexUtf = (function () {
            var buf = [];
            for (var i = 0; i < 127; i++) {
                buf.push(String.fromCharCode(i));
            }
            for (var i = 127; i < 256; i++) {
                buf.push("%" + i.toString(16));
            }
            return buf;
        })();

        function getFileBufferReader(file, onsuccess, onfailure) {
            var reader = new FileReader();

            reader.onerror = onfailure;
            reader.onloadend = function () {
                if (reader.readyState != 2) {
                    onfailure(reader.error);
                    return;
                }

                var result;

                try  {
                    var resultArrayBuffer;
                    resultArrayBuffer = reader.result;

                    result = new BufferReader(resultArrayBuffer);
                } catch (error) {
                    onfailure(error);
                }

                onsuccess(result);
            };

            reader.readAsArrayBuffer(file);
        }
        io.getFileBufferReader = getFileBufferReader;

        function getUrlBufferReader(url, onsuccess, onfailure) {
            var request = new XMLHttpRequest();
            request.open("GET", url, true);
            request.responseType = "arraybuffer";

            var requestLoadCompleteCalled = false;
            function requestLoadComplete() {
                if (requestLoadCompleteCalled)
                    return;

                requestLoadCompleteCalled = true;

                var result;

                try  {
                    var response = request.response;
                    if (response) {
                        var resultDataView = new DataView(response);
                        result = new BufferReader(resultDataView);
                    } else {
                        var responseBody = new VBArray(request.responseBody).toArray();
                        var result = new BufferReader(responseBody);
                    }
                } catch (error) {
                    onfailure(error);
                    return;
                }

                onsuccess(result);
            }
            ;

            request.onerror = onfailure;
            request.onloadend = function () {
                return requestLoadComplete;
            };
            request.onreadystatechange = function () {
                if (request.readyState == 4) {
                    requestLoadComplete();
                }
            };

            request.send();
        }
        io.getUrlBufferReader = getUrlBufferReader;
    })(pe.io || (pe.io = {}));
    var io = pe.io;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var AppDomain = (function () {
            function AppDomain() {
                this.assemblies = [];
                this.mscorlib = new pe.managed.Assembly();
                this.mscorlib.name = "mscorlib";

                var objectType = new pe.managed.Type(null, this.mscorlib, "System", "Object");
                var valueType = new pe.managed.Type(objectType, this.mscorlib, "System", "ValueType");
                var enumType = new pe.managed.Type(valueType, this.mscorlib, "System", "Enum");

                this.mscorlib.types.push(new pe.managed.Type(valueType, this.mscorlib, "System", "Void"), new pe.managed.Type(valueType, this.mscorlib, "System", "Boolean"), new pe.managed.Type(valueType, this.mscorlib, "System", "Char"), new pe.managed.Type(valueType, this.mscorlib, "System", "SByte"), new pe.managed.Type(valueType, this.mscorlib, "System", "Byte"), new pe.managed.Type(valueType, this.mscorlib, "System", "Int16"), new pe.managed.Type(valueType, this.mscorlib, "System", "UInt16"), new pe.managed.Type(valueType, this.mscorlib, "System", "Int32"), new pe.managed.Type(valueType, this.mscorlib, "System", "UInt32"), new pe.managed.Type(valueType, this.mscorlib, "System", "Int64"), new pe.managed.Type(valueType, this.mscorlib, "System", "UInt64"), new pe.managed.Type(valueType, this.mscorlib, "System", "Single"), new pe.managed.Type(valueType, this.mscorlib, "System", "Double"), new pe.managed.Type(valueType, this.mscorlib, "System", "String"), new pe.managed.Type(objectType, this.mscorlib, "System", "TypedReference"), new pe.managed.Type(valueType, this.mscorlib, "System", "IntPtr"), new pe.managed.Type(valueType, this.mscorlib, "System", "UIntPtr"), objectType, valueType, enumType, new pe.managed.Type(objectType, this.mscorlib, "System", "Type"));

                this.assemblies.push(this.mscorlib);
            }
            AppDomain.prototype.read = function (reader, async) {
                var context = new AssemblyReading(this, reader, async);
                var result = context.read();

                if (result)
                    this.assemblies.push(result);

                return result;
            };

            AppDomain.prototype.resolveAssembly = function (name, version, publicKey, culture) {
                var asm;
                for (var i = 0; i < this.assemblies.length; i++) {
                    var asm = this.assemblies[i];
                    if ((asm.name && name && asm.name.toLowerCase() === name.toLowerCase()) || (!asm.name && !name))
                        return asm;
                }

                // Short-cirquit mscorlib, because we create a speculative one at init time
                if (name && name.toLowerCase() === "mscorlib" && this.assemblies[0].isSpeculative)
                    return this.assemblies[0];

                asm = new pe.managed.Assembly();
                asm.name = name;
                asm.version = version;
                asm.publicKey = publicKey;
                asm.culture = culture;
                return asm;
            };
            return AppDomain;
        })();
        managed.AppDomain = AppDomain;

        var AssemblyReading = (function () {
            function AssemblyReading(appDomain, _reader, _async) {
                this.appDomain = appDomain;
                this._reader = _reader;
                this._async = _async;
                this.fileHeaders = null;
                this.clrDirectory = null;
                this.clrMetadata = null;
                this.metadataStreams = null;
                this.tableStream = null;
                this._stage = 0;
            }
            AssemblyReading.prototype.read = function () {
                var stageCount = 0;

                switch (this._stage) {
                    case 0:
                        this._reader.offset = 0;
                        this.readFileHeaders();
                        if (this._progressContinueLater())
                            return;

                    case 1:
                        this.readClrDirectory();
                        if (this._progressContinueLater())
                            return;

                    case 2:
                        this.readClrMetadata();
                        if (this._progressContinueLater())
                            return;

                    case 3:
                        this.readMetadataStreams();
                        if (this._progressContinueLater())
                            return;

                    case 4:
                        this.readTableStream();
                        if (this._progressContinueLater())
                            return;

                    case 5:
                        this.populateStrings(this.tableStream.stringIndices);
                        if (this._progressContinueLater())
                            return;

                    case 6:
                        var mscorlib = this._getMscorlibIfThisShouldBeOne();
                        if (mscorlib)
                            this.tableStream.tables[32 /* Assembly */][0].def = mscorlib;
                        if (this._progressContinueLater())
                            return;

                    case 7:
                        this.completeTables();
                        if (this._progressContinueLater())
                            return;

                    case 8:
                        var result = this._createAssemblyFromTables();
                        result.fileHeaders = this.fileHeaders;
                        if (this._async)
                            this._async(null, result);
                        else
                            return result;
                }
            };

            AssemblyReading.prototype._progressContinueLater = function () {
                var _this = this;
                this._stage++;
                if (this._async && this._async.progress) {
                    var continueLater = this._async.progress(this._stage, 9);
                    if (continueLater) {
                        continueLater(function () {
                            return _this.read();
                        });
                        return true;
                    }
                }

                return false;
            };

            AssemblyReading.prototype._createAssemblyFromTables = function () {
                var assemblyTable = this.tableStream.tables[32 /* Assembly */];
                var assemblyRow = assemblyTable[0];
                var assembly = assemblyRow.def;

                var typeDefTable = this.tableStream.tables[2 /* TypeDef */];
                if (typeDefTable)
                    assembly.types = typeDefTable.map(function (t) {
                        return t.def;
                    });

                assembly.runtimeVersion = this.clrDirectory.runtimeVersion;
                assembly.imageFlags = this.clrDirectory.imageFlags;
                assembly.specificRuntimeVersion = this.clrMetadata.runtimeVersion;
                assembly.metadataVersion = this.clrMetadata.metadataVersion;
                assembly.tableStreamVersion = this.tableStream.version;

                var moduleTable = this.tableStream.tables[0 /* Module */];
                if (moduleTable && moduleTable.length) {
                    var moduleRow = moduleTable[0];
                    //moduleRow.
                }

                return assembly;
            };

            AssemblyReading.prototype._getMscorlibIfThisShouldBeOne = function () {
                var stringIndices = this.tableStream.stringIndices;

                var assemblyTable = this.tableStream.tables[0x20];
                if (!assemblyTable || !assemblyTable.length)
                    return null;

                var assemblyRow = assemblyTable[0];
                var simpleAssemblyName = stringIndices[assemblyRow.name];
                if (!simpleAssemblyName || simpleAssemblyName.toLowerCase() !== "mscorlib")
                    return null;

                if (!this.appDomain.assemblies[0].isSpeculative)
                    return null;

                var typeDefTable = this.tableStream.tables[0x02];
                if (!typeDefTable)
                    return null;

                var containsSystemObject = false;
                var containsSystemString = false;

                for (var i = 0; i < typeDefTable.length; i++) {
                    var typeDefRow = typeDefTable[i];

                    var name = stringIndices[typeDefRow.name];
                    var namespace = stringIndices[typeDefRow.namespace];

                    if (namespace !== "System")
                        continue;

                    if (name === "Object")
                        containsSystemObject = true;
                    else if (name === "String")
                        containsSystemString = true;
                }

                if (containsSystemObject && containsSystemString)
                    return this.appDomain.assemblies[0];
                else
                    return null;
            };

            AssemblyReading.prototype._readBlobHex = function (blobIndex) {
                var saveOffset = this._reader.offset;

                this._reader.setVirtualOffset(this.metadataStreams.blobs.address + blobIndex);
                var length = this._readBlobSize();

                var result = "";
                for (var i = 0; i < length; i++) {
                    var hex = this._reader.readByte().toString(16);
                    if (hex.length == 1)
                        result += "0";
                    result += hex;
                }

                this._reader.offset = saveOffset;

                return result.toUpperCase();
            };

            AssemblyReading.prototype._readBlobSize = function () {
                var length;
                var b0 = this._reader.readByte();
                if (b0 < 0x80) {
                    length = b0;
                } else {
                    var b1 = this._reader.readByte();

                    if ((b0 & 0xC0) == 0x80) {
                        length = ((b0 & 0x3F) << 8) + b1;
                    } else {
                        var b2 = this._reader.readByte();
                        var b3 = this._reader.readByte();
                        length = ((b0 & 0x3F) << 24) + (b1 << 16) + (b2 << 8) + b3;
                    }
                }

                return length;
            };

            AssemblyReading.prototype.readFileHeaders = function () {
                this.fileHeaders = new pe.headers.PEFileHeaders();
                this.fileHeaders.read(this._reader);

                this._reader.sections = this.fileHeaders.sectionHeaders;
            };

            AssemblyReading.prototype.readClrDirectory = function () {
                var clrDataDirectory = this.fileHeaders.optionalHeader.dataDirectories[14 /* Clr */];

                this._reader.setVirtualOffset(clrDataDirectory.address);
                this.clrDirectory = new pe.managed.metadata.ClrDirectory();
                this.clrDirectory.read(this._reader);
            };

            AssemblyReading.prototype.readClrMetadata = function () {
                this._reader.setVirtualOffset(this.clrDirectory.metadataDir.address);

                this.clrMetadata = new pe.managed.metadata.ClrMetadata();
                this.clrMetadata.read(this._reader);
            };

            AssemblyReading.prototype.readMetadataStreams = function () {
                this.metadataStreams = new pe.managed.metadata.MetadataStreams();
                this.metadataStreams.read(this.clrDirectory.metadataDir.address, this.clrMetadata.streamCount, this._reader);
            };

            AssemblyReading.prototype.readTableStream = function () {
                this.tableStream = new pe.managed.metadata.TableStream();
                this.tableStream.read(this._reader, this.metadataStreams.strings.size, this.metadataStreams.guids.length, this.metadataStreams.blobs.size);
            };

            AssemblyReading.prototype.populateStrings = function (stringIndices) {
                var saveOffset = this._reader.offset;

                stringIndices[0] = null;
                for (var i in stringIndices) {
                    if (i > 0) {
                        var iNum = Number(i);
                        this._reader.setVirtualOffset(this.metadataStreams.strings.address + iNum);
                        stringIndices[iNum] = this._reader.readUtf8Z(1024 * 1024 * 1024);
                    }
                }
            };

            AssemblyReading.prototype.completeTables = function () {
                var moduleTable = this.tableStream.tables[0 /* Module */];
                if (moduleTable && moduleTable.length === 1) {
                    var assemblyTable = this.tableStream.tables[32 /* Assembly */];
                    if (assemblyTable && assemblyTable.length === 1) {
                        moduleTable[0].def = assemblyTable[0].def;
                    }
                }

                var completionReader = new pe.managed.metadata.TableCompletionReader(this.tableStream, this.metadataStreams, this.tableStream.codedIndexReaders);

                for (var iTab = 0; iTab < this.tableStream.tables.length; iTab++) {
                    var table = this.tableStream.tables[iTab];
                    if (!table || !table.length || !table[0].complete)
                        continue;

                    for (var i = 0; i < table.length; i++) {
                        var row = table[i];
                        var nextRow = i + 1 < table.length ? table[i + 1] : null;

                        row.complete(completionReader, nextRow);
                    }
                }
            };
            return AssemblyReading;
        })();
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var Assembly = (function () {
            function Assembly() {
                this.fileHeaders = new pe.headers.PEFileHeaders();
                this.name = "";
                this.version = null;
                this.publicKey = null;
                this.culture = null;
                this.attributes = 0;
                this.isSpeculative = true;
                this.runtimeVersion = "";
                this.specificRuntimeVersion = "";
                this.imageFlags = 0;
                this.metadataVersion = "";
                this.tableStreamVersion = "";
                this.generation = 0;
                this.moduleName = "";
                this.mvid = "";
                this.encId = "";
                this.encBaseId = "";
                this.types = [];
                this.customAttributes = [];
            }
            Assembly.prototype.toString = function () {
                return this.name + ", Version=" + this.version + ", Culture=" + (this.culture ? this.culture : "neutral") + ", PublicKeyToken=" + (this.publicKey && this.publicKey.length ? this.publicKey : "null");
            };
            return Assembly;
        })();
        managed.Assembly = Assembly;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var ConstructedGenericType = (function () {
            function ConstructedGenericType() {
            }
            ConstructedGenericType.prototype.getBaseType = function () {
                return this.genericType ? this.genericType.getBaseType() : null;
            };
            ConstructedGenericType.prototype.getAssembly = function () {
                return this.genericType ? this.genericType.getAssembly() : null;
            };
            ConstructedGenericType.prototype.getFullName = function () {
                return this.genericType ? this.genericType.getFullName() + "[" + (this.genericArguments ? this.genericArguments.join(",") : '') + "]" : 'incorrect-generic-type';
            };

            ConstructedGenericType.prototype.toString = function () {
                return this.getFullName();
            };
            return ConstructedGenericType;
        })();
        managed.ConstructedGenericType = ConstructedGenericType;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var EventInfo = (function () {
            function EventInfo() {
            }
            return EventInfo;
        })();
        managed.EventInfo = EventInfo;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var FieldInfo = (function () {
            function FieldInfo() {
                this.attributes = 0;
                this.name = "";
                this.fieldType = null;
                this.customAttributes = null;
            }
            return FieldInfo;
        })();
        managed.FieldInfo = FieldInfo;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var MethodInfo = (function () {
            function MethodInfo() {
                this.name = '';
                this.attributes = 0;
                this.parameters = [];
                this.customAttributes = null;
            }
            MethodInfo.prototype.toString = function () {
                return this.name + '(' + this.parameters.map(function (p) {
                    return p.name;
                }).join(', ') + ')';
            };
            return MethodInfo;
        })();
        managed.MethodInfo = MethodInfo;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var ParameterInfo = (function () {
            function ParameterInfo() {
                this.name = null;
                this.attributes = 0;
                this.customAttributes = null;
            }
            return ParameterInfo;
        })();
        managed.ParameterInfo = ParameterInfo;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var PropertyInfo = (function () {
            function PropertyInfo() {
                this.name = null;
                this.propertyType = null;
                this.attributes = 0;
                this.customAttributes = null;
            }
            return PropertyInfo;
        })();
        managed.PropertyInfo = PropertyInfo;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        var Type = (function () {
            function Type(baseType, assembly, namespace, name) {
                this.baseType = baseType;
                this.assembly = assembly;
                this.namespace = namespace;
                this.name = name;
                this.isSpeculative = true;
                this.attributes = 0;
                this.fields = [];
                this.methods = [];
                this.properties = [];
                this.events = [];
                this.customAttributes = null;
                this.layout = null;
            }
            Type.prototype.getBaseType = function () {
                return this.baseType;
            };
            Type.prototype.getAssembly = function () {
                return this.assembly;
            };
            Type.prototype.getFullName = function () {
                if (this.namespace && this.namespace.length)
                    return this.namespace + "." + this.name;
                else
                    return this.name;
            };

            Type.prototype.toString = function () {
                return this.getFullName();
            };
            return Type;
        })();
        managed.Type = Type;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var ClrDirectory = (function () {
                function ClrDirectory() {
                    this.cb = 0;
                    this.runtimeVersion = "";
                    this.imageFlags = 0;
                    this.metadataDir = null;
                    this.entryPointToken = 0;
                    this.resourcesDir = null;
                    this.strongNameSignatureDir = null;
                    this.codeManagerTableDir = null;
                    this.vtableFixupsDir = null;
                    this.exportAddressTableJumpsDir = null;
                    this.managedNativeHeaderDir = null;
                }
                ClrDirectory.prototype.read = function (readerAtClrDataDirectory) {
                    // shift to CLR directory
                    var clrDirReader = readerAtClrDataDirectory;

                    // CLR header
                    this.cb = clrDirReader.readInt();

                    if (this.cb < ClrDirectory._clrHeaderSize)
                        throw new Error("Unexpectedly short CLR header structure " + this.cb + " reported by Cb field " + "(expected at least " + ClrDirectory._clrHeaderSize + ").");

                    this.runtimeVersion = clrDirReader.readShort() + "." + clrDirReader.readShort();

                    this.metadataDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.imageFlags = clrDirReader.readInt();

                    // need to convert to meaningful value before sticking into ModuleDefinition
                    this.entryPointToken = clrDirReader.readInt();

                    this.resourcesDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.strongNameSignatureDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.codeManagerTableDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.vtableFixupsDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.exportAddressTableJumpsDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());

                    this.managedNativeHeaderDir = new pe.headers.AddressRange(clrDirReader.readInt(), clrDirReader.readInt());
                };
                ClrDirectory._clrHeaderSize = 72;
                return ClrDirectory;
            })();
            metadata.ClrDirectory = ClrDirectory;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var ClrMetadata = (function () {
                function ClrMetadata() {
                    this.mdSignature = 1112167234 /* Signature */;
                    this.metadataVersion = "";
                    this.runtimeVersion = "";
                    this.mdReserved = 0;
                    this.mdFlags = 0;
                    this.streamCount = 0;
                }
                ClrMetadata.prototype.read = function (clrDirReader) {
                    this.mdSignature = clrDirReader.readInt();
                    if (this.mdSignature != 1112167234 /* Signature */)
                        throw new Error("Invalid CLR metadata signature field " + this.mdSignature.toString(16) + "h (expected " + 1112167234 /* Signature */.toString(16).toUpperCase() + "h).");

                    this.metadataVersion = clrDirReader.readShort() + "." + clrDirReader.readShort();

                    this.mdReserved = clrDirReader.readInt();

                    var metadataStringVersionLength = clrDirReader.readInt();
                    this.runtimeVersion = clrDirReader.readZeroFilledAscii(metadataStringVersionLength);

                    this.mdFlags = clrDirReader.readShort();

                    this.streamCount = clrDirReader.readShort();
                };
                return ClrMetadata;
            })();
            metadata.ClrMetadata = ClrMetadata;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var CodedIndexReader = (function () {
                function CodedIndexReader(tables, tableKinds) {
                    this.tables = tables;
                    this.tableKinds = tableKinds;
                    this.tableKindBitCount = pe.managed.metadata.calcRequredBitCount(tableKinds.length - 1);

                    var maxTableLength = 0;
                    for (var i = 0; i < tableKinds.length; i++) {
                        var t = tables[tableKinds[i]];
                        var tableLength = t ? t.length : 0;
                        if (tableLength > maxTableLength)
                            maxTableLength = tableLength;
                    }

                    this.rowIndexBitCount = pe.managed.metadata.calcRequredBitCount(maxTableLength);

                    this.isShortForm = this.tableKindBitCount + this.rowIndexBitCount <= 16;
                }
                CodedIndexReader.prototype.readCodedIndex = function (reader) {
                    return this.isShortForm ? reader.readShort() : reader.readInt();
                };

                CodedIndexReader.prototype.lookup = function (codedIndex) {
                    var rowIndex = codedIndex >> this.tableKindBitCount;
                    if (rowIndex === 0)
                        return null;

                    var tableKindIndex = codedIndex - (rowIndex << this.tableKindBitCount);
                    var tableKind = this.tableKinds[tableKindIndex];

                    var table = this.tables[tableKind];
                    if (!table)
                        return null;

                    var row = table[rowIndex - 1];
                    if (!row)
                        return null;

                    var result = row.def;

                    return result;
                };
                return CodedIndexReader;
            })();
            metadata.CodedIndexReader = CodedIndexReader;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var MetadataStreams = (function () {
                function MetadataStreams() {
                    this.guids = [];
                    this.strings = null;
                    this.blobs = null;
                    this.tables = null;
                }
                MetadataStreams.prototype.read = function (metadataBaseAddress, streamCount, reader) {
                    var guidRange;

                    for (var i = 0; i < streamCount; i++) {
                        var range = new pe.headers.AddressRange(reader.readInt(), reader.readInt());

                        range.address += metadataBaseAddress;

                        var name = this._readAlignedNameString(reader);

                        switch (name) {
                            case "#GUID":
                                guidRange = range;
                                continue;

                            case "#Strings":
                                this.strings = range;
                                continue;

                            case "#Blob":
                                this.blobs = range;
                                continue;

                            case "#~":
                            case "#-":
                                this.tables = range;
                                continue;
                        }

                        this[name] = range;
                    }

                    if (guidRange) {
                        var saveOffset = reader.offset;
                        reader.setVirtualOffset(guidRange.address);

                        this.guids = Array(guidRange.size / 16);
                        for (var i = 0; i < this.guids.length; i++) {
                            var guid = this._readGuidForStream(reader);
                            this.guids[i] = guid;
                        }

                        reader.offset = saveOffset;
                    }
                };

                MetadataStreams.prototype._readAlignedNameString = function (reader) {
                    var result = "";
                    while (true) {
                        var b = reader.readByte();
                        if (b == 0)
                            break;

                        result += String.fromCharCode(b);
                    }

                    var skipCount = -1 + ((result.length + 4) & ~3) - result.length;
                    for (var i = 0; i < skipCount; i++) {
                        reader.readByte();
                    }

                    return result;
                };

                MetadataStreams.prototype._readGuidForStream = function (reader) {
                    var guid = "{";
                    for (var i = 0; i < 4; i++) {
                        var hex = reader.readInt().toString(16);
                        guid += "00000000".substring(0, 8 - hex.length) + hex;
                    }
                    guid += "}";
                    return guid;
                };
                return MetadataStreams;
            })();
            metadata.MetadataStreams = MetadataStreams;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var TableCompletionReader = (function () {
                function TableCompletionReader(_tableStream, _metadataStreams, _codedIndexReaders) {
                    this._tableStream = _tableStream;
                    this._metadataStreams = _metadataStreams;
                    this._codedIndexReaders = _codedIndexReaders;
                }
                TableCompletionReader.prototype.readString = function (index) {
                    return this._tableStream.stringIndices[index];
                };

                TableCompletionReader.prototype.readGuid = function (index) {
                    return this._metadataStreams.guids[index];
                };

                TableCompletionReader.prototype.copyFieldRange = function (fields, start, end) {
                    this._copyDefRange(fields, 4 /* Field */, start, end);
                };

                TableCompletionReader.prototype.copyMethodRange = function (methods, start, end) {
                    this._copyDefRange(methods, 6 /* MethodDef */, start, end);
                };

                TableCompletionReader.prototype.copyParamRange = function (parameters, start, end) {
                    this._copyDefRange(parameters, 8 /* Param */, start, end);
                };

                TableCompletionReader.prototype._copyDefRange = function (defs, tableKind, start, end) {
                    var table = this._tableStream.tables[tableKind];

                    if (!end && typeof end === "undefined")
                        end = table.length + 1;

                    for (var i = start - 1; i < end - 1; i++) {
                        var row = table[i];
                        defs.push(row.def);
                    }
                };

                TableCompletionReader.prototype.lookupTable = function (tableKind, tableIndex) {
                    if (tableIndex == 0)
                        return null;

                    var table = this._tableStream.tables[tableKind];
                    if (!table)
                        return null;
                    else
                        return table[tableIndex - 1];
                };

                TableCompletionReader.prototype.lookupResolutionScope = function (codedIndex) {
                    return this._codedIndexReaders.resolutionScope.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupTypeDefOrRef = function (codedIndex) {
                    return this._codedIndexReaders.typeDefOrRef.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupHasConstant = function (codedIndex) {
                    return this._codedIndexReaders.hasConstant.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupHasCustomAttribute = function (codedIndex) {
                    return this._codedIndexReaders.hasCustomAttribute.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupCustomAttributeType = function (codedIndex) {
                    return this._codedIndexReaders.customAttributeType.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupHasDeclSecurity = function (codedIndex) {
                    return this._codedIndexReaders.hasDeclSecurity.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupImplementation = function (codedIndex) {
                    return this._codedIndexReaders.implementation.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupHasFieldMarshal = function (codedIndex) {
                    return this._codedIndexReaders.hasFieldMarshal.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupTypeOrMethodDef = function (codedIndex) {
                    return this._codedIndexReaders.typeOrMethodDef.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupMemberForwarded = function (codedIndex) {
                    return this._codedIndexReaders.memberForwarded.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupMemberRefParent = function (codedIndex) {
                    return this._codedIndexReaders.memberRefParent.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupMethodDefOrRef = function (codedIndex) {
                    return this._codedIndexReaders.methodDefOrRef.lookup(codedIndex);
                };
                TableCompletionReader.prototype.lookupHasSemantics = function (codedIndex) {
                    return this._codedIndexReaders.hasSemantics.lookup(codedIndex);
                };

                TableCompletionReader.prototype.resolveTypeReference = function (resolutionScope, namespace, name) {
                    return null;
                };

                TableCompletionReader.prototype.readFieldSignature = function (field, blobIndex) {
                };
                return TableCompletionReader;
            })();
            metadata.TableCompletionReader = TableCompletionReader;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var TableReader = (function () {
                function TableReader(_reader, _tables, stringCount, guidCount, blobCount, _codedIndexReaders) {
                    this._reader = _reader;
                    this._tables = _tables;
                    this._codedIndexReaders = _codedIndexReaders;
                    this.stringIndices = [];
                    this.readStringIndex = this._getDirectReader(stringCount);
                    this.readGuid = this._getDirectReader(guidCount);
                    this.readBlobIndex = this._getDirectReader(blobCount);

                    this.readGenericParamTableIndex = this._getTableIndexReader(42 /* GenericParam */);
                    this.readParamTableIndex = this._getTableIndexReader(8 /* Param */);
                    this.readFieldTableIndex = this._getTableIndexReader(4 /* Field */);
                    this.readMethodDefTableIndex = this._getTableIndexReader(6 /* MethodDef */);
                    this.readTypeDefTableIndex = this._getTableIndexReader(2 /* TypeDef */);
                    this.readEventTableIndex = this._getTableIndexReader(20 /* Event */);
                    this.readPropertyTableIndex = this._getTableIndexReader(23 /* Property */);
                    this.readModuleRefTableIndex = this._getTableIndexReader(26 /* ModuleRef */);
                    this.readAssemblyTableIndex = this._getTableIndexReader(32 /* Assembly */);
                }
                TableReader.prototype.readString = function () {
                    var index = this.readStringIndex();
                    this.stringIndices[index] = "";

                    return index;
                };

                TableReader.prototype._getDirectReader = function (spaceSize) {
                    return spaceSize > 65535 ? this.readInt : this.readShort;
                };

                TableReader.prototype._getTableIndexReader = function (tableKind) {
                    var table = this._tables[tableKind];
                    return this._getDirectReader(table ? table.length : 0);
                };

                TableReader.prototype._getCodedIndexReader = function (tables) {
                    var maxTableLength = 0;
                    for (var i = 0; i < tables.length; i++) {
                        var tableIndex = tables[i];
                        var table = this._tables[tableIndex];
                        maxTableLength = Math.max(maxTableLength, table ? table.length : 0);
                    }

                    var tableKindBitCount = pe.managed.metadata.calcRequredBitCount(tables.length - 1);
                    var tableIndexBitCount = pe.managed.metadata.calcRequredBitCount(maxTableLength);

                    var totalBitCount = tableKindBitCount + tableIndexBitCount;
                    return totalBitCount <= 16 ? this.readShort : this.readInt;
                };

                TableReader.prototype.readByte = function () {
                    return this._reader.readByte();
                };
                TableReader.prototype.readShort = function () {
                    return this._reader.readShort();
                };
                TableReader.prototype.readInt = function () {
                    return this._reader.readInt();
                };

                TableReader.prototype.readResolutionScope = function () {
                    return this._codedIndexReaders.resolutionScope.readCodedIndex(this._reader);
                };
                TableReader.prototype.readTypeDefOrRef = function () {
                    return this._codedIndexReaders.typeDefOrRef.readCodedIndex(this._reader);
                };
                TableReader.prototype.readHasConstant = function () {
                    return this._codedIndexReaders.hasConstant.readCodedIndex(this._reader);
                };
                TableReader.prototype.readHasCustomAttribute = function () {
                    return this._codedIndexReaders.hasCustomAttribute.readCodedIndex(this._reader);
                };
                TableReader.prototype.readCustomAttributeType = function () {
                    return this._codedIndexReaders.customAttributeType.readCodedIndex(this._reader);
                };
                TableReader.prototype.readHasDeclSecurity = function () {
                    return this._codedIndexReaders.hasDeclSecurity.readCodedIndex(this._reader);
                };
                TableReader.prototype.readImplementation = function () {
                    return this._codedIndexReaders.implementation.readCodedIndex(this._reader);
                };
                TableReader.prototype.readHasFieldMarshal = function () {
                    return this._codedIndexReaders.hasFieldMarshal.readCodedIndex(this._reader);
                };
                TableReader.prototype.readTypeOrMethodDef = function () {
                    return this._codedIndexReaders.typeOrMethodDef.readCodedIndex(this._reader);
                };
                TableReader.prototype.readMemberForwarded = function () {
                    return this._codedIndexReaders.memberForwarded.readCodedIndex(this._reader);
                };
                TableReader.prototype.readMemberRefParent = function () {
                    return this._codedIndexReaders.memberRefParent.readCodedIndex(this._reader);
                };
                TableReader.prototype.readMethodDefOrRef = function () {
                    return this._codedIndexReaders.methodDefOrRef.readCodedIndex(this._reader);
                };
                TableReader.prototype.readHasSemantics = function () {
                    return this._codedIndexReaders.hasSemantics.readCodedIndex(this._reader);
                };
                return TableReader;
            })();
            metadata.TableReader = TableReader;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var TableStream = (function () {
                function TableStream() {
                    this.reserved0 = 0;
                    this.version = "";
                    // byte
                    this.heapSizes = 0;
                    this.reserved1 = 0;
                    this.tables = [];
                    this.stringIndices = [];
                    this.codedIndexReaders = null;
                }
                TableStream.prototype.read = function (reader, stringCount, guidCount, blobCount) {
                    this.reserved0 = reader.readInt();

                    // Note those are bytes, not shorts!
                    this.version = reader.readByte() + "." + reader.readByte();

                    this.heapSizes = reader.readByte();
                    this.reserved1 = reader.readByte();

                    var valid = reader.readLong();
                    var sorted = reader.readLong();

                    var tableCounts = this._readTableRowCounts(valid, reader);

                    this._populateTableRows(tableCounts);

                    this.codedIndexReaders = new pe.managed.metadata.CodedIndexReaders(this.tables);

                    var tableReader = new pe.managed.metadata.TableReader(reader, this.tables, stringCount, guidCount, blobCount, this.codedIndexReaders);
                    this._readTableRows(tableCounts, tableReader);

                    this.stringIndices = tableReader.stringIndices;
                };

                TableStream.prototype._readTableRowCounts = function (valid, tableReader) {
                    var tableCounts = [];

                    var bits = valid.lo;
                    for (var tableIndex = 0; tableIndex < 32; tableIndex++) {
                        if (bits & 1) {
                            var rowCount = tableReader.readInt();
                            tableCounts[tableIndex] = rowCount;
                        }
                        bits = bits >> 1;
                    }

                    bits = valid.hi;
                    for (var i = 0; i < 32; i++) {
                        var tableIndex = i + 32;
                        if (bits & 1) {
                            var rowCount = tableReader.readInt();
                            tableCounts[tableIndex] = rowCount;
                        }
                        bits = bits >> 1;
                    }

                    return tableCounts;
                };

                TableStream.prototype._populateTableObjects = function (table, Ctor, count) {
                    for (var i = 0; i < count; i++) {
                        table.push(new Ctor());
                    }
                };

                TableStream.prototype._populateTableRows = function (tableCounts) {
                    for (var i = 0; i < tableCounts.length; i++) {
                        var table = [];
                        this.tables[i] = table;
                        var tableName = pe.managed.metadata.TableKind[i];
                        var TableType = pe.managed.tables[tableName];

                        if (typeof (TableType) === "undefined") {
                            if (tableCounts[i])
                                throw new Error("Table 0x" + i.toString(16).toUpperCase() + " has " + tableCounts[i] + " rows but no definition.");
                            continue;
                        }

                        this._populateTableObjects(table, TableType, tableCounts[i]);
                    }
                };

                TableStream.prototype._readTableRows = function (tableCounts, reader) {
                    for (var i = 0; i < tableCounts.length; i++) {
                        var table = this.tables[i];
                        var tableName = pe.managed.metadata.TableKind[i];
                        var TableType = pe.managed.tables[tableName];

                        for (var iRow = 0; iRow < tableCounts[i]; iRow++) {
                            table[iRow].read(reader);
                        }
                    }
                };
                return TableStream;
            })();
            metadata.TableStream = TableStream;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            function calcRequredBitCount(maxValue) {
                var bitMask = maxValue;
                var result = 0;

                while (bitMask != 0) {
                    result++;
                    bitMask >>= 1;
                }

                return result;
            }
            metadata.calcRequredBitCount = calcRequredBitCount;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (AssemblyFlags) {
                /**
                * The assembly reference holds the full (unhashed) public key.
                */
                AssemblyFlags[AssemblyFlags["PublicKey"] = 0x0001] = "PublicKey";

                /**
                * The implementation of this assembly used at runtime is not expected to match the version seen at compile time.
                * (See the text following this table.)
                */
                AssemblyFlags[AssemblyFlags["Retargetable"] = 0x0100] = "Retargetable";

                /**
                * Reserved
                * (a conforming implementation of the CLI can ignore this setting on read;
                * some implementations might use this bit to indicate
                * that a CIL-to-native-code compiler should not generate optimized code).
                */
                AssemblyFlags[AssemblyFlags["DisableJITcompileOptimizer"] = 0x4000] = "DisableJITcompileOptimizer";

                /**
                * Reserved
                * (a conforming implementation of the CLI can ignore this setting on read;
                * some implementations might use this bit to indicate
                * that a CIL-to-native-code compiler should generate CIL-to-native code map).
                */
                AssemblyFlags[AssemblyFlags["EnableJITcompileTracking"] = 0x8000] = "EnableJITcompileTracking";
            })(metadata.AssemblyFlags || (metadata.AssemblyFlags = {}));
            var AssemblyFlags = metadata.AssemblyFlags;

            /**
            * [ECMA-335 para23.1.16]
            */
            (function (ElementType) {
                /**
                * Marks end of a list.
                */
                ElementType[ElementType["End"] = 0x00] = "End";

                ElementType[ElementType["Void"] = 0x01] = "Void";

                ElementType[ElementType["Boolean"] = 0x02] = "Boolean";

                ElementType[ElementType["Char"] = 0x03] = "Char";

                ElementType[ElementType["I1"] = 0x04] = "I1";
                ElementType[ElementType["U1"] = 0x05] = "U1";
                ElementType[ElementType["I2"] = 0x06] = "I2";
                ElementType[ElementType["U2"] = 0x07] = "U2";
                ElementType[ElementType["I4"] = 0x08] = "I4";
                ElementType[ElementType["U4"] = 0x09] = "U4";
                ElementType[ElementType["I8"] = 0x0a] = "I8";
                ElementType[ElementType["U8"] = 0x0b] = "U8";
                ElementType[ElementType["R4"] = 0x0c] = "R4";
                ElementType[ElementType["R8"] = 0x0d] = "R8";
                ElementType[ElementType["String"] = 0x0e] = "String";

                /**
                * Followed by type.
                */
                ElementType[ElementType["Ptr"] = 0x0f] = "Ptr";

                /**
                * Followed by type.
                */
                ElementType[ElementType["ByRef"] = 0x10] = "ByRef";

                /**
                * Followed by TypeDef or TypeRef token.
                */
                ElementType[ElementType["ValueType"] = 0x11] = "ValueType";

                /**
                * Followed by TypeDef or TypeRef token.
                */
                ElementType[ElementType["Class"] = 0x12] = "Class";

                /**
                * Generic parameter in a generic type definition, represented as number (compressed unsigned integer).
                */
                ElementType[ElementType["Var"] = 0x13] = "Var";

                /**
                * type rank boundsCount bound1 loCount lo1
                */
                ElementType[ElementType["Array"] = 0x14] = "Array";

                /**
                * Generic type instantiation.  Followed by type typearg-count type-1 .managed.. type-n.
                */
                ElementType[ElementType["GenericInst"] = 0x15] = "GenericInst";

                ElementType[ElementType["TypedByRef"] = 0x16] = "TypedByRef";

                /**
                * System.IntPtr
                */
                ElementType[ElementType["I"] = 0x18] = "I";

                /**
                * System.UIntPtr
                */
                ElementType[ElementType["U"] = 0x19] = "U";

                /**
                * Followed by full method signature.
                */
                ElementType[ElementType["FnPtr"] = 0x1b] = "FnPtr";

                /**
                * System.Object
                */
                ElementType[ElementType["Object"] = 0x1c] = "Object";

                /**
                * Single-dim array with 0 lower bound
                */
                ElementType[ElementType["SZArray"] = 0x1d] = "SZArray";

                /**
                * Generic parameter in a generic method definition, represented as number (compressed unsigned integer).
                */
                ElementType[ElementType["MVar"] = 0x1e] = "MVar";

                /**
                * Required modifier: followed by TypeDef or TypeRef token.
                */
                ElementType[ElementType["CMod_ReqD"] = 0x1f] = "CMod_ReqD";

                /**
                * Optional modifier: followed by TypeDef or TypeRef token.
                */
                ElementType[ElementType["CMod_Opt"] = 0x20] = "CMod_Opt";

                /**
                * Implemented within the CLI.
                */
                ElementType[ElementType["Internal"] = 0x21] = "Internal";

                /**
                * Or'd with following element types.
                */
                ElementType[ElementType["Modifier"] = 0x40] = "Modifier";

                /**
                * Sentinel for vararg method signature.
                */
                ElementType[ElementType["Sentinel"] = 0x01 | ElementType.Modifier] = "Sentinel";

                /**
                * Denotes a local variable that points at a pinned object,
                */
                ElementType[ElementType["Pinned"] = 0x05 | ElementType.Modifier] = "Pinned";

                ElementType[ElementType["R4_Hfa"] = 0x06 | ElementType.Modifier] = "R4_Hfa";
                ElementType[ElementType["R8_Hfa"] = 0x07 | ElementType.Modifier] = "R8_Hfa";

                /**
                * Indicates an argument of type System.Type.
                */
                ElementType[ElementType["ArgumentType_"] = 0x10 | ElementType.Modifier] = "ArgumentType_";

                /**
                * Used in custom attributes to specify a boxed object (ECMA-335 para23.3).
                */
                ElementType[ElementType["CustomAttribute_BoxedObject_"] = 0x11 | ElementType.Modifier] = "CustomAttribute_BoxedObject_";

                /**
                * Reserved_ = 0x12 | Modifier,
                */
                /**
                * Used in custom attributes to indicate a FIELD (ECMA-335 para22.10, 23.3).
                */
                ElementType[ElementType["CustomAttribute_Field_"] = 0x13 | ElementType.Modifier] = "CustomAttribute_Field_";

                /**
                * Used in custom attributes to indicate a PROPERTY (ECMA-335 para22.10, 23.3).
                */
                ElementType[ElementType["CustomAttribute_Property_"] = 0x14 | ElementType.Modifier] = "CustomAttribute_Property_";

                /**
                * Used in custom attributes to specify an enum (ECMA-335 para23.3).
                */
                ElementType[ElementType["CustomAttribute_Enum_"] = 0x55] = "CustomAttribute_Enum_";
            })(metadata.ElementType || (metadata.ElementType = {}));
            var ElementType = metadata.ElementType;

            /**
            * Look in ECMA-335 para22.11.
            */
            (function (SecurityAction) {
                /**
                * Without further checks, satisfy Demand for the specified permission.
                * Valid scope: Method, Type;
                */
                SecurityAction[SecurityAction["Assert"] = 3] = "Assert";

                /**
                * Check that all callers in the call chain have been granted specified permission,
                * throw SecurityException (see ECMA-335 paraPartition IV) on failure.
                * Valid scope: Method, Type.
                */
                SecurityAction[SecurityAction["Demand"] = 2] = "Demand";

                /**
                * Without further checks refuse Demand for the specified permission.
                * Valid scope: Method, Type.
                */
                SecurityAction[SecurityAction["Deny"] = 4] = "Deny";

                /**
                * The specified permission shall be granted in order to inherit from class or override virtual method.
                * Valid scope: Method, Type
                */
                SecurityAction[SecurityAction["InheritanceDemand"] = 7] = "InheritanceDemand";

                /**
                * Check that the immediate caller has been granted the specified permission;
                * throw SecurityException (see ECMA-335 paraPartition IV) on failure.
                * Valid scope: Method, Type.
                */
                SecurityAction[SecurityAction["LinkDemand"] = 6] = "LinkDemand";

                /**
                *  Check that the current assembly has been granted the specified permission;
                *  throw SecurityException (see Partition IV) otherwise.
                *  Valid scope: Method, Type.
                */
                SecurityAction[SecurityAction["NonCasDemand"] = 0] = "NonCasDemand";

                /**
                * Check that the immediate caller has been granted the specified permission;
                * throw SecurityException (see Partition IV) otherwise.
                * Valid scope: Method, Type.
                */
                SecurityAction[SecurityAction["NonCasLinkDemand"] = 0] = "NonCasLinkDemand";

                /**
                * Reserved for implementation-specific use.
                * Valid scope: Assembly.
                */
                SecurityAction[SecurityAction["PrejitGrant"] = 0] = "PrejitGrant";

                /**
                * Without further checks, refuse Demand for all permissions other than those specified.
                * Valid scope: Method, Type
                */
                SecurityAction[SecurityAction["PermitOnly"] = 5] = "PermitOnly";

                /**
                * Specify the minimum permissions required to runmanaged.
                * Valid scope: Assembly.
                */
                SecurityAction[SecurityAction["RequestMinimum"] = 8] = "RequestMinimum";

                /**
                * Specify the optional permissions to grant.
                * Valid scope: Assembly.
                */
                SecurityAction[SecurityAction["RequestOptional"] = 9] = "RequestOptional";

                /**
                * Specify the permissions not to be granted.
                * Valid scope: Assembly.
                */
                SecurityAction[SecurityAction["RequestRefuse"] = 10] = "RequestRefuse";
            })(metadata.SecurityAction || (metadata.SecurityAction = {}));
            var SecurityAction = metadata.SecurityAction;

            /**
            * [ECMA-335 para23.1.4]
            */
            (function (EventAttributes) {
                /**
                * Event is special.
                */
                EventAttributes[EventAttributes["SpecialName"] = 0x0200] = "SpecialName";

                /**
                * CLI provides 'special' behavior, depending upon the name of the event.
                */
                EventAttributes[EventAttributes["RTSpecialName"] = 0x0400] = "RTSpecialName";
            })(metadata.EventAttributes || (metadata.EventAttributes = {}));
            var EventAttributes = metadata.EventAttributes;

            (function (TypeAttributes) {
                /**
                * Visibility attributes
                */
                /**
                * Use this mask to retrieve visibility information.
                * These 3 bits contain one of the following values:
                * NotPublic, Public,
                * NestedPublic, NestedPrivate,
                * NestedFamily, NestedAssembly,
                * NestedFamANDAssem, NestedFamORAssem.
                */
                TypeAttributes[TypeAttributes["VisibilityMask"] = 0x00000007] = "VisibilityMask";

                /**
                * Class has no public scope.
                */
                TypeAttributes[TypeAttributes["NotPublic"] = 0x00000000] = "NotPublic";

                /**
                * Class has public scope.
                */
                TypeAttributes[TypeAttributes["Public"] = 0x00000001] = "Public";

                /**
                * Class is nested with public visibility.
                */
                TypeAttributes[TypeAttributes["NestedPublic"] = 0x00000002] = "NestedPublic";

                /**
                * Class is nested with private visibility.
                */
                TypeAttributes[TypeAttributes["NestedPrivate"] = 0x00000003] = "NestedPrivate";

                /**
                * Class is nested with family visibility.
                */
                TypeAttributes[TypeAttributes["NestedFamily"] = 0x00000004] = "NestedFamily";

                /**
                * Class is nested with assembly visibility.
                */
                TypeAttributes[TypeAttributes["NestedAssembly"] = 0x00000005] = "NestedAssembly";

                /**
                * Class is nested with family and assembly visibility.
                */
                TypeAttributes[TypeAttributes["NestedFamANDAssem"] = 0x00000006] = "NestedFamANDAssem";

                /**
                * Class is nested with family or assembly visibility.
                */
                TypeAttributes[TypeAttributes["NestedFamORAssem"] = 0x00000007] = "NestedFamORAssem";

                /**
                * Class layout attributes
                */
                /**
                * Use this mask to retrieve class layout information.
                * These 2 bits contain one of the following values:
                * AutoLayout, SequentialLayout, ExplicitLayout.
                */
                TypeAttributes[TypeAttributes["LayoutMask"] = 0x00000018] = "LayoutMask";

                /**
                * Class fields are auto-laid out.
                */
                TypeAttributes[TypeAttributes["AutoLayout"] = 0x00000000] = "AutoLayout";

                /**
                * Class fields are laid out sequentially.
                */
                TypeAttributes[TypeAttributes["SequentialLayout"] = 0x00000008] = "SequentialLayout";

                /**
                * Layout is supplied explicitly.
                */
                TypeAttributes[TypeAttributes["ExplicitLayout"] = 0x00000010] = "ExplicitLayout";

                /**
                * Class semantics attributes
                */
                /**
                * Use this mask to retrive class semantics information.
                * This bit contains one of the following values:
                * Class, Interface.
                */
                TypeAttributes[TypeAttributes["ClassSemanticsMask"] = 0x00000020] = "ClassSemanticsMask";

                /**
                * Type is a class.
                */
                TypeAttributes[TypeAttributes["Class"] = 0x00000000] = "Class";

                /**
                * Type is an interface.
                */
                TypeAttributes[TypeAttributes["Interface"] = 0x00000020] = "Interface";

                /**
                * Special semantics in addition to class semantics
                */
                /**
                * Class is abstract.
                */
                TypeAttributes[TypeAttributes["Abstract"] = 0x00000080] = "Abstract";

                /**
                * Class cannot be extended.
                */
                TypeAttributes[TypeAttributes["Sealed"] = 0x00000100] = "Sealed";

                /**
                * Class name is special.
                */
                TypeAttributes[TypeAttributes["SpecialName"] = 0x00000400] = "SpecialName";

                /**
                * Implementation Attributes
                */
                /**
                * Class/Interface is imported.
                */
                TypeAttributes[TypeAttributes["Import"] = 0x00001000] = "Import";

                /**
                * Reserved (Class is serializable)
                */
                TypeAttributes[TypeAttributes["Serializable"] = 0x00002000] = "Serializable";

                /**
                * String formatting Attributes
                */
                /**
                * Use this mask to retrieve string information for native interop.
                * These 2 bits contain one of the following values:
                * AnsiClass, UnicodeClass, AutoClass, CustomFormatClass.
                */
                TypeAttributes[TypeAttributes["StringFormatMask"] = 0x00030000] = "StringFormatMask";

                /**
                * LPSTR is interpreted as ANSI.
                */
                TypeAttributes[TypeAttributes["AnsiClass"] = 0x00000000] = "AnsiClass";

                /**
                * LPSTR is interpreted as Unicode.
                */
                TypeAttributes[TypeAttributes["UnicodeClass"] = 0x00010000] = "UnicodeClass";

                /**
                * LPSTR is interpreted automatically.
                */
                TypeAttributes[TypeAttributes["AutoClass"] = 0x00020000] = "AutoClass";

                /**
                * A non-standard encoding specified by CustomStringFormatMask.
                */
                TypeAttributes[TypeAttributes["CustomFormatClass"] = 0x00030000] = "CustomFormatClass";

                /**
                * Use this mask to retrieve non-standard encoding information for native interop.
                * The meaning of the values of these 2 bits isunspecified.
                */
                TypeAttributes[TypeAttributes["CustomStringFormatMask"] = 0x00C00000] = "CustomStringFormatMask";

                /**
                * Class Initialization Attributes
                */
                /**
                * Initialize the class before first static field access.
                */
                TypeAttributes[TypeAttributes["BeforeFieldInit"] = 0x00100000] = "BeforeFieldInit";

                /**
                * Additional Flags
                */
                /**
                * CLI provides 'special' behavior, depending upon the name of the Type
                */
                TypeAttributes[TypeAttributes["RTSpecialName"] = 0x00000800] = "RTSpecialName";

                /**
                * Type has security associate with it.
                */
                TypeAttributes[TypeAttributes["HasSecurity"] = 0x00040000] = "HasSecurity";

                /**
                * This ExportedTypeEntry is a type forwarder.
                */
                TypeAttributes[TypeAttributes["IsTypeForwarder"] = 0x00200000] = "IsTypeForwarder";
            })(metadata.TypeAttributes || (metadata.TypeAttributes = {}));
            var TypeAttributes = metadata.TypeAttributes;

            /**
            * [ECMA-335 para23.1.5]
            */
            (function (FieldAttributes) {
                /**
                * These 3 bits contain one of the following values:
                * CompilerControlled, Private,
                * FamANDAssem, Assembly,
                * Family, FamORAssem,
                * Public.
                */
                FieldAttributes[FieldAttributes["FieldAccessMask"] = 0x0007] = "FieldAccessMask";

                /***
                * Member not referenceable.
                */
                FieldAttributes[FieldAttributes["CompilerControlled"] = 0x0000] = "CompilerControlled";

                /**
                * Accessible only by the parent type.
                */
                FieldAttributes[FieldAttributes["Private"] = 0x0001] = "Private";

                /**
                * Accessible by sub-types only in this Assembly.
                */
                FieldAttributes[FieldAttributes["FamANDAssem"] = 0x0002] = "FamANDAssem";

                /**
                * Accessibly by anyone in the Assembly.
                */
                FieldAttributes[FieldAttributes["Assembly"] = 0x0003] = "Assembly";

                /**
                * Accessible only by type and sub-types.
                */
                FieldAttributes[FieldAttributes["Family"] = 0x0004] = "Family";

                /**
                * Accessibly by sub-types anywhere, plus anyone in assembly.
                */
                FieldAttributes[FieldAttributes["FamORAssem"] = 0x0005] = "FamORAssem";

                /**
                * Accessibly by anyone who has visibility to this scope field contract attributes.
                */
                FieldAttributes[FieldAttributes["Public"] = 0x0006] = "Public";

                /**
                * Defined on type, else per instance.
                */
                FieldAttributes[FieldAttributes["Static"] = 0x0010] = "Static";

                /**
                * Field can only be initialized, not written to after init.
                */
                FieldAttributes[FieldAttributes["InitOnly"] = 0x0020] = "InitOnly";

                /**
                * Value is compile time constant.
                */
                FieldAttributes[FieldAttributes["Literal"] = 0x0040] = "Literal";

                /**
                * Reserved (to indicate this field should not be serialized when type is remoted).
                */
                FieldAttributes[FieldAttributes["NotSerialized"] = 0x0080] = "NotSerialized";

                /**
                * Field is special.
                */
                FieldAttributes[FieldAttributes["SpecialName"] = 0x0200] = "SpecialName";

                /**
                * Interop Attributes
                */
                /**
                * Implementation is forwarded through PInvoke.
                */
                FieldAttributes[FieldAttributes["PInvokeImpl"] = 0x2000] = "PInvokeImpl";

                /**
                * Additional flags
                */
                /**
                * CLI provides 'special' behavior, depending upon the name of the field.
                */
                FieldAttributes[FieldAttributes["RTSpecialName"] = 0x0400] = "RTSpecialName";

                /**
                * Field has marshalling information.
                */
                FieldAttributes[FieldAttributes["HasFieldMarshal"] = 0x1000] = "HasFieldMarshal";

                /**
                * Field has default.
                */
                FieldAttributes[FieldAttributes["HasDefault"] = 0x8000] = "HasDefault";

                /**
                * Field has RVA.
                */
                FieldAttributes[FieldAttributes["HasFieldRVA"] = 0x0100] = "HasFieldRVA";
            })(metadata.FieldAttributes || (metadata.FieldAttributes = {}));
            var FieldAttributes = metadata.FieldAttributes;

            /**
            * [ECMA-335 para23.1.6]
            */
            (function (FileAttributes) {
                /**
                * This is not a resource file.
                */
                FileAttributes[FileAttributes["ContainsMetaData"] = 0x0000] = "ContainsMetaData";

                /**
                * This is a resource file or other non-metadata-containing file.
                */
                FileAttributes[FileAttributes["ContainsNoMetaData"] = 0x0001] = "ContainsNoMetaData";
            })(metadata.FileAttributes || (metadata.FileAttributes = {}));
            var FileAttributes = metadata.FileAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (AssemblyHashAlgorithm) {
                AssemblyHashAlgorithm[AssemblyHashAlgorithm["None"] = 0x0000] = "None";
                AssemblyHashAlgorithm[AssemblyHashAlgorithm["Reserved"] = 0x8003] = "Reserved";
                AssemblyHashAlgorithm[AssemblyHashAlgorithm["Sha1"] = 0x8004] = "Sha1";
            })(metadata.AssemblyHashAlgorithm || (metadata.AssemblyHashAlgorithm = {}));
            var AssemblyHashAlgorithm = metadata.AssemblyHashAlgorithm;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.2.3]
            */
            (function (CallingConventions) {
                /**
                * Used to encode the keyword 'default' in the calling convention, see ECMA para15.3.
                */
                CallingConventions[CallingConventions["Default"] = 0x0] = "Default";

                CallingConventions[CallingConventions["C"] = 0x1] = "C";

                CallingConventions[CallingConventions["StdCall"] = 0x2] = "StdCall";

                CallingConventions[CallingConventions["FastCall"] = 0x4] = "FastCall";

                /**
                * Used to encode the keyword 'vararg' in the calling convention, see ECMA para15.3.
                */
                CallingConventions[CallingConventions["VarArg"] = 0x5] = "VarArg";

                /**
                * Used to indicate that the method has one or more generic parameters.
                */
                CallingConventions[CallingConventions["Generic"] = 0x10] = "Generic";

                /**
                * Used to encode the keyword 'instance' in the calling convention, see ECMA para15.3.
                */
                CallingConventions[CallingConventions["HasThis"] = 0x20] = "HasThis";

                /**
                * Used to encode the keyword 'explicit' in the calling convention, see ECMA para15.3.
                */
                CallingConventions[CallingConventions["ExplicitThis"] = 0x40] = "ExplicitThis";

                /**
                * (ECMA para23.1.16), used to encode '.managed..' in the parameter list, see ECMA para15.3.
                */
                CallingConventions[CallingConventions["Sentinel"] = 0x41] = "Sentinel";
            })(metadata.CallingConventions || (metadata.CallingConventions = {}));
            var CallingConventions = metadata.CallingConventions;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (ClrImageFlags) {
                ClrImageFlags[ClrImageFlags["ILOnly"] = 0x00000001] = "ILOnly";
                ClrImageFlags[ClrImageFlags["_32BitRequired"] = 0x00000002] = "_32BitRequired";
                ClrImageFlags[ClrImageFlags["ILLibrary"] = 0x00000004] = "ILLibrary";
                ClrImageFlags[ClrImageFlags["StrongNameSigned"] = 0x00000008] = "StrongNameSigned";
                ClrImageFlags[ClrImageFlags["NativeEntryPoint"] = 0x00000010] = "NativeEntryPoint";
                ClrImageFlags[ClrImageFlags["TrackDebugData"] = 0x00010000] = "TrackDebugData";
                ClrImageFlags[ClrImageFlags["IsIbcoptimized"] = 0x00020000] = "IsIbcoptimized";
            })(metadata.ClrImageFlags || (metadata.ClrImageFlags = {}));
            var ClrImageFlags = metadata.ClrImageFlags;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (ClrMetadataSignature) {
                ClrMetadataSignature[ClrMetadataSignature["Signature"] = 0x424a5342] = "Signature";
            })(metadata.ClrMetadataSignature || (metadata.ClrMetadataSignature = {}));
            var ClrMetadataSignature = metadata.ClrMetadataSignature;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.7]
            */
            (function (GenericParamAttributes) {
                /**
                * These 2 bits contain one of the following values:
                * VarianceMask,
                * None,
                * Covariant,
                * Contravariant.
                */
                GenericParamAttributes[GenericParamAttributes["VarianceMask"] = 0x0003] = "VarianceMask";

                /**
                * The generic parameter is non-variant and has no special constraints.
                */
                GenericParamAttributes[GenericParamAttributes["None"] = 0x0000] = "None";

                /**
                * The generic parameter is covariant.
                */
                GenericParamAttributes[GenericParamAttributes["Covariant"] = 0x0001] = "Covariant";

                /**
                * The generic parameter is contravariant.
                */
                GenericParamAttributes[GenericParamAttributes["Contravariant"] = 0x0002] = "Contravariant";

                /**
                * These 3 bits contain one of the following values:
                * ReferenceTypeConstraint,
                * NotNullableValueTypeConstraint,
                * DefaultConstructorConstraint.
                */
                GenericParamAttributes[GenericParamAttributes["SpecialConstraintMask"] = 0x001C] = "SpecialConstraintMask";

                /**
                * The generic parameter has the class special constraint.
                */
                GenericParamAttributes[GenericParamAttributes["ReferenceTypeConstraint"] = 0x0004] = "ReferenceTypeConstraint";

                /**
                * The generic parameter has the valuetype special constraint.
                */
                GenericParamAttributes[GenericParamAttributes["NotNullableValueTypeConstraint"] = 0x0008] = "NotNullableValueTypeConstraint";

                /**
                * The generic parameter has the .ctor special constraint.
                */
                GenericParamAttributes[GenericParamAttributes["DefaultConstructorConstraint"] = 0x0010] = "DefaultConstructorConstraint";
            })(metadata.GenericParamAttributes || (metadata.GenericParamAttributes = {}));
            var GenericParamAttributes = metadata.GenericParamAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.9]
            */
            (function (ManifestResourceAttributes) {
                /**
                * These 3 bits contain one of the following values:
                */
                ManifestResourceAttributes[ManifestResourceAttributes["VisibilityMask"] = 0x0007] = "VisibilityMask";

                /**
                * The Resource is exported from the Assembly.
                */
                ManifestResourceAttributes[ManifestResourceAttributes["Public"] = 0x0001] = "Public";

                /**
                * The Resource is private to the Assembly.
                */
                ManifestResourceAttributes[ManifestResourceAttributes["Private"] = 0x0002] = "Private";
            })(metadata.ManifestResourceAttributes || (metadata.ManifestResourceAttributes = {}));
            var ManifestResourceAttributes = metadata.ManifestResourceAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.10]
            */
            (function (MethodAttributes) {
                /**
                * These 3 bits contain one of the following values:
                * CompilerControlled,
                * Private,
                * FamANDAssem,
                * Assem,
                * Family,
                * FamORAssem,
                * Public
                */
                MethodAttributes[MethodAttributes["MemberAccessMask"] = 0x0007] = "MemberAccessMask";

                /**
                * Member not referenceable.
                */
                MethodAttributes[MethodAttributes["CompilerControlled"] = 0x0000] = "CompilerControlled";

                /**
                * Accessible only by the parent type.
                */
                MethodAttributes[MethodAttributes["Private"] = 0x0001] = "Private";

                /**
                * Accessible by sub-types only in this Assembly.
                */
                MethodAttributes[MethodAttributes["FamANDAssem"] = 0x0002] = "FamANDAssem";

                /**
                * Accessibly by anyone in the Assembly.
                */
                MethodAttributes[MethodAttributes["Assem"] = 0x0003] = "Assem";

                /**
                * Accessible only by type and sub-types.
                */
                MethodAttributes[MethodAttributes["Family"] = 0x0004] = "Family";

                /**
                * Accessibly by sub-types anywhere, plus anyone in assembly.
                */
                MethodAttributes[MethodAttributes["FamORAssem"] = 0x0005] = "FamORAssem";

                /**
                * Accessibly by anyone who has visibility to this scope.
                */
                MethodAttributes[MethodAttributes["Public"] = 0x0006] = "Public";

                /**
                * Defined on type, else per instance.
                */
                MethodAttributes[MethodAttributes["Static"] = 0x0010] = "Static";

                /**
                * Method cannot be overridden.
                */
                MethodAttributes[MethodAttributes["Final"] = 0x0020] = "Final";

                /**
                * Method is virtual.
                */
                MethodAttributes[MethodAttributes["Virtual"] = 0x0040] = "Virtual";

                /**
                * Method hides by name+sig, else just by name.
                */
                MethodAttributes[MethodAttributes["HideBySig"] = 0x0080] = "HideBySig";

                /**
                * Use this mask to retrieve vtable attributes. This bit contains one of the following values:
                * ReuseSlot, NewSlot.
                */
                MethodAttributes[MethodAttributes["VtableLayoutMask"] = 0x0100] = "VtableLayoutMask";

                /**
                * Method reuses existing slot in vtable.
                */
                MethodAttributes[MethodAttributes["ReuseSlot"] = 0x0000] = "ReuseSlot";

                /**
                * Method always gets a new slot in the vtable.
                */
                MethodAttributes[MethodAttributes["NewSlot"] = 0x0100] = "NewSlot";

                /**
                * Method can only be overriden if also accessible.
                */
                MethodAttributes[MethodAttributes["Strict"] = 0x0200] = "Strict";

                /**
                * Method does not provide an implementation.
                */
                MethodAttributes[MethodAttributes["Abstract"] = 0x0400] = "Abstract";

                /**
                * Method is special.
                */
                MethodAttributes[MethodAttributes["SpecialName"] = 0x0800] = "SpecialName";

                // Interop attributes
                /**
                * Implementation is forwarded through PInvoke.
                */
                MethodAttributes[MethodAttributes["PInvokeImpl"] = 0x2000] = "PInvokeImpl";

                /**
                * Reserved: shall be zero for conforming implementations.
                */
                MethodAttributes[MethodAttributes["UnmanagedExport"] = 0x0008] = "UnmanagedExport";

                // Additional flags
                /**
                * CLI provides 'special' behavior, depending upon the name of the method.
                */
                MethodAttributes[MethodAttributes["RTSpecialName"] = 0x1000] = "RTSpecialName";

                /**
                * Method has security associated with it.
                */
                MethodAttributes[MethodAttributes["HasSecurity"] = 0x4000] = "HasSecurity";

                /**
                * Method calls another method containing security code.
                */
                MethodAttributes[MethodAttributes["RequireSecObject"] = 0x8000] = "RequireSecObject";
            })(metadata.MethodAttributes || (metadata.MethodAttributes = {}));
            var MethodAttributes = metadata.MethodAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (MethodImplAttributes) {
                /**
                * These 2 bits contain one of the following values:
                * IL, Native, OPTIL, Runtime.
                */
                MethodImplAttributes[MethodImplAttributes["CodeTypeMask"] = 0x0003] = "CodeTypeMask";

                /**
                * Method impl is CIL.
                */
                MethodImplAttributes[MethodImplAttributes["IL"] = 0x0000] = "IL";

                /**
                * Method impl is native.
                */
                MethodImplAttributes[MethodImplAttributes["Native"] = 0x0001] = "Native";

                /**
                * Reserved: shall be zero in conforming implementations.
                */
                MethodImplAttributes[MethodImplAttributes["OPTIL"] = 0x0002] = "OPTIL";

                /**
                * Method impl is provided by the runtime.
                */
                MethodImplAttributes[MethodImplAttributes["Runtime"] = 0x0003] = "Runtime";

                /**
                * Flags specifying whether the code is managed or unmanaged.
                * This bit contains one of the following values:
                * Unmanaged, Managed.
                */
                MethodImplAttributes[MethodImplAttributes["ManagedMask"] = 0x0004] = "ManagedMask";

                /**
                * Method impl is unmanaged, otherwise managed.
                */
                MethodImplAttributes[MethodImplAttributes["Unmanaged"] = 0x0004] = "Unmanaged";

                /**
                * Method impl is managed.
                */
                MethodImplAttributes[MethodImplAttributes["Managed"] = 0x0000] = "Managed";

                // Implementation info and interop
                /**
                * Indicates method is defined; used primarily in merge scenarios.
                */
                MethodImplAttributes[MethodImplAttributes["ForwardRef"] = 0x0010] = "ForwardRef";

                /**
                * Reserved: conforming implementations can ignore.
                */
                MethodImplAttributes[MethodImplAttributes["PreserveSig"] = 0x0080] = "PreserveSig";

                /**
                * Reserved: shall be zero in conforming implementations.
                */
                MethodImplAttributes[MethodImplAttributes["InternalCall"] = 0x1000] = "InternalCall";

                /**
                * Method is single threaded through the body.
                */
                MethodImplAttributes[MethodImplAttributes["Synchronized"] = 0x0020] = "Synchronized";

                /**
                * Method cannot be inlined.
                */
                MethodImplAttributes[MethodImplAttributes["NoInlining"] = 0x0008] = "NoInlining";

                /**
                * Range check value.
                */
                MethodImplAttributes[MethodImplAttributes["MaxMethodImplVal"] = 0xffff] = "MaxMethodImplVal";

                /**
                * Method will not be optimized when generating native code.
                */
                MethodImplAttributes[MethodImplAttributes["NoOptimization"] = 0x0040] = "NoOptimization";
            })(metadata.MethodImplAttributes || (metadata.MethodImplAttributes = {}));
            var MethodImplAttributes = metadata.MethodImplAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.12]
            */
            (function (MethodSemanticsAttributes) {
                /**
                * Setter for property.
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["Setter"] = 0x0001] = "Setter";

                /**
                * Getter for property.
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["Getter"] = 0x0002] = "Getter";

                /**
                * Other method for property or event.
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["Other"] = 0x0004] = "Other";

                /**
                * AddOn method for event.
                * This refers to the required add_ method for events.  (ECMA-335 para22.13)
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["AddOn"] = 0x0008] = "AddOn";

                /**
                * RemoveOn method for event.
                * This refers to the required remove_ method for events. (ECMA-335 para22.13)
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["RemoveOn"] = 0x0010] = "RemoveOn";

                /**
                * Fire method for event.
                * This refers to the optional raise_ method for events. (ECMA-335 para22.13)
                */
                MethodSemanticsAttributes[MethodSemanticsAttributes["Fire"] = 0x0020] = "Fire";
            })(metadata.MethodSemanticsAttributes || (metadata.MethodSemanticsAttributes = {}));
            var MethodSemanticsAttributes = metadata.MethodSemanticsAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.8]
            */
            (function (PInvokeAttributes) {
                /**
                * PInvoke is to use the member name as specified.
                */
                PInvokeAttributes[PInvokeAttributes["NoMangle"] = 0x0001] = "NoMangle";

                // Character set
                /**
                * These 2 bits contain one of the following values:
                * CharSetNotSpec,
                * CharSetAnsi,
                * CharSetUnicode,
                * CharSetAuto.
                */
                PInvokeAttributes[PInvokeAttributes["CharSetMask"] = 0x0006] = "CharSetMask";

                PInvokeAttributes[PInvokeAttributes["CharSetNotSpec"] = 0x0000] = "CharSetNotSpec";
                PInvokeAttributes[PInvokeAttributes["CharSetAnsi"] = 0x0002] = "CharSetAnsi";
                PInvokeAttributes[PInvokeAttributes["CharSetUnicode"] = 0x0004] = "CharSetUnicode";
                PInvokeAttributes[PInvokeAttributes["CharSetAuto"] = 0x0006] = "CharSetAuto";

                /**
                * Information about target function. Not relevant for fields.
                */
                PInvokeAttributes[PInvokeAttributes["SupportsLastError"] = 0x0040] = "SupportsLastError";

                // Calling convention
                /**
                * These 3 bits contain one of the following values:
                * CallConvPlatformapi,
                * CallConvCdecl,
                * CallConvStdcall,
                * CallConvThiscall,
                * CallConvFastcall.
                */
                PInvokeAttributes[PInvokeAttributes["CallConvMask"] = 0x0700] = "CallConvMask";
                PInvokeAttributes[PInvokeAttributes["CallConvPlatformapi"] = 0x0100] = "CallConvPlatformapi";
                PInvokeAttributes[PInvokeAttributes["CallConvCdecl"] = 0x0200] = "CallConvCdecl";
                PInvokeAttributes[PInvokeAttributes["CallConvStdcall"] = 0x0300] = "CallConvStdcall";
                PInvokeAttributes[PInvokeAttributes["CallConvThiscall"] = 0x0400] = "CallConvThiscall";
                PInvokeAttributes[PInvokeAttributes["CallConvFastcall"] = 0x0500] = "CallConvFastcall";
            })(metadata.PInvokeAttributes || (metadata.PInvokeAttributes = {}));
            var PInvokeAttributes = metadata.PInvokeAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.13]
            */
            (function (ParamAttributes) {
                /**
                * Param is [In].
                */
                ParamAttributes[ParamAttributes["In"] = 0x0001] = "In";

                /**
                * Param is [out].
                */
                ParamAttributes[ParamAttributes["Out"] = 0x0002] = "Out";

                /**
                * Param is optional.
                */
                ParamAttributes[ParamAttributes["Optional"] = 0x0010] = "Optional";

                /**
                * Param has default value.
                */
                ParamAttributes[ParamAttributes["HasDefault"] = 0x1000] = "HasDefault";

                /**
                * Param has FieldMarshal.
                */
                ParamAttributes[ParamAttributes["HasFieldMarshal"] = 0x2000] = "HasFieldMarshal";

                /**
                * Reserved: shall be zero in a conforming implementation.
                */
                ParamAttributes[ParamAttributes["Unused"] = 0xcfe0] = "Unused";
            })(metadata.ParamAttributes || (metadata.ParamAttributes = {}));
            var ParamAttributes = metadata.ParamAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            /**
            * [ECMA-335 para23.1.14]
            */
            (function (PropertyAttributes) {
                /**
                * Property is special.
                */
                PropertyAttributes[PropertyAttributes["SpecialName"] = 0x0200] = "SpecialName";

                /**
                * Runtime (metadata internal APIs) should check name encoding.
                */
                PropertyAttributes[PropertyAttributes["RTSpecialName"] = 0x0400] = "RTSpecialName";

                /**
                * Property has default.
                */
                PropertyAttributes[PropertyAttributes["HasDefault"] = 0x1000] = "HasDefault";

                /**
                * Reserved: shall be zero in a conforming implementation.
                */
                PropertyAttributes[PropertyAttributes["Unused"] = 0xe9ff] = "Unused";
            })(metadata.PropertyAttributes || (metadata.PropertyAttributes = {}));
            var PropertyAttributes = metadata.PropertyAttributes;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            (function (TableKind) {
                /*
                * The rows in the Module table result from .module directives in the Assembly.
                */
                TableKind[TableKind["Module"] = 0x00] = "Module";

                /*
                * Contains ResolutionScope, TypeName and TypeNamespace columns.
                */
                TableKind[TableKind["TypeRef"] = 0x01] = "TypeRef";

                /*
                * The first row of the TypeDef table represents the pseudo class that acts as parent for functions and variables
                * defined at module scope.
                * If a type is generic, its parameters are defined in the GenericParam table (para22.20). Entries in the
                * GenericParam table reference entries in the TypeDef table; there is no reference from the TypeDef table to the
                * GenericParam table.
                */
                TableKind[TableKind["TypeDef"] = 0x02] = "TypeDef";

                /*
                * Each row in the Field table results from a top-level .field directive, or a .field directive inside a
                * Type.
                */
                TableKind[TableKind["Field"] = 0x04] = "Field";

                /*
                * Conceptually, every row in the MethodDef table is owned by one, and only one, row in the TypeDef table.
                * The rows in the MethodDef table result from .method directives (para15). The RVA column is computed when
                * the image for the PE file is emitted and points to the COR_ILMETHOD structure for the body of the method.
                */
                TableKind[TableKind["MethodDef"] = 0x06] = "MethodDef";

                /*
                * Conceptually, every row in the Param table is owned by one, and only one, row in the MethodDef table.
                * The rows in the Param table result from the parameters in a method declaration (para15.4), or from a .param
                * attribute attached to a method.
                */
                TableKind[TableKind["Param"] = 0x08] = "Param";

                /*
                * Combines two sorts of references, to Methods and to Fields of a class, known as 'MethodRef' and 'FieldRef', respectively.
                * An entry is made into the MemberRef table whenever a reference is made in the CIL code to a method or field
                * which is defined in another module or assembly.  (Also, an entry is made for a call to a method with a VARARG
                * signature, even when it is defined in the same module as the call site.)
                */
                TableKind[TableKind["MemberRef"] = 0x0A] = "MemberRef";

                /*
                * Used to store compile-time, constant values for fields, parameters, and properties.
                */
                TableKind[TableKind["Constant"] = 0x0B] = "Constant";

                /*
                * Stores data that can be used to instantiate a Custom Attribute (more precisely, an
                * object of the specified Custom Attribute class) at runtime.
                * A row in the CustomAttribute table for a parent is created by the .custom attribute, which gives the value of
                * the Type column and optionally that of the Value column.
                */
                TableKind[TableKind["CustomAttribute"] = 0x0C] = "CustomAttribute";

                /*
                * The FieldMarshal table  'links' an existing row in the Field or Param table, to information
                * in the Blob heap that defines how that field or parameter (which, as usual, covers the method return, as
                * parameter number 0) shall be marshalled when calling to or from unmanaged code via PInvoke dispatch.
                * A row in the FieldMarshal table is created if the .field directive for the parent field has specified a marshal attribute.
                */
                TableKind[TableKind["FieldMarshal"] = 0x0D] = "FieldMarshal";

                /*
                * The rows of the DeclSecurity table are filled by attaching a .permission or .permissionset directive
                * that specifies the Action and PermissionSet on a parent assembly or parent type or method.
                */
                TableKind[TableKind["DeclSecurity"] = 0x0E] = "DeclSecurity";

                /*
                * Used to define how the fields of a class or value type shall be laid out by the CLI.
                * (Normally, the CLI is free to reorder and/or insert gaps between the fields defined for a class or value type.)
                */
                TableKind[TableKind["ClassLayout"] = 0x0F] = "ClassLayout";

                /*
                * Records the interfaces a type implements explicitly.  Conceptually, each row in the
                * InterfaceImpl table indicates that Class implements Interface.
                */
                TableKind[TableKind["InterfaceImpl"] = 0x09] = "InterfaceImpl";

                /*
                * A row in the FieldLayout table is created if the .field directive for the parent field has specified a field offset.
                */
                TableKind[TableKind["FieldLayout"] = 0x10] = "FieldLayout";

                /*
                * Signatures are stored in the metadata Blob heap.  In most cases, they are indexed by a column in some table -
                * Field.Signature, Method.Signature, MemberRef.Signature, etc.  However, there are two cases that require a
                * metadata token for a signature that is not indexed by any metadata table.  The StandAloneSig table fulfils this
                * need.  It has just one column, which points to a Signature in the Blob heap.
                */
                TableKind[TableKind["StandAloneSig"] = 0x11] = "StandAloneSig";

                /*
                * The EventMap and Event tables result from putting the .event directive on a class.
                */
                TableKind[TableKind["EventMap"] = 0x12] = "EventMap";

                /*
                * The EventMap and Event tables result from putting the .event directive on a class.
                */
                TableKind[TableKind["Event"] = 0x14] = "Event";

                /*
                * The PropertyMap and Property tables result from putting the .property directive on a class.
                */
                TableKind[TableKind["PropertyMap"] = 0x15] = "PropertyMap";

                /*
                * Does a little more than group together existing rows from other tables.
                */
                TableKind[TableKind["Property"] = 0x17] = "Property";

                /*
                * The rows of the MethodSemantics table are filled by .property and .event directives.
                */
                TableKind[TableKind["MethodSemantics"] = 0x18] = "MethodSemantics";

                /*
                * This let a compiler override the default inheritance rules provided by the CLI. Their original use
                * was to allow a class C, that inherited method M from both interfaces I and J, to provide implementations for
                * both methods (rather than have only one slot for M in its vtable). However, MethodImpls can be used for other
                * reasons too, limited only by the compiler writer's ingenuity within the constraints defined in the Validation rules.
                * ILAsm uses the .override directive to specify the rows of the MethodImpl table.
                */
                TableKind[TableKind["MethodImpl"] = 0x19] = "MethodImpl";

                /*
                * The rows in the ModuleRef table result from .module extern directives in the Assembly.
                */
                TableKind[TableKind["ModuleRef"] = 0x1A] = "ModuleRef";

                /*
                *  Contains just one column, which indexes the specification of a Type, stored in the Blob heap.
                *  This provides a metadata token for that Type (rather than simply an index into the Blob heap). This is required,
                *  typically, for array operations, such as creating, or calling methods on the array class.
                *  Note that TypeSpec tokens can be used with any of the CIL instructions that take a TypeDef or TypeRef token;
                *  specifically, castclass, cpobj, initobj, isinst, ldelema, ldobj, mkrefany, newarr, refanyval, sizeof, stobj,
                *  box, and unbox.
                */
                TableKind[TableKind["TypeSpec"] = 0x1B] = "TypeSpec";

                /*
                * Holds information about unmanaged methods that can be reached from managed code,
                * using PInvoke dispatch.
                * A row is entered in the ImplMap table for each parent Method (para15.5) that is defined with a .pinvokeimpl
                * interoperation attribute specifying the MappingFlags, ImportName, and ImportScope.
                */
                TableKind[TableKind["ImplMap"] = 0x1C] = "ImplMap";

                /*
                * Conceptually, each row in the FieldRVA table is an extension to exactly one row in the Field table, and records
                * the RVA (Relative Virtual Address) within the image file at which this field's initial value is stored.
                * A row in the FieldRVA table is created for each static parent field that has specified the optional data
                * label.  The RVA column is the relative virtual address of the data in the PE file.
                */
                TableKind[TableKind["FieldRVA"] = 0x1D] = "FieldRVA";

                /*
                * ECMA-335 para22.2.
                */
                TableKind[TableKind["Assembly"] = 0x20] = "Assembly";

                /*
                * ECMA-335 para22.4 Shall be ignored by the CLI.
                */
                TableKind[TableKind["AssemblyProcessor"] = 0x21] = "AssemblyProcessor";

                /*
                * ECMA-335 para22.3 Shall be ignored by the CLI.
                */
                TableKind[TableKind["AssemblyOS"] = 0x22] = "AssemblyOS";

                /*
                * The table is defined by the .assembly extern directive (para6.3).  Its columns are filled using directives
                * similar to those of the Assembly table except for the PublicKeyOrToken column, which is defined using the
                * .publickeytoken directive.
                */
                TableKind[TableKind["AssemblyRef"] = 0x23] = "AssemblyRef";

                /*
                * ECMA-335 para22.7 Shall be ignored by the CLI.
                */
                TableKind[TableKind["AssemblyRefProcessor"] = 0x24] = "AssemblyRefProcessor";

                /*
                * ECMA-335 para22.6 Shall be ignored by the CLI.
                */
                TableKind[TableKind["AssemblyRefOS"] = 0x25] = "AssemblyRefOS";

                /*
                * The rows of the File table result from .file directives in an Assembly.
                */
                TableKind[TableKind["File"] = 0x26] = "File";

                /*
                * Holds a row for each type:
                * a. Defined within other modules of this Assembly; that is exported out of this Assembly.  In essence, it
                * stores TypeDef row numbers of all types that are marked public in other modules that this Assembly
                * comprises.
                * The actual target row in a TypeDef table is given by the combination of TypeDefId (in effect, row
                * number) and Implementation (in effect, the module that holds the target TypeDef table).  Note that this
                * is the only occurrence in metadata of foreign tokens; that is, token values that have a meaning in
                * another module.  (A regular token value is an index into a table in the current module); OR
                * b. Originally defined in this Assembly but now moved to another Assembly. Flags must have
                * IsTypeForwarder set and Implementation is an AssemblyRef indicating the Assembly the type may
                * now be found in.
                */
                TableKind[TableKind["ExportedType"] = 0x27] = "ExportedType";

                /*
                *  The rows in the table result from .mresource directives on the Assembly.
                */
                TableKind[TableKind["ManifestResource"] = 0x28] = "ManifestResource";

                /*
                * NestedClass is defined as lexically 'inside' the text of its enclosing Type.
                */
                TableKind[TableKind["NestedClass"] = 0x29] = "NestedClass";

                /*
                * Stores the generic parameters used in generic type definitions and generic method
                * definitions.  These generic parameters can be constrained (i.e., generic arguments shall extend some class
                * and/or implement certain interfaces) or unconstrained.  (Such constraints are stored in the
                * GenericParamConstraint table.)
                * Conceptually, each row in the GenericParam table is owned by one, and only one, row in either the TypeDef or
                * MethodDef tables.
                */
                TableKind[TableKind["GenericParam"] = 0x2A] = "GenericParam";

                /*
                * Records the signature of an instantiated generic method.
                * Each unique instantiation of a generic method (i.e., a combination of Method and Instantiation) shall be
                * represented by a single row in the table.
                */
                TableKind[TableKind["MethodSpec"] = 0x2B] = "MethodSpec";

                /*
                * Records the constraints for each generic parameter.  Each generic parameter
                * can be constrained to derive from zero or one class.  Each generic parameter can be constrained to implement
                * zero or more interfaces.
                * Conceptually, each row in the GenericParamConstraint table is "owned" by a row in the GenericParam table.
                */
                TableKind[TableKind["GenericParamConstraint"] = 0x2C] = "GenericParamConstraint";
            })(metadata.TableKind || (metadata.TableKind = {}));
            var TableKind = metadata.TableKind;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.2 */
            var Assembly = (function () {
                function Assembly() {
                    this.def = new pe.managed.Assembly();
                    this.hashAlgId = 0;
                    this.majorVersion = 0;
                    this.minorVersion = 0;
                    this.buildNumber = 0;
                    this.revisionNumber = 0;
                    this.flags = 0;
                    this.publicKey = 0;
                    this.name = 0;
                    this.culture = 0;
                }
                Assembly.prototype.read = function (reader) {
                    this.hashAlgId = reader.readInt();
                    this.majorVersion = reader.readShort();
                    this.minorVersion = reader.readShort();
                    this.buildNumber = reader.readShort();
                    this.revisionNumber = reader.readShort();
                    this.flags = reader.readInt();
                    this.publicKey = reader.readBlobIndex();
                    this.name = reader.readString();
                    this.culture = reader.readString();
                };

                Assembly.prototype.complete = function (reader) {
                    this.def.attributes = this.flags;
                    this.def.name = reader.readString(this.name);
                    this.def.version = this.majorVersion + '.' + this.minorVersion + '.' + this.buildNumber + '.' + this.revisionNumber;
                };
                return Assembly;
            })();
            tables.Assembly = Assembly;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.3 */
            var AssemblyOS = (function () {
                function AssemblyOS() {
                    this.TableKind = 0x22;
                    this.osPlatformId = 0;
                    this.osMajorVersion = 0;
                    this.osMinorVersion = 0;
                }
                AssemblyOS.prototype.read = function (reader) {
                    this.osPlatformId = reader.readInt();
                    this.osMajorVersion = reader.readShort();
                    this.osMinorVersion = reader.readShort();
                };
                return AssemblyOS;
            })();
            tables.AssemblyOS = AssemblyOS;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.4 */
            var AssemblyProcessor = (function () {
                function AssemblyProcessor() {
                    this.TableKind = 0x21;
                    this.processor = 0;
                }
                AssemblyProcessor.prototype.reader = function (reader) {
                    this.processor = reader.readInt();
                };
                return AssemblyProcessor;
            })();
            tables.AssemblyProcessor = AssemblyProcessor;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.5 */
            var AssemblyRef = (function () {
                function AssemblyRef() {
                    this.TableKind = 0x23;
                    this.majorVersion = 0;
                    this.minorVersion = 0;
                    this.buildNumber = 0;
                    this.revisionNumber = 0;
                    this.flags = 0;
                    this.publicKeyOrToken = 0;
                    this.name = 0;
                    this.culture = 0;
                    this.hashValue = 0;
                }
                AssemblyRef.prototype.read = function (reader) {
                    this.majorVersion = reader.readShort();
                    this.minorVersion = reader.readShort();
                    this.buildNumber = reader.readShort();
                    this.revisionNumber = reader.readShort();
                    this.flags = reader.readInt();
                    this.publicKeyOrToken = reader.readBlobIndex();
                    this.name = reader.readString();
                    this.culture = reader.readString();
                    this.hashValue = reader.readBlobIndex();
                };
                return AssemblyRef;
            })();
            tables.AssemblyRef = AssemblyRef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.2.6 */
            var AssemblyRefOs = (function () {
                function AssemblyRefOs() {
                    this.TableKind = 0x25;
                    this.osPlatformId = 0;
                    this.osMajorVersion = 0;
                    this.osMinorVersion = 0;
                    this.assemblyRef = 0;
                }
                AssemblyRefOs.prototype.read = function (reader) {
                    this.osPlatformId = reader.readInt();
                    this.osMajorVersion = reader.readInt();
                    this.osMinorVersion = reader.readInt();
                    this.assemblyRef = reader.readAssemblyTableIndex();
                };
                return AssemblyRefOs;
            })();
            tables.AssemblyRefOs = AssemblyRefOs;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.7 */
            var AssemblyRefProcessor = (function () {
                function AssemblyRefProcessor() {
                    this.TableKind = 0x24;
                }
                AssemblyRefProcessor.prototype.read = function (reader) {
                    this.processor = reader.readInt();
                };
                return AssemblyRefProcessor;
            })();
            tables.AssemblyRefProcessor = AssemblyRefProcessor;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.8 */
            var ClassLayout = (function () {
                function ClassLayout() {
                    this.TableKind = 0x0F;
                    this.packingSize = 0;
                    this.classSize = 0;
                    this.parent = 0;
                }
                ClassLayout.prototype.read = function (reader) {
                    this.packingSize = reader.readShort();
                    this.classSize = reader.readInt();
                    this.parent = reader.readTypeDefTableIndex();
                };

                ClassLayout.prototype.complete = function (reader) {
                    var typeDef = reader.lookupTable(2 /* TypeDef */, this.parent);
                    if (typeDef)
                        typeDef.def.layout = { packingSize: this.packingSize, classSize: this.classSize };
                };
                return ClassLayout;
            })();
            tables.ClassLayout = ClassLayout;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.9 */
            var Constant = (function () {
                function Constant() {
                    this.TableKind = 0x0B;
                    this.type = 0;
                    this.parent = 0;
                    this.value = 0;
                }
                Constant.prototype.read = function (reader) {
                    this.type = reader.readByte();
                    var padding = reader.readByte();
                    this.parent = reader.readHasConstant();
                    this.value = reader.readBlobIndex();
                };

                Constant.prototype.complete = function (reader) {
                    var parentDef = reader.lookupHasConstant(this.parent);
                    // TODO: apply constant to parentDef
                };
                return Constant;
            })();
            tables.Constant = Constant;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.10 */
            var CustomAttribute = (function () {
                function CustomAttribute() {
                    this.TableKind = 0x0C;
                    this.parent = 0;
                    this.type = 0;
                    this.value = 0;
                }
                CustomAttribute.prototype.read = function (reader) {
                    this.parent = reader.readHasCustomAttribute();
                    this.type = reader.readCustomAttributeType();
                    this.value = reader.readBlobIndex();
                };

                CustomAttribute.prototype.complete = function (reader) {
                    var attrParent = reader.lookupHasCustomAttribute(this.parent);
                    var attrCtor = reader.lookupCustomAttributeType(this.type);

                    if (attrParent && attrCtor) {
                        if (!attrParent.customAttributes)
                            attrParent.customAttributes = [];

                        // TODO: create full attribute descriptor rather than just constructor
                        attrParent.customAttributes.push(attrCtor);
                    }
                };
                CustomAttribute.fire = true;
                return CustomAttribute;
            })();
            tables.CustomAttribute = CustomAttribute;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.11 */
            var DeclSecurity = (function () {
                function DeclSecurity() {
                    this.action = 0;
                    this.parent = 0;
                    this.permissionSet = 0;
                }
                DeclSecurity.prototype.read = function (reader) {
                    this.action = reader.readShort();
                    this.parent = reader.readHasDeclSecurity();
                    this.permissionSet = reader.readBlobIndex();
                };

                DeclSecurity.prototype.complete = function (reader) {
                    var declSecurityParent = reader.lookupHasCustomAttribute(this.parent);
                    if (declSecurityParent) {
                        var declSecurityParentDef = declSecurityParent.def;
                    }
                };
                return DeclSecurity;
            })();
            tables.DeclSecurity = DeclSecurity;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.13 */
            var Event = (function () {
                function Event() {
                    this.def = new pe.managed.EventInfo();
                    this.eventFlags = 0;
                    this.name = 0;
                    this.eventType = 0;
                }
                Event.prototype.read = function (reader) {
                    this.eventFlags = reader.readShort();
                    this.name = reader.readString();
                    this.eventType = reader.readTypeDefOrRef();
                };
                return Event;
            })();
            tables.Event = Event;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.12 */
            var EventMap = (function () {
                function EventMap() {
                    this.parent = 0;
                    this.eventList = 0;
                }
                EventMap.prototype.read = function (reader) {
                    this.parent = reader.readTypeDefTableIndex();
                    this.eventList = reader.readEventTableIndex();
                };
                return EventMap;
            })();
            tables.EventMap = EventMap;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.14 */
            var ExportedType = (function () {
                function ExportedType() {
                    this.flags = 0;
                    this.typeDefId = 0;
                    this.typeName = 0;
                    this.typeNamespace = 0;
                    this.implementation = 0;
                }
                ExportedType.prototype.read = function (reader) {
                    this.flags = reader.readInt();
                    this.typeDefId = reader.readInt();
                    this.typeName = reader.readString();
                    this.typeNamespace = reader.readString();
                    this.implementation = reader.readImplementation();
                };
                return ExportedType;
            })();
            tables.ExportedType = ExportedType;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.15 */
            var Field = (function () {
                function Field() {
                    this.def = new pe.managed.FieldInfo();
                    this.attributes = 0;
                    this.name = 0;
                    this.signature = 0;
                }
                Field.prototype.read = function (reader) {
                    this.attributes = reader.readShort();
                    this.name = reader.readString();
                    this.signature = reader.readBlobIndex();
                };

                Field.prototype.complete = function (reader) {
                    this.def.attributes = this.attributes;
                    this.def.name = reader.readString(this.name);
                    reader.readFieldSignature(this.def, this.signature);
                };
                return Field;
            })();
            tables.Field = Field;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.8 */
            var FieldLayout = (function () {
                function FieldLayout() {
                    this.TableKind = 0x10;
                    this.offset = 0;
                    this.field = 0;
                }
                FieldLayout.prototype.read = function (reader) {
                    this.offset = reader.readInt();
                    this.field = reader.readFieldTableIndex();
                };
                return FieldLayout;
            })();
            tables.FieldLayout = FieldLayout;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.17 */
            var FieldMarshal = (function () {
                function FieldMarshal() {
                    this.TableKind = 0x0D;
                    this.parent = 0;
                    this.nativeType = 0;
                }
                FieldMarshal.prototype.read = function (reader) {
                    this.parent = reader.readHasFieldMarshal();
                    this.nativeType = reader.readBlobIndex();
                };
                return FieldMarshal;
            })();
            tables.FieldMarshal = FieldMarshal;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.18 */
            var FieldRVA = (function () {
                function FieldRVA() {
                    this.TableKind = 0x1D;
                    this.rva = 0;
                    this.field = 0;
                }
                FieldRVA.prototype.read = function (reader) {
                    this.rva = reader.readInt();
                    this.field = reader.readFieldTableIndex();
                };
                return FieldRVA;
            })();
            tables.FieldRVA = FieldRVA;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.19 */
            var File = (function () {
                function File() {
                    this.TableKind = 0x26;
                    this.flags = 0;
                    this.name = 0;
                    this.hashValue = 0;
                }
                File.prototype.read = function (reader) {
                    this.flags = reader.readInt();
                    this.name = reader.readString();
                    this.hashValue = reader.readBlobIndex();
                };
                return File;
            })();
            tables.File = File;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.20 */
            var GenericParam = (function () {
                function GenericParam() {
                    this.TableKind = 0x2A;
                    this.number = 0;
                    this.flags = 0;
                    this.owner = 0;
                    this.name = 0;
                }
                GenericParam.prototype.read = function (reader) {
                    this.number = reader.readShort();
                    this.flags = reader.readShort();
                    this.owner = reader.readTypeOrMethodDef();
                    this.name = reader.readString();
                };
                return GenericParam;
            })();
            tables.GenericParam = GenericParam;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.21 */
            var GenericParamConstraint = (function () {
                function GenericParamConstraint() {
                    this.owner = 0;
                    this.constraint = 0;
                }
                GenericParamConstraint.prototype.read = function (reader) {
                    this.owner = reader.readGenericParamTableIndex();
                    this.constraint = reader.readTypeDefOrRef();
                };
                return GenericParamConstraint;
            })();
            tables.GenericParamConstraint = GenericParamConstraint;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.22 */
            var ImplMap = (function () {
                function ImplMap() {
                    this.TableKind = 0x1C;
                    this.mappingFlags = 0;
                    this.memberForwarded = 0;
                    this.importName = 0;
                    this.importScope = 0;
                }
                ImplMap.prototype.read = function (reader) {
                    this.mappingFlags = reader.readShort();
                    this.memberForwarded = reader.readMemberForwarded();
                    this.importName = reader.readString();
                    this.importScope = reader.readModuleRefTableIndex();
                };
                return ImplMap;
            })();
            tables.ImplMap = ImplMap;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.33 */
            var InterfaceImpl = (function () {
                function InterfaceImpl() {
                    this.class = 0;
                    this.interface = 0;
                }
                InterfaceImpl.prototype.read = function (reader) {
                    this.class = reader.readTypeDefTableIndex();
                    this.interface = reader.readTypeDefOrRef();
                };
                return InterfaceImpl;
            })();
            tables.InterfaceImpl = InterfaceImpl;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.24 */
            var ManifestResource = (function () {
                function ManifestResource() {
                    this.offset = 0;
                    this.flags = 0;
                    this.name = 0;
                    this.implementation = 0;
                }
                ManifestResource.prototype.read = function (reader) {
                    this.offset = reader.readInt();
                    this.flags = reader.readInt();
                    this.name = reader.readString();
                    this.implementation = reader.readImplementation();
                };
                return ManifestResource;
            })();
            tables.ManifestResource = ManifestResource;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.25 */
            var MemberRef = (function () {
                function MemberRef() {
                    this.TableKind = 0x0A;
                    this.def = null;
                    this.class = 0;
                    this.name = 0;
                    this.signature = 0;
                }
                MemberRef.prototype.read = function (reader) {
                    this.class = reader.readMemberRefParent();
                    this.name = reader.readString();
                    this.signature = reader.readBlobIndex();
                };
                return MemberRef;
            })();
            tables.MemberRef = MemberRef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.26 */
            var MethodDef = (function () {
                function MethodDef() {
                    this.def = new pe.managed.MethodInfo();
                    this.rva = 0;
                    this.implAttributes = 0;
                    this.attributes = 0;
                    this.name = 0;
                    this.signature = 0;
                    this.paramList = 0;
                }
                MethodDef.prototype.read = function (reader) {
                    this.rva = reader.readInt();
                    this.implAttributes = reader.readShort();
                    this.attributes = reader.readShort();
                    this.name = reader.readString();
                    this.signature = reader.readBlobIndex();
                    this.paramList = reader.readParamTableIndex();
                };

                MethodDef.prototype.complete = function (reader, nextMethodDef) {
                    this.def.attributes = this.attributes;
                    this.def.name = reader.readString(this.name);

                    var nextParamList;
                    if (nextMethodDef)
                        nextParamList = nextMethodDef.paramList;
                    reader.copyParamRange(this.def.parameters, this.paramList, nextParamList);
                };
                return MethodDef;
            })();
            tables.MethodDef = MethodDef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.27 */
            var MethodImpl = (function () {
                function MethodImpl() {
                    this.TableKind = 0x19;
                    this.class = 0;
                    this.methodBody = 0;
                    this.methodDeclaration = 0;
                }
                MethodImpl.prototype.read = function (reader) {
                    this.class = reader.readTypeDefTableIndex();
                    this.methodBody = reader.readMethodDefOrRef();
                    this.methodDeclaration = reader.readMethodDefOrRef();
                };
                return MethodImpl;
            })();
            tables.MethodImpl = MethodImpl;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.28 */
            var MethodSemantics = (function () {
                function MethodSemantics() {
                    this.TableKind = 0x18;
                    this.semantics = 0;
                    this.method = 0;
                    this.association = 0;
                }
                MethodSemantics.prototype.read = function (reader) {
                    this.semantics = reader.readShort();
                    this.method = reader.readMethodDefTableIndex();
                    this.association = reader.readHasSemantics();
                };
                return MethodSemantics;
            })();
            tables.MethodSemantics = MethodSemantics;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.29 */
            var MethodSpec = (function () {
                function MethodSpec() {
                    this.method = 0;
                    this.instantiation = 0;
                }
                MethodSpec.prototype.read = function (reader) {
                    this.method = reader.readMethodDefOrRef();
                    this.instantiation = reader.readBlobIndex();
                };
                return MethodSpec;
            })();
            tables.MethodSpec = MethodSpec;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.30 */
            var Module = (function () {
                function Module() {
                    this.def = { generation: 0, moduleName: '', mvid: '', encId: '', encBaseId: '' };
                    this.generation = 0;
                    this.name = 0;
                    this.mvid = 0;
                    this.encId = 0;
                    this.encBaseId = 0;
                }
                Module.prototype.read = function (reader) {
                    this.generation = reader.readShort();
                    this.name = reader.readString();
                    this.mvid = reader.readGuid();
                    this.encId = reader.readGuid();
                    this.encBaseId = reader.readGuid();
                };

                Module.prototype.complete = function (reader) {
                    this.def.generation = this.generation;
                    this.def.moduleName = reader.readString(this.name);
                    this.def.mvid = reader.readGuid(this.mvid);
                    this.def.encId = reader.readGuid(this.encId);
                    this.def.encBaseId = reader.readGuid(this.encBaseId);
                };
                return Module;
            })();
            tables.Module = Module;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.31 */
            var ModuleRef = (function () {
                function ModuleRef() {
                    this.name = 0;
                }
                ModuleRef.prototype.read = function (reader) {
                    this.name = reader.readString();
                };
                return ModuleRef;
            })();
            tables.ModuleRef = ModuleRef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.32 */
            var NestedClass = (function () {
                function NestedClass() {
                    this.nestedClass = 0;
                    this.enclosingClass = 0;
                }
                NestedClass.prototype.read = function (reader) {
                    this.nestedClass = reader.readTypeDefTableIndex();
                    this.enclosingClass = reader.readTypeDefTableIndex();
                };
                return NestedClass;
            })();
            tables.NestedClass = NestedClass;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.33 */
            var Param = (function () {
                function Param() {
                    this.def = new pe.managed.ParameterInfo();
                    this.flags = 0;
                    this.sequence = 0;
                    this.name = 0;
                }
                Param.prototype.read = function (reader) {
                    this.flags = reader.readShort();
                    this.sequence = reader.readShort();
                    this.name = reader.readString();
                };

                Param.prototype.complete = function (reader) {
                    this.def.name = reader.readString(this.name);
                    this.def.attributes = this.flags;
                };
                return Param;
            })();
            tables.Param = Param;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.34 */
            var Property = (function () {
                function Property() {
                    this.def = new pe.managed.PropertyInfo();
                    this.flags = 0;
                    this.name = 0;
                    this.type = 0;
                }
                Property.prototype.read = function (reader) {
                    this.flags = reader.readShort();
                    this.name = reader.readString();
                    this.type = reader.readBlobIndex();
                };

                Property.prototype.complete = function (reader) {
                    this.def.name = reader.readString(this.name);
                    this.def.attributes = this.flags;
                    //this.def.propertyType = reader.
                };
                return Property;
            })();
            tables.Property = Property;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.35 */
            var PropertyMap = (function () {
                function PropertyMap() {
                    this.parent = 0;
                    this.propertyList = 0;
                }
                PropertyMap.prototype.read = function (reader) {
                    this.parent = reader.readTypeDefTableIndex();
                    this.propertyList = reader.readPropertyTableIndex();
                };
                return PropertyMap;
            })();
            tables.PropertyMap = PropertyMap;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.36 */
            var StandAloneSig = (function () {
                function StandAloneSig() {
                    this.signature = 0;
                }
                StandAloneSig.prototype.read = function (reader) {
                    this.signature = reader.readBlobIndex();
                };
                return StandAloneSig;
            })();
            tables.StandAloneSig = StandAloneSig;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.37 */
            var TypeDef = (function () {
                function TypeDef() {
                    this.def = new pe.managed.Type();
                    this.flags = 0;
                    this.name = 0;
                    this.namespace = 0;
                    this.extends = 0;
                    this.fieldList = 0;
                    this.methodList = 0;
                }
                TypeDef.prototype.read = function (reader) {
                    this.flags = reader.readInt();
                    this.name = reader.readString();
                    this.namespace = reader.readString();
                    this.extends = reader.readTypeDefOrRef();

                    this.fieldList = reader.readFieldTableIndex();
                    this.methodList = reader.readMethodDefTableIndex();
                };

                TypeDef.prototype.complete = function (reader, nextTypeDef) {
                    this.def.attributes = this.flags;
                    this.def.name = reader.readString(this.name);
                    this.def.namespace = reader.readString(this.namespace);
                    this.def.baseType = reader.lookupTypeDefOrRef(this.extends);

                    var nextFieldList;
                    if (nextTypeDef)
                        nextFieldList = nextTypeDef.fieldList;
                    reader.copyFieldRange(this.def.fields, this.fieldList, nextFieldList);

                    var nextMethodList;
                    if (nextTypeDef)
                        nextMethodList = nextTypeDef.methodList;
                    reader.copyMethodRange(this.def.methods, this.methodList, nextMethodList);
                };
                TypeDef.oneAlert = true;
                return TypeDef;
            })();
            tables.TypeDef = TypeDef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.38 */
            var TypeRef = (function () {
                function TypeRef() {
                    this.def = null;
                    this.resolutionScope = 0;
                    this.name = 0;
                    this.namespace = 0;
                }
                TypeRef.prototype.read = function (reader) {
                    this.resolutionScope = reader.readResolutionScope();
                    this.name = reader.readString();
                    this.namespace = reader.readString();
                };

                TypeRef.prototype.complete = function (reader) {
                    var resolutionScope = reader.lookupResolutionScope(this.resolutionScope);
                    var name = reader.readString(this.name);
                    var namespace = reader.readString(this.namespace);
                    this.def = reader.resolveTypeReference(resolutionScope, namespace, name);
                };
                return TypeRef;
            })();
            tables.TypeRef = TypeRef;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (tables) {
            /** ECMA-335 II.22.39 */
            var TypeSpec = (function () {
                function TypeSpec() {
                    this.def = new pe.managed.ConstructedGenericType();
                    this.signature = 0;
                }
                TypeSpec.prototype.read = function (reader) {
                    this.signature = reader.readBlobIndex();

                    // TODO: populate correctly
                    var fakeType = new pe.managed.Type();
                    fakeType.name = 'fake*' + this.signature + '*';
                    this.def.genericType = fakeType;
                };
                return TypeSpec;
            })();
            tables.TypeSpec = TypeSpec;
        })(managed.tables || (managed.tables = {}));
        var tables = managed.tables;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (unmanaged) {
        var DllExport = (function () {
            function DllExport() {
            }
            DllExport.readExports = function (reader, range) {
                var result = [];

                result.flags = reader.readInt();
                if (!result.timestamp)
                    result.timestamp = new Date(0);

                result.timestamp.setTime(reader.readInt() * 1000);

                var majorVersion = reader.readShort();
                var minorVersion = reader.readShort();
                result.version = majorVersion + "." + minorVersion;

                // need to read string from that RVA later
                var nameRva = reader.readInt();

                result.ordinalBase = reader.readInt();

                // The number of entries in the export address table.
                var addressTableEntries = reader.readInt();

                // The number of entries in the name pointer table. This is also the number of entries in the ordinal table.
                var numberOfNamePointers = reader.readInt();

                // The address of the export address table, relative to the image base.
                var exportAddressTableRva = reader.readInt();

                // The address of the export name pointer table, relative to the image base.
                // The table size is given by the Number of Name Pointers field.
                var namePointerRva = reader.readInt();

                // The address of the ordinal table, relative to the image base.
                var ordinalTableRva = reader.readInt();

                if (nameRva == 0) {
                    result.dllName = null;
                } else {
                    var saveOffset = reader.offset;
                    reader.setVirtualOffset(nameRva);
                    result.dllName = reader.readAsciiZ();
                    reader.offset = saveOffset;
                }

                result.length = addressTableEntries;

                for (var i = 0; i < addressTableEntries; i++) {
                    var exportEntry = new DllExport();
                    exportEntry.readExportEntry(reader, range);
                    exportEntry.ordinal = i + result.ordinalBase;
                    result[i] = exportEntry;
                }

                if (numberOfNamePointers != 0 && namePointerRva != 0 && ordinalTableRva != 0) {
                    saveOffset = reader.offset;
                    for (var i = 0; i < numberOfNamePointers; i++) {
                        reader.setVirtualOffset(ordinalTableRva + 2 * i);
                        var ordinal = reader.readShort();

                        reader.setVirtualOffset(namePointerRva + 4 * i);
                        var functionNameRva = reader.readInt();

                        var functionName;
                        if (functionNameRva == 0) {
                            functionName = null;
                        } else {
                            reader.setVirtualOffset(functionNameRva);
                            functionName = reader.readAsciiZ();
                        }

                        result[ordinal].name = functionName;
                    }
                    reader.offset = saveOffset;
                }

                return result;
            };

            DllExport.prototype.readExportEntry = function (reader, range) {
                var exportOrForwarderRva = reader.readInt();

                if (range.mapRelative(exportOrForwarderRva) >= 0) {
                    this.exportRva = 0;

                    var forwarderRva = reader.readInt();
                    if (forwarderRva == 0) {
                        this.forwarder = null;
                    } else {
                        var saveOffset = reader.offset;
                        reader.setVirtualOffset(forwarderRva);
                        this.forwarder = reader.readAsciiZ();
                        reader.offset = saveOffset;
                    }
                } else {
                    this.exportRva = reader.readInt();
                    this.forwarder = null;
                }

                this.name = null;
            };
            return DllExport;
        })();
        unmanaged.DllExport = DllExport;
    })(pe.unmanaged || (pe.unmanaged = {}));
    var unmanaged = pe.unmanaged;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (unmanaged) {
        var DllImport = (function () {
            function DllImport() {
                this.name = "";
                this.ordinal = 0;
                this.dllName = "";
                this.timeDateStamp = new Date(0);
            }
            DllImport.read = function (reader, result) {
                if (!result)
                    result = [];

                var readLength = 0;
                while (true) {
                    var originalFirstThunk = reader.readInt();
                    var timeDateStamp = new Date(0);
                    timeDateStamp.setTime(reader.readInt());

                    var forwarderChain = reader.readInt();
                    var nameRva = reader.readInt();
                    var firstThunk = reader.readInt();

                    var thunkAddressPosition = originalFirstThunk == 0 ? firstThunk : originalFirstThunk;
                    if (thunkAddressPosition == 0)
                        break;

                    var saveOffset = reader.offset;

                    var libraryName;
                    if (nameRva === 0) {
                        libraryName = null;
                    } else {
                        reader.setVirtualOffset(nameRva);
                        libraryName = reader.readAsciiZ();
                    }

                    reader.setVirtualOffset(thunkAddressPosition);

                    while (true) {
                        var newEntry = result[readLength];
                        if (!newEntry) {
                            newEntry = new DllImport();
                            result[readLength] = newEntry;
                        }

                        if (!newEntry.readEntry(reader))
                            break;

                        newEntry.dllName = libraryName;
                        newEntry.timeDateStamp = timeDateStamp;
                        readLength++;
                    }

                    reader.offset = saveOffset;
                }

                result.length = readLength;

                return result;
            };

            DllImport.prototype.readEntry = function (reader) {
                var importPosition = reader.readInt();
                if (importPosition == 0)
                    return false;

                if (importPosition & (1 << 31)) {
                    this.ordinal = importPosition & 0x7FFFFFFF;
                    this.name = null;
                } else {
                    var saveOffset = reader.offset;
                    reader.setVirtualOffset(importPosition);

                    var hint = reader.readShort();
                    var fname = reader.readAsciiZ();

                    this.ordinal = hint;
                    this.name = fname;

                    reader.offset = saveOffset;
                }

                return true;
            };
            return DllImport;
        })();
        unmanaged.DllImport = DllImport;
    })(pe.unmanaged || (pe.unmanaged = {}));
    var unmanaged = pe.unmanaged;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (unmanaged) {
        var ResourceDataEntry = (function () {
            function ResourceDataEntry() {
                this.name = "";
                this.integerId = 0;
                this.dataRva = 0;
                this.size = 0;
                this.codepage = 0;
                this.reserved = 0;
            }
            ResourceDataEntry.prototype.toString = function () {
                return (this.name ? this.name + " " : "") + this.integerId;
            };
            return ResourceDataEntry;
        })();
        unmanaged.ResourceDataEntry = ResourceDataEntry;
    })(pe.unmanaged || (pe.unmanaged = {}));
    var unmanaged = pe.unmanaged;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (unmanaged) {
        var ResourceDirectory = (function () {
            function ResourceDirectory() {
                /** Resource flags. This field is reserved for future use. It is currently set to zero. */
                this.characteristics = 0;
                /** The time that the resource data was created by the resource compiler. */
                this.timestamp = new Date(0);
                /** The version number, set by the user. */
                this.version = "";
                this.subdirectories = [];
                this.dataEntries = [];
            }
            ResourceDirectory.prototype.toString = function () {
                return "subdirectories[" + (this.subdirectories ? this.subdirectories.length : "null") + "] " + "dataEntries[" + (this.dataEntries ? this.dataEntries.length : "null") + "]";
            };

            ResourceDirectory.prototype.read = function (reader) {
                var baseVirtualOffset = reader.getVirtualOffset();
                this.readCore(reader, baseVirtualOffset);
            };

            ResourceDirectory.prototype.readCore = function (reader, baseVirtualOffset) {
                this.characteristics = reader.readInt();

                if (!this.timestamp)
                    this.timestamp = new Date(0);
                this.timestamp.setTime(reader.readInt() * 1000);

                this.version = reader.readShort() + "." + reader.readShort();
                var nameEntryCount = reader.readShort();
                var idEntryCount = reader.readShort();

                var dataEntryCount = 0;
                var directoryEntryCount = 0;

                for (var i = 0; i < nameEntryCount + idEntryCount; i++) {
                    var idOrNameRva = reader.readInt();
                    var contentRva = reader.readInt();

                    var saveOffset = reader.offset;

                    var name;
                    var id;

                    var highBit = 0x80000000;

                    if (idOrNameRva < highBit) {
                        id = idOrNameRva;
                        name = null;
                    } else {
                        id = 0;
                        reader.setVirtualOffset(baseVirtualOffset + idOrNameRva - highBit);
                        name = this.readName(reader);
                    }

                    if (contentRva < highBit) {
                        reader.setVirtualOffset(baseVirtualOffset + contentRva);

                        var dataEntry = this.dataEntries[dataEntryCount];
                        if (!dataEntry)
                            this.dataEntries[dataEntryCount] = dataEntry = new pe.unmanaged.ResourceDataEntry();

                        dataEntry.name = name;
                        dataEntry.integerId = id;

                        dataEntry.dataRva = reader.readInt();
                        dataEntry.size = reader.readInt();
                        dataEntry.codepage = reader.readInt();
                        dataEntry.reserved = reader.readInt();

                        dataEntryCount++;
                    } else {
                        contentRva = contentRva - highBit; // clear hight bit
                        reader.setVirtualOffset(baseVirtualOffset + contentRva);

                        var directoryEntry = this.subdirectories[directoryEntryCount];
                        if (!directoryEntry)
                            this.subdirectories[directoryEntryCount] = directoryEntry = new pe.unmanaged.ResourceDirectoryEntry();

                        directoryEntry.name = name;
                        directoryEntry.integerId = id;

                        directoryEntry.directory = new ResourceDirectory();
                        directoryEntry.directory.readCore(reader, baseVirtualOffset);

                        directoryEntryCount++;
                    }
                }

                this.dataEntries.length = dataEntryCount;
                this.subdirectories.length = directoryEntryCount;
            };

            ResourceDirectory.prototype.readName = function (reader) {
                var length = reader.readShort();
                var result = "";

                for (var i = 0; i < length; i++) {
                    result += String.fromCharCode(reader.readShort());
                }

                return result;
            };
            return ResourceDirectory;
        })();
        unmanaged.ResourceDirectory = ResourceDirectory;
    })(pe.unmanaged || (pe.unmanaged = {}));
    var unmanaged = pe.unmanaged;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (unmanaged) {
        var ResourceDirectoryEntry = (function () {
            function ResourceDirectoryEntry() {
                this.name = "";
                this.integerId = 0;
                this.directory = new pe.unmanaged.ResourceDirectory();
            }
            ResourceDirectoryEntry.prototype.toString = function () {
                return (this.name ? this.name + " " : "") + this.integerId + (this.directory ? "[" + (this.directory.dataEntries ? this.directory.dataEntries.length : 0) + (this.directory.subdirectories ? this.directory.subdirectories.length : 0) + "]" : "[null]");
            };
            return ResourceDirectoryEntry;
        })();
        unmanaged.ResourceDirectoryEntry = ResourceDirectoryEntry;
    })(pe.unmanaged || (pe.unmanaged = {}));
    var unmanaged = pe.unmanaged;
})(pe || (pe = {}));
var pe;
(function (pe) {
    (function (managed) {
        (function (metadata) {
            var CodedIndexReaders = (function () {
                function CodedIndexReaders(_tables) {
                    this._tables = _tables;
                    this.resolutionScope = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        0 /* Module */,
                        26 /* ModuleRef */,
                        35 /* AssemblyRef */,
                        1 /* TypeRef */
                    ]);
                    this.typeDefOrRef = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        2 /* TypeDef */,
                        1 /* TypeRef */,
                        27 /* TypeSpec */
                    ]);
                    this.hasConstant = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        4 /* Field */,
                        8 /* Param */,
                        23 /* Property */
                    ]);
                    this.hasCustomAttribute = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        6 /* MethodDef */,
                        4 /* Field */,
                        1 /* TypeRef */,
                        2 /* TypeDef */,
                        8 /* Param */,
                        9 /* InterfaceImpl */,
                        10 /* MemberRef */,
                        0 /* Module */,
                        0xFF,
                        23 /* Property */,
                        20 /* Event */,
                        17 /* StandAloneSig */,
                        26 /* ModuleRef */,
                        27 /* TypeSpec */,
                        32 /* Assembly */,
                        35 /* AssemblyRef */,
                        38 /* File */,
                        39 /* ExportedType */,
                        40 /* ManifestResource */,
                        42 /* GenericParam */,
                        44 /* GenericParamConstraint */,
                        43 /* MethodSpec */
                    ]);
                    this.customAttributeType = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        0xFF,
                        0xFF,
                        6 /* MethodDef */,
                        10 /* MemberRef */,
                        0xFF
                    ]);
                    this.hasDeclSecurity = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        2 /* TypeDef */,
                        6 /* MethodDef */,
                        32 /* Assembly */
                    ]);
                    this.implementation = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        38 /* File */,
                        35 /* AssemblyRef */,
                        39 /* ExportedType */
                    ]);
                    this.hasFieldMarshal = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        4 /* Field */,
                        8 /* Param */
                    ]);
                    this.typeOrMethodDef = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        2 /* TypeDef */,
                        6 /* MethodDef */
                    ]);
                    this.memberForwarded = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        4 /* Field */,
                        6 /* MethodDef */
                    ]);
                    this.memberRefParent = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        2 /* TypeDef */,
                        1 /* TypeRef */,
                        26 /* ModuleRef */,
                        6 /* MethodDef */,
                        27 /* TypeSpec */
                    ]);
                    this.methodDefOrRef = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        6 /* MethodDef */,
                        10 /* MemberRef */
                    ]);
                    this.hasSemantics = new pe.managed.metadata.CodedIndexReader(this._tables, [
                        20 /* Event */,
                        23 /* Property */
                    ]);
                }
                return CodedIndexReaders;
            })();
            metadata.CodedIndexReaders = CodedIndexReaders;
        })(managed.metadata || (managed.metadata = {}));
        var metadata = managed.metadata;
    })(pe.managed || (pe.managed = {}));
    var managed = pe.managed;
})(pe || (pe = {}));

</script>


<!-- Sample binary encoded -->
<script id="data00" type="text/base64"></script>
<script id="data01" type="text/base64">